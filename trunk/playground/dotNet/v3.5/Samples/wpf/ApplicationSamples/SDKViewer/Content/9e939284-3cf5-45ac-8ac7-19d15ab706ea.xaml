<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_9e939284_3cf5_45ac_8ac7_19d15ab706ea"
  Tag     ="Inline Code Within XAML Files"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <!--///////////////////////////////////////////////////////////////////////////////// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.///////////////////////////////////////////////////////////////////////////////-->
  <cc:SdkSinglePageViewer
    Name    ="_9e939284_3cf5_45ac_8ac7_19d15ab706ea"
    Tag     ="Inline Code Within XAML Files"
    xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
    xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
      <Table>
        <TableRowGroup>
          <TableRow>
            <TableCell>
              <Paragraph FontSize="22"><Run>Inline Code Within XAML Files</Run>

              </Paragraph>

            </TableCell>

          </TableRow>

        </TableRowGroup>

      </Table>

      <Paragraph><Run Foreground="DarkGray">[The content included in this documentation is a sub-set of the Windows SDK, and may not be complete or current. Please see the online Windows SDK for current documentation.]</Run>

      </Paragraph>

      <Paragraph/>
      <Paragraph>XAML defines an attribute that can be used to write inline code within a XAML file. Windows Presentation Foundation supports this attribute and inline code, but you should be aware that inline code in has some notable limitations, which are documented in this topic.    
      </Paragraph>

      <Paragraph FontSize="22">x:Code    
      </Paragraph>

      <Paragraph><Run FontWeight="Bold">x:Code</Run>
 is a directive element defined in XAML that can contain inline programming code. The code that is defined inline can interact with the XAML on the same page. The following example illustrates inline C# code. Notice that the code is inside the <Run FontWeight="Bold">x:Code</Run>
 element and that the code must be surrounded by <Run FontWeight="Bold">
&lt;CDATA[</Run>
...<Run FontWeight="Bold">]]&gt;</Run>
 to escape it for XML, so that a XAML reader (interpreting either the XAML schema or the Windows Presentation Foundation schema) will not try to interpret the code literally.    
      </Paragraph>

      <Table>
        <TableRowGroup>
          <TableRow>
            <TableCell>
              <Paragraph FontSize="22"><Run>XAML </Run>

              </Paragraph>

            </TableCell>

          </TableRow>

          <TableRow>
            <TableCell>
              <Paragraph TextAlignment="Left" FontSize="8pt" FontFamily="Courier New" xml:space="preserve"><Run>
&lt;Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="MyNamespace.MyCanvasCodeInline" > 
&lt;Button Name="button1" Click="Clicked">Click Me!
&lt;/Button> 
&lt;x:Code>
&lt;![CDATA[ void Clicked(object sender, RoutedEventArgs e){ button1.Content = "Hello World";} ]]&gt;
&lt;/x:Code> 
&lt;/Canvas> </Run>
            
              </Paragraph>

            </TableCell>

          </TableRow>

        </TableRowGroup>

      </Table>

      <Paragraph><Run/>
      </Paragraph>

      <Paragraph FontSize="22">Inline Code Limitations    
      </Paragraph>

      <Paragraph>You should consider avoiding or limiting the use of inline code for a XAML based application. In terms of architecture and coding philosophy, keeping markup and code-behind separated also keeps the designer and developer roles much more distinct. On a more technical level, the code that you put inline can be awkward to write, because you are always writing into the XAML page's generated partial class, and can only use the default namespace mappings. Because you cannot add <Run FontWeight="Bold">using</Run>
 statements, you must fully qualify many of the API calls that you make. The default Windows Presentation Foundation mappings include most but not all CLR namespaces that are present in the Windows Presentation Foundation assemblies;you will have to fully qualify calls to contained within the other namespaces. You also cannot define multiple classes in the inline code, and all code entities must exist as a member or variable within the generated partial class. Other language specific programming features, such as <Run FontWeight="Bold">#ifdef</Run>
 against global variables or build variables, are also not available. For more information, see <Hyperlink NavigateUri="87986b13-1a2e-4830-ae36-15f9dc5629e8.xaml">x:Code XAML Directive Element</Hyperlink>
.    
      </Paragraph>

      <Paragraph FontSize="22"><Run>See Also</Run>

      </Paragraph>

      <Paragraph FontSize="16pt">Reference    
      </Paragraph>

      <Paragraph><Hyperlink NavigateUri="87986b13-1a2e-4830-ae36-15f9dc5629e8.xaml">x:Code XAML Directive Element</Hyperlink>

        <LineBreak/>
      </Paragraph>

      <Paragraph FontSize="16pt">Concepts    
      </Paragraph>

      <Paragraph><Hyperlink NavigateUri="a80db4cd-dd0f-479f-a45f-3740017c22e4.xaml">XAML Overview</Hyperlink>

        <LineBreak/><Hyperlink NavigateUri="aefbe9d1-2bca-4bbb-9406-796980eeca63.xaml">Creating, Building, Deploying, and Launching WPF Applications</Hyperlink>

        <LineBreak/>
        <LineBreak/>
      </Paragraph>

      <Paragraph/>
      <Paragraph/>
      <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Inline Code Within XAML Files  to Microsoft. </Span>

      </Paragraph>

    </FlowDocument>

  </cc:SdkSinglePageViewer>

</cc:SdkSinglePageViewer>

