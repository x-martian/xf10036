<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_06cbf17b_6eff_4fe5_949d_2dd533e4e1f4"
  Tag     ="Typography in Windows Presentation Foundation"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Typography in Windows Presentation Foundation</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This topic introduces the major typographic features of WPF. These features include improved quality and performance of text rendering, rich typography support, enhanced international text, enhanced font support, and new text application programming interfaces (APIs).
    </Paragraph>

    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="Improved_Quality_and_Performance_of_Text">Improved Quality and Performance of Text</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Rich_Typography">Rich Typography</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Enhanced_International_Text_Support">Enhanced International Text Support</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Enhanced_Font_Support">Enhanced Font Support</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="New_Text_APIs">New Text Application Programming Interfaces (APIs)</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Improved Quality and Performance of Text
    </Paragraph>

    <Paragraph>Text in WPF is rendered using ClearType, which enhances the clarity and readability of text. ClearType is a software technology developed by Microsoft that improves the readability of text on existing LCDs (Liquid Crystal Displays), such as laptop screens, Pocket PC screens and flat panel monitors. ClearType uses sub-pixel rendering which allows text to be displayed with a greater fidelity to its true shape by aligning characters on a fractional part of a pixel. The extra resolution increases the sharpness of the tiny details in text display, making it much easier to read over long durations. Another improvement of ClearType in WPF is y-direction anti-aliasing, which smoothes the tops and bottoms of shallow curves in text characters. For more details on ClearType features, see <Hyperlink NavigateUri="7e2392e0-75dc-463d-a716-908772782431.xaml">ClearType Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>The entire text rendering pipeline can be hardware-accelerated in WPF provided your machine meets the minimum level of hardware required. Rendering that cannot be performed using hardware falls back to software rendering. Hardware-acceleration affects all phases of the text rendering pipeline—from storing individual glyphs, compositing glyphs into glyph runs, applying effects, to applying the ClearType blending algorithm to the final displayed output.
    </Paragraph>

    <Paragraph/>
    <Paragraph>In addition, animated text, whether by character or glyph, takes full advantage of Microsoft DirectX hardware support. This results in smooth text animation.
    </Paragraph>

    <Paragraph FontSize="22">Rich Typography
    </Paragraph>

    <Paragraph>The OpenType font format is an extension of the TrueType® font format. The OpenType font format was developed jointly by Microsoft and Adobe, and provides a rich assortment of advanced typographic features. The Typography object exposes many of the advanced features of OpenType fonts, such as stylistic alternates and swashes. The Windows SDK provides a set of sample OpenType fonts that are designed with rich features, such as the Pericles and Pescadero fonts.
    </Paragraph>

    <Paragraph>The Pericles OpenType font contains additional glyphs that provide stylistic alternates to the standard set of glyphs. The following text displays stylistic alternate glyphs.
    </Paragraph>

    <Paragraph>Swashes are decorative glyphs that use elaborate ornamentation often associated with calligraphy. The following text displays standard and swash glyphs for the Pescadero font.
    </Paragraph>

    <Paragraph>For more details on OpenType features, see <Hyperlink NavigateUri="4061a9d1-fe8b-4921-9e17-18ec7d2e3ea2.xaml">OpenType Font Features</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22">Enhanced International Text Support
    </Paragraph>

    <Paragraph>WPF provides enhanced international text support by providing the following features:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Automatic line-spacing in all writing systems, using adaptive measurement.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Broader support for international text.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Language-guided line breaking, hyphenation, and justification. 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Enhanced Font Support
    </Paragraph>

    <Paragraph>WPF provides enhanced font support by providing the following features:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Unicode for all text. Font behavior and selection no longer require charset or codepage.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Font behavior independent of global settings, such as system locale.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Variants of weight, stretch, and style now one font family, extending beyond the Win32 Boolean combinations of italic and bold as part of the same family.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Writing direction (horizontal versus vertical) handled independent of font name.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Font linking and font fallback in a portable XML file, using composite font technology.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>International fonts built from composite fonts, using a group of single-language fonts. This saves on resource costs when developing fonts for multiple languages.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Composite fonts embedded in a document, thereby providing document portability.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">New Text Application Programming Interfaces (APIs)
    </Paragraph>

    <Paragraph>WPF provides several text APIs for developers to use when including text in their applications. These APIs are grouped into three categories:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Run FontWeight="Bold">Layout and user interface</Run>
. The common text controls for the graphical user interface (GUI).
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Run FontWeight="Bold">Lightweight text drawing</Run>
. Allows you to draw text directly to objects.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Run FontWeight="Bold">Advanced text formatting</Run>
. Allows you to implement a custom text engine.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="18">Layout and User Interface
    </Paragraph>

    <Paragraph>At the highest level of functionality, the text APIs provide common user interface (UI) controls such as Label, TextBlock, and TextBox. These controls provide the basic UI elements within an application, and offer an easy way to present and interact with text. Controls such as RichTextBox and PasswordBox enable more advanced or specialized text-handling. And classes such as TextRange, TextSelection, and TextPointer enable useful text manipulation. These UI controls provide properties such as FontFamily, FontSize, and FontStyle, which enable you to control the font that is used to render the text. 
    </Paragraph>

    <Paragraph>In addition to the common UI controls, WPF offers a layout control for text presentation—the FlowDocument element. The FlowDocument element, in conjunction with the DocumentViewer element, provides a control for large amounts of text with varying layout requirements. Layout controls provide access to advanced typography through the Typography property and font-related properties of other UI controls.
    </Paragraph>

    <Paragraph FontSize="18">Lightweight Text Drawing
    </Paragraph>

    <Paragraph>You can draw text directly to WPF objects by using the DrawText method of the DrawingContext object. To use this method, you create a FormattedText object. This object allows you to draw multi-line text, in which each character in the text can be individually formatted. The functionality of the <Run FontWeight="Bold">FormattedText</Run>
 object contains much of the functionality of the DrawText flags in the Win32 API. In addition, the <Run FontWeight="Bold">FormattedText</Run>
 object contains functionality such as ellipsis support, in which an ellipsis is displayed when text exceeds its bounds. The following example shows text that has several formats applied to it, including a linear gradient on the second and third words.
    </Paragraph>

    <Paragraph/>
    <Paragraph>For more information on the <Run FontWeight="Bold">FormattedText</Run>
 object, see <Hyperlink NavigateUri="b1d851c1-331c-4814-9964-6fe769db6f1f.xaml">Drawing Formatted Text</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="18">Advanced Text Formatting
    </Paragraph>

    <Paragraph>At the most advanced level of the text APIs, WPF offers you the ability to create a custom text engine by using the TextFormatter object and other types in the System.Windows.Media.TextFormatting namespace. The <Run FontWeight="Bold">TextFormatter</Run>
 and associated classes allow you to implement a custom text engine that supports your own definition of character formats, paragraph styles, line breaking rules, and layout for international text. There are very few cases in which you would want to override the default implementation of the WPF text engine. However, if you were creating a text editing control or application, you might require a different implementation than the default. For more details on creating a custom text engine, see <Hyperlink NavigateUri="f0a7986e-f5b2-485c-a27d-f8e922022212.xaml">Advanced Text Formatting</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="7e2392e0-75dc-463d-a716-908772782431.xaml">ClearType Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="4061a9d1-fe8b-4921-9e17-18ec7d2e3ea2.xaml">OpenType Font Features</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="b1d851c1-331c-4814-9964-6fe769db6f1f.xaml">Drawing Formatted Text</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="f0a7986e-f5b2-485c-a27d-f8e922022212.xaml">Advanced Text Formatting</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="http://www.microsoft.com/typography/default.mspx">Microsoft Typography</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Typography in Windows Presentation Foundation to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

