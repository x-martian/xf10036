<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_5ab75911_e36a_4825_80e4_081c57e8e182"
  Tag     ="Create and Use a GridLengthConverter Object"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create and Use a GridLengthConverter Object</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example shows how to create and use an instance of GridLengthConverter. The example defines a custom method called <Run>changeCol</Run>
, which passes the ListBoxItem to a GridLengthConverter that converts the Content of a ListBoxItem to an instance of GridLength. The converted value is then passed back as the value of the Width property of the ColumnDefinition element.
    </Paragraph>

    <Paragraph>The example also defines a second custom method, called <Run>changeColVal</Run>
. This custom method converts the Value of a Slider to a String and then passes that value back to the ColumnDefinition as the Width of the element.
    </Paragraph>

    <Paragraph>Note that a separate Extensible Application Markup Language (XAML) file defines the contents of a ListBoxItem.
    </Paragraph>

    <Paragraph>To view the complete sample, including the related XAML file, see Instantiating and Using a GridLengthConverter Object Sample.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public void changeColVal(object sender, RoutedEventArgs e) { txt1.Text = "Current Grid Column is " + hs1.Value.ToString(); 
} public void changeCol(object sender, SelectionChangedEventArgs args) { ListBoxItem li = ((sender as ListBox).SelectedItem as ListBoxItem); 
GridLengthConverter myGridLengthConverter = new GridLengthConverter(); 
if (hs1.Value == 0) { GridLength gl1 = (GridLength)myGridLengthConverter.ConvertFromString(li.Content.ToString()); 
col1.Width = gl1; 
} else if (hs1.Value == 1) { GridLength gl2 = (GridLength)myGridLengthConverter.ConvertFromString(li.Content.ToString()); 
col2.Width = gl2; 
} else if (hs1.Value == 2) { GridLength gl3 = (GridLength)myGridLengthConverter.ConvertFromString(li.Content.ToString()); 
col3.Width = gl3; 
} } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Public Sub changeColVal(ByVal sender As Object, ByVal args As RoutedPropertyChangedEventArgs(Of Double)) txt1.Text = "Current Grid Column is " + hs1.Value.ToString() End Sub Public Sub changeCol(ByVal sender As Object, ByVal args As SelectionChangedEventArgs) Dim li1 As ListBoxItem = CType(CType(sender, ListBox).SelectedItem, ListBoxItem) Dim myGridLengthConverter As System.Windows.GridLengthConverter = New System.Windows.GridLengthConverter() If (hs1.Value = 0) Then Dim gl1 As GridLength = CType(myGridLengthConverter.ConvertFromString(li1.Content.ToString()), GridLength) col1.Width = gl1 ElseIf (hs1.Value = 1) Then Dim gl2 As GridLength = CType(myGridLengthConverter.ConvertFromString(li1.Content.ToString()), GridLength) col2.Width = gl2 ElseIf (hs1.Value = 2) Then Dim gl3 As GridLength = CType(myGridLengthConverter.ConvertFromString(li1.Content.ToString()), GridLength) col3.Width = gl3 End If End Sub </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>GridLengthConverter
      <LineBreak/>GridLength
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create and Use a GridLengthConverter Object to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

