<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_f8a1f78e_d9fa_4367_9ec6_f084577e83bb"
  Tag     ="Controls by Category"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Controls by Category</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Windows Presentation Foundation (WPF) controls can be logically grouped into several broad categories. These categories can be used to select the appropriate control for your scenario.
    </Paragraph>

    <Paragraph FontSize="22">In This Section
    </Paragraph>

    <Paragraph FontSize="18">Layout
    </Paragraph>

    <Paragraph>Layout controls are used to manage the rendering of elements—their size and dimensions, their position, and the arrangement of their child content. WPF provides a number of predefined layout controls as well as the ability to create custom layout elements. 
    </Paragraph>

    <Paragraph><Run>Border </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>BulletDecorator </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Canvas </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>DockPanel </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>GridView </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>GridSplitter </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>GroupBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Panel </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Separator </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>StackPanel </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>WrapPanel </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Viewbox </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Buttons
    </Paragraph>

    <Paragraph>Buttons are one of the most basic user interface controls, and are used to react to a user initiated click event.
    </Paragraph>

    <Paragraph><Run>Button </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>RadioButton </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>RepeatButton </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Menus
    </Paragraph>

    <Paragraph>Menus are used to group related selections in an easily navigated framework, or to provide contextual assistance for specific application scenarios.
    </Paragraph>

    <Paragraph><Run>ContextMenu </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Menu </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ToolBar </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">List Selection
    </Paragraph>

    <Paragraph>List Selection controls are used to group application interaction choices into a framework that presents multiple user choices.
    </Paragraph>

    <Paragraph><Run>ComboBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ListBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>TreeView </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Range Selection
    </Paragraph>

    <Paragraph>Range selection controls allow interaction within predefined application boundaries.
    </Paragraph>

    <Paragraph><Run>CheckBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Slider </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">User Interface Navigation
    </Paragraph>

    <Paragraph>These controls enhance or extend the application navigation experience by creating scrollable regions, targeting frames, or tabbed application appearance.
    </Paragraph>

    <Paragraph><Run>Frame </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ScrollBar </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ScrollViewer </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>TabControl </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Thumb </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Dialog Boxes
    </Paragraph>

    <Paragraph>Dialog boxes provide targeted support for common user interaction scenarios such as printing or password entry.
    </Paragraph>

    <Paragraph><Run>PasswordBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>PrintDialog </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">User Information
    </Paragraph>

    <Paragraph>Controls in this category typically provide additional information to a user in order to provide contextual feedback or simplify an application's user interface.
    </Paragraph>

    <Paragraph><Run>Expander </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Label </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>Popup </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ProgressBar </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>StatusBar </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>ToolTip </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Documents
    </Paragraph>

    <Paragraph>WPF includes several specialized controls for viewing document content. These controls optimize the reading experience, based on the targeted user scenario.
    </Paragraph>

    <Paragraph><Run>DocumentViewer </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>FlowDocumentPageViewer </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>FlowDocumentReader </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>FlowDocumentScrollViewer </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Editing
    </Paragraph>

    <Paragraph>Editing controls provide freeform support for text input, formatting, and manipulation.
    </Paragraph>

    <Paragraph><Run>TextBox </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>RichTextBox </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Media
    </Paragraph>

    <Paragraph>WPF includes integrated support for hosting both audio and video content.
    </Paragraph>

    <Paragraph><Run>Image </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>MediaElement </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="18">Digital Ink
    </Paragraph>

    <Paragraph>Digital ink controls provide integrated support for Tablet PC features and stylus input.
    </Paragraph>

    <Paragraph><Run>InkCanvas </Run>
<Run/>
    </Paragraph>

    <Paragraph><Run>InkPresenter </Run>
<Run/>
    </Paragraph>

    <Paragraph FontSize="22">Related Sections
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="c1b33289-c389-4ac2-b153-3cbb0d8324ad.xaml">Control Library</Hyperlink>

    </Paragraph>

    <Paragraph>Control Library Samples 
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Controls by Category to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

