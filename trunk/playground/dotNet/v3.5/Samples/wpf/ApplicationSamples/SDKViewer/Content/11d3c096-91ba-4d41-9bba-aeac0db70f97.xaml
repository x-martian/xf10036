<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_11d3c096_91ba_4d41_9bba_aeac0db70f97"
  Tag     ="Create a GeometryDrawing"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create a GeometryDrawing</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to create and display a GeometryDrawing. A <Run FontWeight="Bold">GeometryDrawing</Run>
 enables you to create shape with a fill and an outline by associating a Pen and a Brush with a Geometry. The Geometry describes the shape's structure, the Brush describes the shape's fill, and the Pen describes the shape's outline.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example uses a <Run FontWeight="Bold">GeometryDrawing</Run>
 to render a shape. The shape is described by a GeometryGroup and two EllipseGeometry objects. The shape's interior is painted with a LinearGradientBrush and its outline is drawn with a Black <Run FontWeight="Bold">Pen</Run>
. The <Run FontWeight="Bold">GeometryDrawing</Run>
 is displayed using an ImageDrawing and an Image element.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Media.Animation; 
using System.Windows.Shapes; 
namespace SDKSample { public class GeometryDrawingExample : Page { public GeometryDrawingExample() { // // Create the Geometry to draw. // GeometryGroup ellipses = new GeometryGroup(); 
ellipses.Children.Add( new EllipseGeometry(new Point(50,50), 45, 20) ); 
ellipses.Children.Add( new EllipseGeometry(new Point(50, 50), 20, 45) ); 
// // Create a GeometryDrawing. // GeometryDrawing aGeometryDrawing = new GeometryDrawing(); 
aGeometryDrawing.Geometry = ellipses; 
// Paint the drawing with a gradient. aGeometryDrawing.Brush = new LinearGradientBrush( Colors.Blue, Color.FromRgb(204,204,255), new Point(0,0), new Point(1,1)); 
// Outline the drawing with a solid color. aGeometryDrawing.Pen = new Pen(Brushes.Black, 10); 
// // Use a DrawingImage and an Image control // to display the drawing. // DrawingImage geometryImage = new DrawingImage(aGeometryDrawing); 
// Freeze the DrawingImage for performance benefits. geometryImage.Freeze(); 
Image anImage = new Image(); 
anImage.Source = geometryImage; 
anImage.Stretch = Stretch.None; 
anImage.HorizontalAlignment = HorizontalAlignment.Left; 
// // Place the image inside a border and // add it to the page. // Border exampleBorder = new Border(); 
exampleBorder.Child = anImage; 
exampleBorder.BorderBrush = Brushes.Gray; 
exampleBorder.BorderThickness = new Thickness(1); 
exampleBorder.HorizontalAlignment = HorizontalAlignment.Left; 
exampleBorder.VerticalAlignment = VerticalAlignment.Top; 
exampleBorder.Margin = new Thickness(10); 
this.Margin = new Thickness(20); 
this.Background = Brushes.White; 
this.Content = exampleBorder; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_11d3c096_91ba_4d41_9bba_aeac0db70f97_0">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="PresentationOptions" Margin="20" Background="White"> 
&lt;Border BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10"> 
&lt;Image Stretch="None" HorizontalAlignment="Left"> 
&lt;Image.Source> 
&lt;DrawingImage PresentationOptions:Freeze="True"> 
&lt;DrawingImage.Drawing> 
&lt;GeometryDrawing> 
&lt;GeometryDrawing.Geometry> 
&lt;!-- Create a composite shape. --> 
&lt;GeometryGroup> 
&lt;EllipseGeometry Center="50,50" RadiusX="45" RadiusY="20" /> 
&lt;EllipseGeometry Center="50,50" RadiusX="20" RadiusY="45" /> 
&lt;/GeometryGroup> 
&lt;/GeometryDrawing.Geometry> 
&lt;GeometryDrawing.Brush> 
&lt;!-- Paint the drawing with a gradient. --> 
&lt;LinearGradientBrush> 
&lt;GradientStop Offset="0.0" Color="Blue" /> 
&lt;GradientStop Offset="1.0" Color="#CCCCFF" /> 
&lt;/LinearGradientBrush> 
&lt;/GeometryDrawing.Brush> 
&lt;GeometryDrawing.Pen> 
&lt;!-- Outline the drawing with a solid color. --> 
&lt;Pen Thickness="10" Brush="Black" /> 
&lt;/GeometryDrawing.Pen> 
&lt;/GeometryDrawing> 
&lt;/DrawingImage.Drawing> 
&lt;/DrawingImage> 
&lt;/Image.Source> 
&lt;/Image> 
&lt;/Border> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following illustration shows the resulting <Run FontWeight="Bold">GeometryDrawing</Run>
.
    </Paragraph>

    <Paragraph>To create more complex drawings, you can combine multiple drawing objects into a single composite drawing using a DrawingGroup.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="066eb0ab-5f0e-439d-85c6-dca60af269fc.xaml">How to: Create a Composite Drawing</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>DrawingGroup
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="9b5ce5c0-e204-4320-a7a8-0b2210d62f88.xaml">Drawing Objects Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="9fba8934-98b7-4af6-82f6-f4ef887f963a.xaml">Geometry Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create a GeometryDrawing to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

