<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_18997e71_745a_4425_9c69_2cbce1d8669e"
  Tag     ="Walkthrough: Binding to Data in Hybrid Applications"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Walkthrough: Binding to Data in Hybrid Applications</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Binding a data source to a control is essential for providing users with access to underlying data, whether you're using Windows Forms or WPF. This walkthrough shows how you can use data binding in hybrid applications that include both Windows Forms and WPF controls. 
    </Paragraph>

    <Paragraph>Tasks illustrated in this walkthrough include:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Creating the project.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Defining the data template.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Specifying the form layout.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Specifying data bindings.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Displaying data by using interoperation.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Adding the data source to the project.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Binding to the data source.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>For a complete code listing of the tasks illustrated in this walkthrough, see Data Binding in Hybrid Applications Sample.
    </Paragraph>

    <Paragraph>When you are finished, you will have an understanding of data binding features in hybrid applications.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>The dialog boxes and menu commands you see might differ from those described in Help, depending on your active settings or edition. To change your settings, choose <Run FontWeight="Bold">Import and Export Settings</Run>
 on the <Run FontWeight="Bold">Tools</Run>
 menu. For more information, see Visual Studio Settings.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>Prerequisites</Run>

    </Paragraph>

    <Paragraph>To complete this walkthrough, you will need: 
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Access to the Northwind sample database running on Microsoft SQL Server.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Development Tools for .NET Framework 3.0, which enable you to create a WPF application project. For information on installing these tools, see Installation Instructions for the Windows SDK.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Creating the Project</Run>

    </Paragraph>

    <Paragraph FontSize="18">To create and set up the project
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Create a Windows Application (WPF) project named <Run FontWeight="Bold">WPFWithWFAndDatabinding</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>In Solution Explorer, add a reference to the WindowsFormsIntegration assembly, which is named WindowsFormsIntegration.dll. 
        </Paragraph>

        <Paragraph>The default location for this file is %programfiles%\Reference Assemblies\Microsoft\Framework\v3.0\WindowsFormsIntegration.dll.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>In Solution Explorer, add a reference to the Windows Forms assembly, which is named System.Windows.Forms.dll.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>In the Windows Forms Designer, open Window1.xaml. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>At the start of the file, map the Windows Forms namespaces with the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Window x:Class="WPFWithWFAndDatabinding.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" Title="WPFWithWFAndDatabinding" Loaded="WindowLoaded" > </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Window x:Class="Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" Title="WPFWithWFAndDatabinding" Loaded="WindowLoaded" > </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Name the default Grid element <Run>mainGrid</Run>
 by assigning the Name property.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid x:Name="mainGrid"> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid x:Name="mainGrid"> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Defining the Data Template</Run>

    </Paragraph>

    <Paragraph>The master list of customers is displayed in a ListBox control. The following code example defines a DataTemplate object named <Run>ListItemsTemplate</Run>
 that controls the visual tree of the <Run FontWeight="Bold">ListBox</Run>
 control. This <Run FontWeight="Bold">DataTemplate</Run>
 is assigned to the <Run FontWeight="Bold">ListBox</Run>
 control's ItemTemplate property.
    </Paragraph>

    <Paragraph FontSize="18">To define the data template
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Copy the following code into the <Run FontWeight="Bold">Grid</Run>
 element's declaration.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid.Resources> 
&lt;DataTemplate x:Key="ListItemsTemplate"> 
&lt;TextBlock Text="{Binding Path=ContactName}"/> 
&lt;/DataTemplate> 
&lt;/Grid.Resources> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid.Resources> 
&lt;DataTemplate x:Key="ListItemsTemplate"> 
&lt;TextBlock Text="{Binding Path=ContactName}"/> 
&lt;/DataTemplate> 
&lt;/Grid.Resources> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Specifying the Form Layout</Run>

    </Paragraph>

    <Paragraph>The layout of the form is defined by a grid with three rows and three columns. Label controls are provided to identify each column in the Customers table. 
    </Paragraph>

    <Paragraph FontSize="18">To set up the Grid layout
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Copy the following code into the <Run FontWeight="Bold">Grid</Run>
 element's declaration.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto"/> 
&lt;RowDefinition Height="Auto"/> 
&lt;RowDefinition Height="Auto"/> 
&lt;/Grid.RowDefinitions> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;/Grid.ColumnDefinitions> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto"/> 
&lt;RowDefinition Height="Auto"/> 
&lt;RowDefinition Height="Auto"/> 
&lt;/Grid.RowDefinitions> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;/Grid.ColumnDefinitions> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="18">To set up the Label controls
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Copy the following code into the <Run FontWeight="Bold">Grid</Run>
 element's declaration. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1"> 
&lt;Label Margin="20,38,5,2">First Name:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Company Name:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Phone:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Address:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">City:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Region:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Postal Code:
&lt;/Label> 
&lt;/StackPanel> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1"> 
&lt;Label Margin="20,38,5,2">First Name:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Company Name:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Phone:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Address:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">City:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Region:
&lt;/Label> 
&lt;Label Margin="20,0,5,2">Postal Code:
&lt;/Label> 
&lt;/StackPanel> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Specifying Data Bindings</Run>

    </Paragraph>

    <Paragraph>The master list of customers is displayed in a <Run FontWeight="Bold">ListBox</Run>
 control. The attached <Run>ListItemsTemplate</Run>
 binds a TextBlock control to the <Run>ContactName</Run>
 field from the database.
    </Paragraph>

    <Paragraph>The details of each customer record are displayed in several TextBox controls.
    </Paragraph>

    <Paragraph FontSize="18">To specify data bindings
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Copy the following code into the <Run FontWeight="Bold">Grid</Run>
 element's declaration. 
        </Paragraph>

        <Paragraph>The Binding class binds the <Run FontWeight="Bold">TextBox</Run>
 controls to the appropriate fields in the database. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0"> 
&lt;Label Margin="20,5,5,0">List of Customers:
&lt;/Label> 
&lt;ListBox x:Name="listBox1" Height="200" Width="200" HorizontalAlignment="Left" ItemTemplate="{StaticResource ListItemsTemplate}" IsSynchronizedWithCurrentItem="True" Margin="20,5,5,5"/> 
&lt;/StackPanel> 
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2"> 
&lt;TextBox Margin="5,38,5,2" Width="200" Text="{Binding Path=ContactName}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=CompanyName}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=Phone}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=Address}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=City}"/> 
&lt;TextBox Margin="5,0,5,2" Width="30" HorizontalAlignment="Left" Text="{Binding Path=Region}"/> 
&lt;TextBox Margin="5,0,5,2" Width="50" HorizontalAlignment="Left" Text="{Binding Path=PostalCode}"/> 
&lt;/StackPanel> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0"> 
&lt;Label Margin="20,5,5,0">List of Customers:
&lt;/Label> 
&lt;ListBox x:Name="listBox1" Height="200" Width="200" HorizontalAlignment="Left" ItemTemplate="{StaticResource ListItemsTemplate}" IsSynchronizedWithCurrentItem="True" Margin="20,5,5,5"/> 
&lt;/StackPanel> 
&lt;StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2"> 
&lt;TextBox Margin="5,38,5,2" Width="200" Text="{Binding Path=ContactName}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=CompanyName}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=Phone}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=Address}"/> 
&lt;TextBox Margin="5,0,5,2" Width="200" Text="{Binding Path=City}"/> 
&lt;TextBox Margin="5,0,5,2" Width="30" HorizontalAlignment="Left" Text="{Binding Path=Region}"/> 
&lt;TextBox Margin="5,0,5,2" Width="50" HorizontalAlignment="Left" Text="{Binding Path=PostalCode}"/> 
&lt;/StackPanel> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Displaying Data by Using Interoperation</Run>

    </Paragraph>

    <Paragraph>The orders corresponding to the selected customer are displayed in a System.Windows.Forms.DataGridView control named <Run>dataGridView1</Run>
. The <Run>dataGridView1</Run>
 control is bound to the data source in the code-behind file. A WindowsFormsHost control is the parent of this Windows Forms control.
    </Paragraph>

    <Paragraph FontSize="18">To display data in the DataGridView control
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Copy the following code into the <Run FontWeight="Bold">Grid</Run>
 element's declaration. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;WindowsFormsHost Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="20,5,5,5" Height="300"> 
&lt;wf:DataGridView x:Name="dataGridView1"/> 
&lt;/WindowsFormsHost> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;WindowsFormsHost Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="20,5,5,5" Height="300"> 
&lt;wf:DataGridView x:Name="dataGridView1"/> 
&lt;/WindowsFormsHost> </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Adding the Data Source to the Project</Run>

    </Paragraph>

    <Paragraph>With Microsoft Visual Studio 2005, you can easily add a data source to your project. This procedure adds a strongly typed data set to your project. Several other support classes, such as table adapters for each of the chosen tables, are also added.
    </Paragraph>

    <Paragraph FontSize="18">To add the data source
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open Server Explorer, and create a connection to the Northwind database. 
        </Paragraph>

        <Paragraph>For more information, see How to: Connect to Data in a Database. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>When you are prompted by the <Run FontWeight="Bold">Data Source Configuration Wizard</Run>
, save the connection string as <Run FontWeight="Bold">NorthwindConnectionString</Run>
. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Select the Customers and Orders tables, and name the generated data set <Run FontWeight="Bold">NorthwindDataSet</Run>
.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>Binding to the Data Source</Run>

    </Paragraph>

    <Paragraph>The System.Windows.Forms.BindingSource component provides a uniform interface for the application's data source. Binding to the data source is implemented in the code-behind file.
    </Paragraph>

    <Paragraph FontSize="18">To bind to the data source
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open the code-behind file, which is named Window1.xaml.cs. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Copy the following code into the <Run>Window1</Run>
 class definition. 
        </Paragraph>

        <Paragraph>This code declares the <Run FontWeight="Bold">BindingSource</Run>
 component and associated helper classes that connect to the database.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>private System.Windows.Forms.BindingSource nwBindingSource; 
private NorthwindDataSet nwDataSet; 
private NorthwindDataSetTableAdapters.CustomersTableAdapter customersTableAdapter = new NorthwindDataSetTableAdapters.CustomersTableAdapter(); 
private NorthwindDataSetTableAdapters.OrdersTableAdapter ordersTableAdapter = new NorthwindDataSetTableAdapters.OrdersTableAdapter(); 
</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>Visual Basic </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Private nwBindingSource As System.Windows.Forms.BindingSource Private nwDataSet As NorthwindDataSet Private customersTableAdapter As New NorthwindDataSetTableAdapters.CustomersTableAdapter() Private ordersTableAdapter As New NorthwindDataSetTableAdapters.OrdersTableAdapter() </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Copy the following code into the <Run>Window1</Run>
 constructor, immediately following the call to the <Run>InitializeComponent</Run>
 method. 
        </Paragraph>

        <Paragraph>This code creates and initializes the <Run FontWeight="Bold">BindingSource</Run>
 component. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public Window1() { InitializeComponent(); 
// Create a DataSet for the Customers data. this.nwDataSet = new NorthwindDataSet(); 
this.nwDataSet.DataSetName = "nwDataSet"; 
// Create a BindingSource for the Customers data. this.nwBindingSource = new System.Windows.Forms.BindingSource(); 
this.nwBindingSource.DataMember = "Customers"; 
this.nwBindingSource.DataSource = this.nwDataSet; 
} </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>Visual Basic </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Public Sub New() InitializeComponent() ' Create a DataSet for the Customers data. Me.nwDataSet = New NorthwindDataSet() Me.nwDataSet.DataSetName = "nwDataSet" ' Create a BindingSource for the Customers data. Me.nwBindingSource = New System.Windows.Forms.BindingSource() Me.nwBindingSource.DataMember = "Customers" Me.nwBindingSource.DataSource = Me.nwDataSet End Sub </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Copy the following code into the <Run>Window1</Run>
 class definition, following the constructor. 
        </Paragraph>

        <Paragraph>This code defines the Loaded event handler, which assigns the <Run FontWeight="Bold">BindingSource</Run>
 component as the data context and populates the <Run>Customers</Run>
 and <Run>Orders</Run>
 adapter objects.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>private void WindowLoaded(object sender, RoutedEventArgs e) { // Fill the Customers table adapter with data. this.customersTableAdapter.ClearBeforeFill = true; 
this.customersTableAdapter.Fill(this.nwDataSet.Customers); 
// Fill the Orders table adapter with data. this.ordersTableAdapter.Fill(this.nwDataSet.Orders); 
// Assign the BindingSource to // the data context of the main grid. this.mainGrid.DataContext = this.nwBindingSource; 
// Assign the BindingSource to // the data source of the list box. this.listBox1.ItemsSource = this.nwBindingSource; 
// Because this is a master/details form, the DataGridView // requires the foreign key relating the tables. this.dataGridView1.DataSource = this.nwBindingSource; 
this.dataGridView1.DataMember = "FK_Orders_Customers"; 
// Handle the currency management aspect of the data models. // Attach an event handler to detect when the current item // changes via the WPF ListBox. This event handler synchronizes // the list collection with the BindingSource. // // NOTE: This is a workaround for a known issue in WPF Beta 2. // This step will not be necessary in later versions of WPF. BindingListCollectionView cv = CollectionViewSource.GetDefaultView( this.nwBindingSource) as BindingListCollectionView; 
cv.CurrentChanged += new EventHandler(WPF_CurrentChanged); 
} </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>Visual Basic </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Private Sub WindowLoaded( _ ByVal sender As Object, _ ByVal e As RoutedEventArgs) ' Fill the Customers table adapter with data. Me.customersTableAdapter.ClearBeforeFill = True Me.customersTableAdapter.Fill(Me.nwDataSet.Customers) ' Fill the Orders table adapter with data. Me.ordersTableAdapter.Fill(Me.nwDataSet.Orders) ' Assign the BindingSource to ' the data context of the main grid. Me.mainGrid.DataContext = Me.nwBindingSource ' Assign the BindingSource to ' the data source of the list box. Me.listBox1.ItemsSource = Me.nwBindingSource ' Because this is a master/details form, the DataGridView ' requires the foreign key relating the tables. Me.dataGridView1.DataSource = Me.nwBindingSource Me.dataGridView1.DataMember = "FK_Orders_Customers" ' Handle the currency management aspect of the data models. ' Attach an event handler to detect when the current item ' changes via the WPF ListBox. This event handler synchronizes ' the list collection with the BindingSource. ' ' NOTE: This is a workaround for a known issue in WPF Beta 2. ' This step will not be necessary in later versions of WPF. Dim cv As BindingListCollectionView = _ CollectionViewSource.GetDefaultView(Me.nwBindingSource) AddHandler cv.CurrentChanged, AddressOf WPF_CurrentChanged End Sub </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Copy the following code into the <Run>Window1</Run>
 class definition, following the <Run>WindowLoaded</Run>
 method. 
        </Paragraph>

        <Paragraph>This method handles the CurrentChanged event and updates the current item of the data binding.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// This event handler updates the current item // of the data binding. void WPF_CurrentChanged(object sender, EventArgs e) { BindingListCollectionView cv = sender as BindingListCollectionView; 
this.nwBindingSource.Position = cv.CurrentPosition; 
} </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>Visual Basic </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' This event handler updates the current item ' of the data binding. Sub WPF_CurrentChanged(ByVal sender As Object, ByVal e As EventArgs) Dim cv As BindingListCollectionView = sender Me.nwBindingSource.Position = cv.CurrentPosition End Sub </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Press F5 to build and run the application.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>ElementHost
      <LineBreak/>WindowsFormsHost
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="96fcd78d-1c77-4206-8928-3a0579476ef4.xaml">Walkthrough: Hosting a Windows Forms Composite Control in Windows Presentation Foundation</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="0ac41286-4c1b-4b17-9196-d985cb844ce1.xaml">Walkthrough: Hosting a Windows Presentation Foundation Control in Windows Forms</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Data Binding in Hybrid Applications Sample
      <LineBreak/><Hyperlink NavigateUri="619f9fcd-a71b-4db5-b3e4-da99ec3b5c41.xaml">Migration and Interoperability How-to Topics</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Walkthrough: Binding to Data in Hybrid Applications to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

