<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_e3ca88f3_6e94_4b61_82fc_42104c10b761"
  Tag     ="Build a Table Programmatically"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Build a Table Programmatically</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following examples show how to programmatically create a Table and populate it with content. The contents of the table are apportioned into five rows (represented by TableRow objects contained in a RowGroups object) and six columns (represented by TableColumn objects). The rows are used for different presentation purposes, including a title row intended to title the entire table, a header row to describe the columns of data in the table, and a footer row with summary information. Note that the notion of "title", "header", and "footer" rows are not inherent to the table; 
these are simply rows with different characteristics. Table cells contain the actual content, which can be comprised of text, images, or nearly any other user interface (UI) element.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>For a complete sample that demonstrates the example code shown below, see Displaying Tabular Data in a Table Sample.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>First, a FlowDocument is created to host the <Run FontWeight="Bold">Table</Run>
, and a new <Run FontWeight="Bold">Table</Run>
 is created and added to the contents of the <Run FontWeight="Bold">FlowDocument</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Create the parent FlowDocument... flowDoc = new FlowDocument(); 
// Create the Table... table1 = new Table(); 
// ...and add it to the FlowDocument Blocks collection. flowDoc.Blocks.Add(table1); 
// Set some global formatting properties for the table. table1.CellSpacing = 10; 
table1.Background = Brushes.White; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' Create the parent FlowDocument... flowDoc = New FlowDocument() ' Create the Table... table1 = New Table() ' ...and add it to the FlowDocument Blocks collection. flowDoc.Blocks.Add(table1) ' Set some global formatting properties for the table. table1.CellSpacing = 10 table1.Background = Brushes.White </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Next, six <Run FontWeight="Bold">TableColumn</Run>
 objects are created and added to the table's Columns collection, with some formatting applied.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>Note that the table's <Run FontWeight="Bold">Columns</Run>
 collection uses standard zero-based indexing.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Create 6 columns and add them to the table's Columns collection. int numberOfColumns = 6; 
for (int x = 0; 
x 
&lt; 
numberOfColumns; 
x++) { table1.Columns.Add(new TableColumn()); 
// Set alternating background colors for the middle colums. if(x%2 == 0) table1.Columns[x].Background = Brushes.Beige; 
else table1.Columns[x].Background = Brushes.LightSteelBlue; 
} </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' Create 6 columns and add them to the table's Columns collection. Dim numberOfColumns = 6 Dim x For x = 0 To numberOfColumns table1.Columns.Add(new TableColumn()) ' Set alternating background colors for the middle colums. If x Mod 2 = 0 Then table1.Columns(x).Background = Brushes.Beige Else table1.Columns(x).Background = Brushes.LightSteelBlue End If Next x </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Next, a title row is created and added to the table with some formatting applied. The title row happens to contain a single cell that spans all six columns in the table.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Create and add an empty TableRowGroup to hold the table's Rows. table1.RowGroups.Add(new TableRowGroup()); 
// Add the first (title) row. table1.RowGroups[0].Rows.Add(new TableRow()); 
// Alias the current working row for easy reference. TableRow currentRow = table1.RowGroups[0].Rows[0]; 
// Global formatting for the title row. currentRow.Background = Brushes.Silver; 
currentRow.FontSize = 40; 
currentRow.FontWeight = System.Windows.FontWeights.Bold; 
// Add the header row with content, currentRow.Cells.Add(new TableCell(new Paragraph(new Run("2004 Sales Project")))); 
// and set the row to span all 6 columns. currentRow.Cells[0].ColumnSpan = 6; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' Create and add an empty TableRowGroup to hold the table's Rows. table1.RowGroups.Add(new TableRowGroup()) ' Add the first (title) row. table1.RowGroups(0).Rows.Add(new TableRow()) ' Alias the current working row for easy reference. Dim currentRow As New TableRow() currentRow = table1.RowGroups(0).Rows(0) ' Global formatting for the title row. currentRow.Background = Brushes.Silver currentRow.FontSize = 40 currentRow.FontWeight = System.Windows.FontWeights.Bold ' Add the header row with content, currentRow.Cells.Add(new TableCell(new Paragraph(new Run("2004 Sales Project")))) ' and set the row to span all 6 columns. currentRow.Cells(0).ColumnSpan = 6 </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Next, a header row is created and added to the table, and the cells in the header row are created and populated with content.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Add the second (header) row. table1.RowGroups[0].Rows.Add(new TableRow()); 
currentRow = table1.RowGroups[0].Rows[1]; 
// Global formatting for the header row. currentRow.FontSize = 18; 
currentRow.FontWeight = FontWeights.Bold; 
// Add cells with content to the second row. currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Product")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 1")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 2")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 3")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 4")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("TOTAL")))); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' Add the second (header) row. table1.RowGroups(0).Rows.Add(new TableRow()) currentRow = table1.RowGroups(0).Rows(1) ' Global formatting for the header row. currentRow.FontSize = 18 currentRow.FontWeight = FontWeights.Bold ' Add cells with content to the second row. currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Product")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 1")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 2")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 3")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Quarter 4")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("TOTAL")))) </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Next, a row for data is created and added to the table, and the cells in this row are created and populated with content. Building this row is similar to building the header row, with slightly different formatting applied.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Add the third row. table1.RowGroups[0].Rows.Add(new TableRow()); 
currentRow = table1.RowGroups[0].Rows[2]; 
// Global formatting for the row. currentRow.FontSize = 12; 
currentRow.FontWeight = FontWeights.Normal; 
// Add cells with content to the third row. currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Widgets")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$50,000")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$55,000")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$60,000")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$65,000")))); 
currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$230,000")))); 
// Bold the first cell. currentRow.Cells[0].FontWeight = FontWeights.Bold; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>' Add the third row. table1.RowGroups(0).Rows.Add(new TableRow()) currentRow = table1.RowGroups(0).Rows(2) ' Global formatting for the row. currentRow.FontSize = 12 currentRow.FontWeight = FontWeights.Normal ' Add cells with content to the third row. currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Widgets")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$50,000")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$55,000")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$60,000")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$65,000")))) currentRow.Cells.Add(new TableCell(new Paragraph(new Run("$230,000")))) ' Bold the first cell. currentRow.Cells(0).FontWeight = FontWeights.Bold </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Finally, a footer row is created, added, and formatted. Like the title row, the footer contains a single cell that spans all six columns in the table.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>table1.RowGroups[0].Rows.Add(new TableRow()); 
currentRow = table1.RowGroups[0].Rows[4]; 
// Global formatting for the footer row. currentRow.Background = Brushes.LightGray; 
currentRow.FontSize = 18; 
currentRow.FontWeight = System.Windows.FontWeights.Normal; 
// Add the header row with content, currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Projected 2004 Revenue: $810,000")))); 
// and set the row to span all 6 columns. currentRow.Cells[0].ColumnSpan = 6; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>table1.RowGroups(0).Rows.Add(new TableRow()) currentRow = table1.RowGroups(0).Rows(4) ' Global formatting for the footer row. currentRow.Background = Brushes.LightGray currentRow.FontSize = 18 currentRow.FontWeight = System.Windows.FontWeights.Normal ' Add the header row with content, currentRow.Cells.Add(new TableCell(new Paragraph(new Run("Projected 2004 Revenue: $810,000")))) ' and set the row to span all 6 columns. currentRow.Cells(0).ColumnSpan = 6 </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="5e1105f4-8fc4-473a-ba55-88c8e71386e6.xaml">Table Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Build a Table Programmatically to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

