<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_7e796a79_4d68_48a8_9703_32c23bcfddf5"
  Tag     ="HeaderedItemsControl Content Model Overview"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>HeaderedItemsControl Content Model Overview</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This content model overview describes the supported content for a HeaderedItemsControl. The MenuItem, TreeViewItem, and ToolBar classes are each a type of <Run FontWeight="Bold">HeaderedItemsControl</Run>
.
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="HeaderedItemsControl_Content_Properties">HeaderedItemsControl Content Properties</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="UsingtheHeaderProperty">Using the Header Property</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="UsingtheItemsProperty">Using the Items Property</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="UsingtheItemsSourceProperty">Using the ItemsSource Property</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="TypesthatSharethisContentModel">Types That Share This Content Model</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="TypesthatCanContainHeaderedItemsControlObjects">Types That Can Contain HeaderedItemsControl Objects</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">HeaderedItemsControl Content Properties
    </Paragraph>

    <Paragraph>A <Run FontWeight="Bold">HeaderedItemsControl</Run>
 has the following content properties:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Header 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Items 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>ItemsSource 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>In the following illustration, <Run FontWeight="Bold">Work Days</Run>
 is an example of a <Run FontWeight="Bold">TreeViewItem</Run>
<Run FontWeight="Bold">Header</Run>
; 
<Run FontWeight="Bold">Monday</Run>
, <Run FontWeight="Bold">Tuesday</Run>
, and <Run FontWeight="Bold">Thursday</Run>
 are content <Run FontWeight="Bold">Items</Run>
 under the <Run FontWeight="Bold">Work Days</Run>
<Run FontWeight="Bold">Header</Run>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Header and Content Example</Run>

    </Paragraph>

    <Paragraph FontSize="22">Using the Header Property
    </Paragraph>

    <Paragraph>You typically use the <Run FontWeight="Bold">Header</Run>
 content for a <Run FontWeight="Bold">HeaderedItemsControl</Run>
 to label or identify the primary contents of a control. For example, the contents of the <Run FontWeight="Bold">Header</Run>
 of a <Run FontWeight="Bold">TreeViewItem</Run>
 appears as a node in the TreeView tree.
    </Paragraph>

    <Paragraph>The <Run FontWeight="Bold">Header</Run>
 property supports both text and UIElement content. In the following illustration, the <Run FontWeight="Bold">TreeViewItem</Run>
 headers are buttons.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Headers That Are Buttons</Run>

    </Paragraph>

    <Paragraph FontSize="18">Adding Text Content
    </Paragraph>

    <Paragraph>The <Run FontWeight="Bold">Header</Run>
 property can accept text. The following example shows how to add text content to the <Run FontWeight="Bold">Header</Run>
 property of a <Run FontWeight="Bold">TreeViewItem</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TreeViewItem Header="TreeViewItem_1"> 
&lt;/TreeViewItem> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>TreeViewItem TVitem = new TreeViewItem(); 
TVitem.Header = "MyTreeView"; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="18">Adding UIElement Content
    </Paragraph>

    <Paragraph>The <Run FontWeight="Bold">Header</Run>
 property can accept only a single element. Some examples of elements that can be headers are the Button and Canvas elements. The following example shows how to create a <Run FontWeight="Bold">Header</Run>
 for a <Run FontWeight="Bold">TreeViewItem</Run>
 that is a button.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TreeViewItem> 
&lt;TreeViewItem.Header> 
&lt;Button>TreeViewItem_2
&lt;/Button> 
&lt;/TreeViewItem.Header> 
&lt;/TreeViewItem> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>TreeViewItem TVitemButton = new TreeViewItem(); 
Button TVitemHeader = new Button(); 
TVitemHeader.Content = "TreeViewItem1"; 
TVitemButton.Header = TVitemHeader; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Using the Items Property
    </Paragraph>

    <Paragraph>The <Run FontWeight="Bold">Items</Run>
 property of a <Run FontWeight="Bold">HeaderedItemsControl</Run>
 can specify a set of elements. The following example shows how to use the <Run FontWeight="Bold">Items</Run>
 property to add elements to a <Run FontWeight="Bold">TreeViewItem</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TreeViewItem Header="TreeViewItem_1"> 
&lt;TreeViewItem.Items> 
&lt;Button>TreeViewItem_1_1
&lt;/Button> 
&lt;TextBox>TreeViewItem_1_2
&lt;/TextBox> 
&lt;/TreeViewItem.Items> 
&lt;/TreeViewItem> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>TreeViewItem treeViewItems = new TreeViewItem(); 
treeViewItems.Header = "TreeViewItem_1"; 
TreeViewItem tvItem2 = new TreeViewItem(); 
Button aButton = new Button(); 
aButton.Content = "TreeViewItem_2"; 
tvItem2.Header = aButton; 
treeViewItems.Items.Add(tvItem2 as TreeViewItem); 
TreeViewItem tvItem3 = new TreeViewItem(); 
TextBox myTextBox = new TextBox(); 
myTextBox.Text = "TreeViewItem1_2"; 
tvItem3.Header = myTextBox; 
treeViewItems.Items.Add(tvItem3 as TreeViewItem); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Using the ItemsSource Property
    </Paragraph>

    <Paragraph>You can set the <Run FontWeight="Bold">ItemsSource</Run>
 property to a collection of items. The following example shows an ObservableCollection that you can use as an <Run FontWeight="Bold">ItemsSource</Run>
. 
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public class myData: ObservableCollection
&lt;string> { public myData() { Add("TreeViewItem_1"); 
Add("TreeViewItem_2"); 
Add("TreeViewItem_3"); 
} </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example uses XAML to define a ResourceKey for the collection. The example binds the collection to the <Run FontWeight="Bold">ItemsSource</Run>
 for a <Run FontWeight="Bold">TreeViewItem</Run>
 control.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;ObjectDataProvider x:Key="myTreeViewData" ObjectType="{x:Type src:myData}"/> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TreeViewItem Header="My TreeViewItem Example" ItemsSource ="{Binding Source={StaticResource myTreeViewData}}"/> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following code example shows how to bind the collection to the <Run FontWeight="Bold">ItemsSource</Run>
 property of a <Run FontWeight="Bold">TreeViewItem</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>TreeViewItem TVItemsSource = new TreeViewItem(); 
TVItemsSource.Header = "My TreeViewItem Example"; 
Binding bind2objdata = new Binding(); 
bind2objdata.Source = myListBoxData; 
TVItemsSource.SetBinding(TreeViewItem.ItemsSourceProperty, bind2objdata); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Types That Share This Content Model
    </Paragraph>

    <Paragraph>The following classes inherit from the <Run FontWeight="Bold">HeaderedItemsControl</Run>
 class. You can use these classes to display the content that is described in this overview.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Run FontWeight="Bold">MenuItem</Run>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Run FontWeight="Bold">TreeViewItem</Run>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Run FontWeight="Bold">ToolBar</Run>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>Typically, <Run FontWeight="Bold">MenuItem</Run>
 objects are used as child elements of a Menu element; 
<Run FontWeight="Bold">TreeViewItem</Run>
 objects are used as child elements of a <Run FontWeight="Bold">TreeView</Run>
 element; 
and <Run FontWeight="Bold">ToolBar</Run>
 objects are used as child elements of a ToolBarTray.
    </Paragraph>

    <Paragraph>Note that this list only includes non-abstract types. You may use other types that inherit from <Run FontWeight="Bold">HeaderedItemsControl</Run>
.
    </Paragraph>

    <Paragraph FontSize="22">Types That Can Contain HeaderedItemsControl Objects
    </Paragraph>

    <Paragraph>You can use the <Run FontWeight="Bold">HeaderedItemsControl</Run>
 class as content for the following types.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink NavigateUri="3e83fef2-a231-4d34-b796-f2d7fd0d558b.xaml">Adorner Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="c92cac90-d873-403b-88a6-291729dabc13.xaml">ContentControl Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="13d208fa-2398-4617-8a7a-498f388240e5.xaml">HeaderedContentControl Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="148157ae-fa92-4695-a172-36c762837854.xaml">HeaderedItemsControl Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="84c41a73-5549-40e1-bb71-f2f058079c3d.xaml">ItemsControl Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="e8d81ff2-0f45-48c5-a504-8567bb49edea.xaml">Decorator Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="8a4e8d3a-876c-4b29-94ac-e7990c153603.xaml">Panel Types</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink NavigateUri="258acef4-e0a1-44ae-b3b2-e512a6712853.xaml">Shape Types</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="fefea95d-b896-4b33-827a-9a0a9a9003df.xaml">ItemsControl Content Model Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Controls Content Model Overviews
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about HeaderedItemsControl Content Model Overview to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

