<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_b96bed40_8946_4285_8fe4_88045ab854ed"
  Tag     ="Get Started Using Windows Presentation Foundation"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Get Started Using Windows Presentation Foundation</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This tutorial provides an introduction to the development of a Windows Presentation Foundation (WPF) application that integrates the core elements of most WPF applications: controls, layout, data binding, and styles.
    </Paragraph>

    <Paragraph FontSize="22">Summary
    </Paragraph>

    <Paragraph>This tutorial guides you through the steps creating a simple Windows Presentation Foundation (WPF) application, including the following:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Extensible Application Markup Language (XAML) markup to define user interface (UI) appearance.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Code-behind to define UI behavior.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Using controls and layout to compose the application UI.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Using styles to create a consistent appearance throughout an application's UI.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Using data binding to declaratively bind controls to data.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Using WPF for navigation to create a browser-style user experience.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>After completing the tutorial, you will understand the basic aspects WPF application development.
    </Paragraph>

    <Paragraph>The sample code used to build this tutorial is available for both C# and Microsoft Visual Basic .NET, and can be found here.
    </Paragraph>

    <Paragraph>This tutorial contains the following sections:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="Requirements">Prerequisites</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Set_up_the_Structure_of_the_Application">Set up the Structure of the Application</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_Layout">Add Layout</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_Controls">Add Controls</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_an_Image">Add an Image and Title</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_Code_to_Process_Events">Add Code to Handle Events</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Create_the_UI_for_ExpenseReportPage">Create the UI for ExpenseReportPage</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_Code_to_Style_a_Control">Add Code to Style a Control</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Bind_Data_to_a_Control">Bind Data to Controls</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Connect_Data_to_Controls">Connect Data to Controls</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Add_Style_to_Data">Add Style to Data with Data Templates</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Whats_Next">What's Next</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoToggle">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="18">Prerequisites
    </Paragraph>

    <Paragraph>Over the course of the tutorial, you'll create a simple data-bound application, <Run FontStyle="italic">ExpenseIt</Run>
, using C#. The tutorial does not assume a particular development environment and is compatible with the most common, including using either command-line compilation or an Integrated Development Environment (IDE) like Microsoft Visual Studio 2005.
    </Paragraph>

    <Paragraph>To build this application using command line compilation, use the following syntax for C#:
    </Paragraph>

    <Paragraph><Run>MSBuild ExpenseIt.csproj</Run>

    </Paragraph>

    <Paragraph>Use the following syntax for Microsoft Visual Basic .NET:
    </Paragraph>

    <Paragraph><Run>MSBuild ExpenseIt.vbproj</Run>

    </Paragraph>

    <Paragraph>To compile and run the application in Visual Studio, press <Run FontWeight="Bold">F5</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>Visual Studio 2005 generates a project file automatically. Because this tutorial does not assume that Visual Studio is installed, the process for creating a project file is detailed. For more information on the creation of .csproj files, see <Hyperlink NavigateUri="a58696fd-bdad-4b55-9759-136dfdf8b91c.xaml">Building a Windows Presentation Foundation Application</Hyperlink>
. If you are using Visual Studio to complete this tutorial, overwrite the content of the generated .csproj file with the preceding text.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Set up the Structure of the Application
    </Paragraph>

    <Paragraph>In this step you set up the infrastructure of your application. It is necessary to create several supporting files in order to successfully compile a project.
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Create a new file named <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Add a root Page element to <Run FontWeight="Bold">HomePage.xaml</Run>
. Your code should look like this:
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.HomePage" WindowTitle="ExpenseIt - Home" Title="ExpenseIt - Home" WindowWidth="550" WindowHeight="350"> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Create a second file and name it <Run FontWeight="Bold">HomePage.xaml.cs</Run>
. This file will eventually contain code that handles events. For now, it must exist because it's declared in <Run FontWeight="Bold">HomePage.xaml</Run>
 using the<Run FontWeight="Bold">x:Class</Run>
 attribute<Run FontWeight="Bold">.</Run>
 The content of <Run FontWeight="Bold">HomePage.xaml.cs</Run>
 should look like this:
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Navigation; 
namespace ExpenseIt { public partial class HomePage : Page { public HomePage() { InitializeComponent(); 
} } }</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Create a third file and name it <Run FontWeight="Bold">App.xaml</Run>
. This file defines a WPF application, and you also use it to specify the UI to automatically show when the application starts; 
in this case, <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" StartupUri="HomePage.xaml"> 
&lt;/Application></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Create a fourth file and name it <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
:
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.ExpenseReportPage" WindowTitle="ExpenseIt - View Expense Report" Title="ExpenseIt - View Expense Report" WindowWidth="550" WindowHeight="350"> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Create a fifth file and name it <Run FontWeight="Bold">ExpenseReportPage.xaml.cs</Run>
. This file will eventually be used to bind expense report data to the UI. For now, it must exist because it's declared in <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 using the<Run FontWeight="Bold">x:Class</Run>
 attribute<Run FontWeight="Bold">.</Run>
 The content of <Run FontWeight="Bold">ExpenseReportPage.xaml.cs</Run>
 should look like this:
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Navigation; 
namespace ExpenseIt { public partial class ExpenseReportPage : Page { public ExpenseReportPage() { InitializeComponent(); 
} } }</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Create a final new file and name it <Run FontWeight="Bold">ExpenseIt.csproj</Run>
. This file defines global build variables for the compiled project. Copy and paste the following code into <Run FontWeight="Bold">ExpenseIt.csproj</Run>
.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run/>
                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;?xml version="1.0" encoding="utf-8"?> 
&lt;Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"> 
&lt;PropertyGroup> 
&lt;AssemblyName>ExpenseIt
&lt;/AssemblyName> 
&lt;TargetType>winexe
&lt;/TargetType> 
&lt;Configuration>Release
&lt;/Configuration> 
&lt;SchemaVersion>2.0
&lt;/SchemaVersion> 
&lt;OutputPath>bin\$(Configuration)\
&lt;/OutputPath> 
&lt;/PropertyGroup> 
&lt;ItemGroup> 
&lt;Reference Include="System"/> 
&lt;Reference Include="System.Xml"/> 
&lt;Reference Include="System.Data"/> 
&lt;Reference Include="WindowsBase"/> 
&lt;Reference Include="PresentationCore"/> 
&lt;Reference Include="PresentationFramework"/> 
&lt;/ItemGroup> 
&lt;ItemGroup> 
&lt;ApplicationDefinition Include="App.xaml"/> 
&lt;Page Include="HomePage.xaml"/> 
&lt;Page Include="ExpenseReportPage.xaml"/> 
&lt;/ItemGroup> 
&lt;ItemGroup> 
&lt;Compile Include="HomePage.xaml.cs"> 
&lt;DependentUpon>HomePage.xaml
&lt;/DependentUpon> 
&lt;SubType>Code
&lt;/SubType> 
&lt;/Compile> 
&lt;/ItemGroup> 
&lt;ItemGroup> 
&lt;Compile Include="ExpenseReportPage.xaml.cs"> 
&lt;DependentUpon>ExpenseReportPage.xaml
&lt;/DependentUpon> 
&lt;SubType>Code
&lt;/SubType> 
&lt;/Compile> 
&lt;/ItemGroup> 
&lt;ItemGroup> 
&lt;Resource Include="msn_watermark.png"/> 
&lt;/ItemGroup> 
&lt;Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets"/> 
&lt;Import Project="$(MSBuildBinPath)\Microsoft.WinFX.targets"/> 
&lt;/Project></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Add Layout
    </Paragraph>

    <Paragraph>In this step, you add layout to your application. Layout is the framework in your actual elements will reside, and be sized and positioned. You add layout to your UI by hosting your controls within one of the following layout elements:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Canvas 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>DockPanel 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>StackPanel 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Grid 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>Each of these controls supports a type of layout for its child elements. Because the <Run FontWeight="Bold">ExpenseIt</Run>
 application UI is composed of pages that can be resized, and each page has controls that will be arranged both horizontally and vertically alongside other controls, a <Run FontWeight="Bold">Grid</Run>
 is the ideal layout element for the application.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>For more information on Panel elements, see <Hyperlink NavigateUri="f73644af-9941-4611-8754-6d4cef03fc44.xaml">Panels Overview</Hyperlink>
.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following XAML adds a <Run FontWeight="Bold">Grid</Run>
 to <Run FontWeight="Bold">HomePage.xaml</Run>
:
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Add the following XAML between the <Run FontWeight="Bold">Page</Run>
 tags.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;Page x:Class="ExpenseIt.HomePage" ... > <Run FontWeight="Bold">
&lt;Grid></Run>
<Run FontWeight="Bold">
&lt;Grid.ColumnDefinitions></Run>
<Run FontWeight="Bold">
&lt;ColumnDefinition Width="10" /></Run>
<Run FontWeight="Bold">
&lt;ColumnDefinition /></Run>
<Run FontWeight="Bold">
&lt;ColumnDefinition Width="10" /></Run>
<Run FontWeight="Bold">
&lt;/Grid.ColumnDefinitions></Run>
<Run FontWeight="Bold">
&lt;Grid.RowDefinitions></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="10" /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="Auto" /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="10" /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="10" /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="Auto" /></Run>
<Run FontWeight="Bold">
&lt;RowDefinition Height="10" /></Run>
<Run FontWeight="Bold">
&lt;/Grid.RowDefinitions></Run>
<Run FontWeight="Bold">
&lt;/Grid></Run>
 
&lt;/Page></Span>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Paragraph>This XAML defines a grid that, essentially, has margins and padding that is 10 pixels in size, one column, and three rows in that are slots for the controls that are added in the next step.
    </Paragraph>

    <Paragraph FontSize="22">Add Controls
    </Paragraph>

    <Paragraph>In this step, you add a TextBlock element, a ListBox, and a Button to the application.
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Enter the following code inside the <Run FontWeight="Bold">DockPanel</Run>
 tags.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;Page x:Class="ExpenseIt.HomePage" ... > 
&lt;Grid> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10" /> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10" /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="10" /> 
&lt;/Grid.RowDefinitions> <Run FontWeight="Bold">
&lt;TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top">Names:
&lt;/TextBlock></Run>
<Run FontWeight="Bold">
&lt;ListBox Name="peopleListBox" Grid.Column="1" Grid.Row="3"></Run>
<Run FontWeight="Bold">
&lt;ListBoxItem>Mike
&lt;/ListBoxItem></Run>
<Run FontWeight="Bold">
&lt;ListBoxItem>Lisa
&lt;/ListBoxItem></Run>
<Run FontWeight="Bold">
&lt;ListBoxItem>John
&lt;/ListBoxItem></Run>
<Run FontWeight="Bold">
&lt;ListBoxItem>Mary
&lt;/ListBoxItem></Run>
<Run FontWeight="Bold">
&lt;/ListBox></Run>
<Run FontWeight="Bold">
&lt;Button Grid.Column="1" Grid.Row="5" Width="125" Height="25" HorizontalAlignment="Right">View Report
&lt;/Button></Run>
 
&lt;/Grid> 
&lt;/Page></Span>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This XAML creates a list of names that a user can select from, as well as a <Run FontWeight="Bold">Button</Run>
 to view the expense report for the selected name. The event handler for the <Run FontWeight="Bold">Button</Run>
 element is added later in the tutorial.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Compile and run the application.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>The following image shows the controls that are created by the code in this step.
    </Paragraph>

    <Paragraph FontSize="22">Add an Image and Title
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Replace the contents of <Run FontWeight="Bold">HomePage.xaml</Run>
 with the following XAML.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.HomePage" WindowTitle="ExpenseIt - Home" Title="ExpenseIt - Home" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Source="msn_watermark.png" /> 
&lt;/Canvas> 
&lt;TextBlock VerticalAlignment="Center" FontFamily="Trebuchet MS" FontWeight="Bold" FontSize="18" Foreground="#0066cc">View Expense Report
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="Auto" /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;TextBlock Grid.Column="1" Grid.Row="0"> Names: 
&lt;/TextBlock> 
&lt;ListBox Name="peopleListBox" Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2"> 
&lt;ListBoxItem>Mike
&lt;/ListBoxItem> 
&lt;ListBoxItem>Lisa
&lt;/ListBoxItem> 
&lt;ListBoxItem>John
&lt;/ListBoxItem> 
&lt;ListBoxItem>Mary
&lt;/ListBoxItem> 
&lt;/ListBox> 
&lt;Button Grid.Column="4" Grid.Row="2" Width="125" Height="25">View
&lt;/Button> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This XAML updates our earlier Grid XAML by doing the following:
        </Paragraph>

        <List MarkerStyle="Disc">
          <ListItem>
            <Paragraph>Creating a new grid with two rows.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph>Adding a <Run FontWeight="Bold">DockPanel</Run>
 with a <Run FontWeight="Bold">Canvas</Run>
, Image, and <Run FontWeight="Bold">TextBlock</Run>
 to the first row. The <Run FontWeight="Bold">DockPanel</Run>
 spans the two columns of the first row which, in conjunction with the <Run FontWeight="Bold">Canvas</Run>
 being docked to the left, enables the <Run FontWeight="Bold">TextBlock</Run>
 to overlap the <Run FontWeight="Bold">Image</Run>
.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph>Use the <Run FontWeight="Bold">Source</Run>
 attribute of the <Run FontWeight="Bold">Image</Run>
 element to specify the source image: msn_watermark.png.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph>Adding the following title text to the <Run FontWeight="Bold">TextBlock</Run>
: "View Expense Report".
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph>Using the attributes of the <Run FontWeight="Bold">Canvas</Run>
 and <Run FontWeight="Bold">TextBlock</Run>
 to configure their appearance and size.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph>Moving the grid that <Run FontWeight="Bold">HomePage.xaml </Run>
originally contained to the second column of the second row of the new grid.
            </Paragraph>

          </ListItem>

        </List>

      </ListItem>

      <ListItem>
        <Paragraph>Compile and run the application. 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>The following graphic shows how the addition of the image affected the UI of the application.
    </Paragraph>

    <Paragraph FontSize="22">Add Code to Handle Events
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Replace the <Run FontWeight="Bold">Button</Run>
 element defined in the previous step with the following code. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph>Note: 
                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph>The name of the <Run FontWeight="Bold">Button</Run>
 event to handle is <Run FontStyle="italic">Click</Run>
. The name of the developer-defined event handler is <Run FontStyle="italic">viewButton_Click</Run>
. The event handler is registered with the Click event for the <Run FontWeight="Bold">Button</Run>
 control.
                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>... 
&lt;Button Grid.Column="4" Grid.Row="2" Width="125" Height="25" Click="viewButton_Click">View
&lt;/Button> ...</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Open the <Run FontWeight="Bold">HomePage.xaml.cs</Run>
 that you created in the <Hyperlink TargetName="Set_up_the_Structure_of_the_Application">Set up the Structure of the Application</Hyperlink>
 step of the tutorial.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the contents of the file with the following code. This adds code to handle the Click event, which causes the <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 file to be navigated to.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run/>
                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

    </List>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run/>
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Navigation; 
namespace ExpenseIt { public partial class HomePage : Page { public HomePage() { InitializeComponent(); 
} private void viewButton_Click(object sender, RoutedEventArgs args) { // View Expense Report ExpenseReportPage expenseReportPage = new ExpenseReportPage(this.peopleListBox.SelectedItem); 
this.NavigationService.Navigate(expenseReportPage); 
} } }</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Create the UI for ExpenseReportPage
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">HomePage.xaml</Run>
 and <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 are similar. <Run FontWeight="Bold">HomePage.xaml</Run>
 displays a list of employees, and <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 displays expenses for each employee.
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open the <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 file and add the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.ExpenseReportPage" WindowTitle="ExpenseIt - View Expense Report" Title="ExpenseIt - View Expense Report" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Source="msn_watermark.png" /> 
&lt;/Canvas> 
&lt;TextBlock VerticalAlignment="Center" FontFamily="Trebuchet MS" FontWeight="Bold" FontSize="18" Foreground="#0066cc">Expense Report For:
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Name --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0"> 
&lt;TextBlock FontWeight="Bold">Name:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0"/> 
&lt;/TextBlock> 
&lt;!-- Department --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"> 
&lt;TextBlock FontWeight="Bold">Department:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0"/> 
&lt;/TextBlock> 
&lt;Grid Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="3"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Expense type list--> 
&lt;Border Grid.Column="0" Grid.Row="0" Height="30" Background="#4E87D4"> 
&lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White">Expense Type
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="0" Grid.Row="1"/> 
&lt;!-- Amount list --> 
&lt;Border Grid.Column="2" Grid.Row="0" Height="30" Background="#4E87D4"> 
&lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White">Amount
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="2" Grid.Row="1"/> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This code adds controls and layout that creates the basic UI structure for <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
, just as you did for <Run FontWeight="Bold">HomePage.xaml</Run>
 in the first step. It also adds the background and fill colors of the various UI elements.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Compile and run the application.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>The following image shows the UI elements added to <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
.
    </Paragraph>

    <Paragraph FontSize="22">Add Code to Style a Control
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open the <Run FontWeight="Bold">App.xaml</Run>
 file that you created in the <Hyperlink TargetName="Set_up_the_Structure_of_the_Application">Set up the Structure of the Application</Hyperlink>
 step of this tutorial.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code:
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" StartupUri="HomePage.xaml"> 
&lt;Application.Resources> 
&lt;!-- Background image style --> 
&lt;Style x:Key="backgroundImageStyle"> 
&lt;Setter Property="Image.Source" Value="msn_watermark.png"/> 
&lt;/Style> 
&lt;!-- Header text style --> 
&lt;Style x:Key="headerTextStyle"> 
&lt;Setter Property="TextBlock.VerticalAlignment" Value="Center">
&lt;/Setter> 
&lt;Setter Property="TextBlock.FontFamily" Value="Trebuchet MS">
&lt;/Setter> 
&lt;Setter Property="TextBlock.FontWeight" Value="Bold">
&lt;/Setter> 
&lt;Setter Property="TextBlock.FontSize" Value="18">
&lt;/Setter> 
&lt;Setter Property="TextBlock.Foreground" Value="#0066cc">
&lt;/Setter> 
&lt;/Style> 
&lt;!-- Label style--> 
&lt;Style x:Key="labelStyle" TargetType="{x:Type TextBlock}"> 
&lt;Setter Property="VerticalAlignment" Value="Top" /> 
&lt;Setter Property="HorizontalAlignment" Value="Left" /> 
&lt;Setter Property="FontWeight" Value="Bold" /> 
&lt;/Style> 
&lt;!-- List header style--> 
&lt;Style x:Key="listHeaderStyle" TargetType="{x:Type Border}"> 
&lt;Setter Property="Height" Value="30" /> 
&lt;Setter Property="Background" Value="#4E87D4" /> 
&lt;/Style> 
&lt;!-- List header text style--> 
&lt;Style x:Key="listHeaderTextStyle" TargetType="{x:Type TextBlock}"> 
&lt;Setter Property="Foreground" Value="White" /> 
&lt;Setter Property="VerticalAlignment" Value="Center" /> 
&lt;Setter Property="HorizontalAlignment" Value="Center" /> 
&lt;/Style> 
&lt;/Application.Resources> 
&lt;/Application></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This XAML adds the following styles:
        </Paragraph>

        <List MarkerStyle="Disc">
          <ListItem>
            <Paragraph><Run FontWeight="Bold">headerTextStyle</Run>
: To format the page title <Run FontWeight="Bold">TextBlock</Run>
.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph><Run FontWeight="Bold">labelStyle</Run>
: To format the <Run FontWeight="Bold">TextBlock</Run>
 labels.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph><Run FontWeight="Bold">listHeaderStyle</Run>
: To format the list header Border controls.
            </Paragraph>

          </ListItem>

          <ListItem>
            <Paragraph><Run FontWeight="Bold">listHeaderTextStyle</Run>
: To format the list header <Run FontWeight="Bold">TextBlock</Run>
.
            </Paragraph>

          </ListItem>

        </List>

        <Paragraph>Notice that the styles are resources scoped to the entire Application, by being made children of the <Run FontWeight="Bold">Application.Resources</Run>
 property element. For an example of using resources in a .NET Framework 3.0 application, see <Hyperlink NavigateUri="507ea937-5191-406b-8797-0a3d9f94156d.xaml">How to: Use Application Resources</Hyperlink>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code. Notice that you are removing attributes from the elements and replacing them with styles. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.HomePage" WindowTitle="ExpenseIt - Home" Title="ExpenseIt - Home" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Style="{StaticResource backgroundImageStyle}" /> 
&lt;/Canvas> 
&lt;TextBlock Style="{StaticResource headerTextStyle}">View Expense Report
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="Auto" /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource labelStyle}"> Names: 
&lt;/TextBlock> 
&lt;ListBox Name="peopleListBox" Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2"> 
&lt;ListBoxItem>Mike
&lt;/ListBoxItem> 
&lt;ListBoxItem>Lisa
&lt;/ListBoxItem> 
&lt;ListBoxItem>John
&lt;/ListBoxItem> 
&lt;ListBoxItem>Mary
&lt;/ListBoxItem> 
&lt;/ListBox> 
&lt;Button Grid.Column="4" Grid.Row="2" Width="125" Height="25" Click="viewButton_Click">View
&lt;/Button> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.ExpenseReportPage" WindowTitle="ExpenseIt - View Expense Report" Title="ExpenseIt - View Expense Report" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Style="{StaticResource backgroundImageStyle}" /> 
&lt;/Canvas> 
&lt;TextBlock Style="{StaticResource headerTextStyle}">Expense Report For:
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Name --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0"> 
&lt;TextBlock Style="{StaticResource labelStyle}">Name:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0"/> 
&lt;/TextBlock> 
&lt;!-- Department --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"> 
&lt;TextBlock Style="{StaticResource labelStyle}">Department:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0"/> 
&lt;/TextBlock> 
&lt;Grid Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="3"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Expense type list--> 
&lt;Border Grid.Column="0" Grid.Row="0" Style="{StaticResource listHeaderStyle}"> 
&lt;TextBlock Style="{StaticResource listHeaderTextStyle}">Expense Type
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="0" Grid.Row="1"/> 
&lt;!-- Amount list --> 
&lt;Border Grid.Column="2" Grid.Row="0" Style="{StaticResource listHeaderStyle}"> 
&lt;TextBlock Style="{StaticResource listHeaderTextStyle}">Amount
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="2" Grid.Row="1"/> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This code replaces the original element attributes for with the newly created styles.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Compile and run the application. After adding the code in this step, the application looks the same as it did previously. The difference is that the UI elements are created with styles rather than attributes declared on elements. This approach is more flexible and requires less code.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Bind Data to a Control
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code. 
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.HomePage" WindowTitle="ExpenseIt - Home" Title="ExpenseIt - Home" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.Resources> 
&lt;!-- Expense Report Data --> 
&lt;XmlDataProvider x:Key="ExpenseDataSource" XPath="Expenses"> 
&lt;x:XData> 
&lt;Expenses xmlns=""> 
&lt;Person Name="Mike" Department="Legal"> 
&lt;Expense ExpenseReason="Lunch" ExpenseAmount="50" /> 
&lt;Expense ExpenseReason="Transportation" ExpenseAmount="50" /> 
&lt;/Person> 
&lt;Person Name="Lisa" Department="Marketing"> 
&lt;Expense ExpenseReason="Document printing" ExpenseAmount="50"/> 
&lt;Expense ExpenseReason="Gift" ExpenseAmount="125" /> 
&lt;/Person> 
&lt;Person Name="John" Department="Engineering"> 
&lt;Expense ExpenseReason="Magazine subscription" ExpenseAmount="50"/> 
&lt;Expense ExpenseReason="New machine" ExpenseAmount="600" /> 
&lt;Expense ExpenseReason="Software" ExpenseAmount="500" /> 
&lt;/Person> 
&lt;Person Name="Mary" Department="Finance"> 
&lt;Expense ExpenseReason="Dinner" ExpenseAmount="100" /> 
&lt;/Person> 
&lt;/Expenses> 
&lt;/x:XData> 
&lt;/XmlDataProvider> 
&lt;!-- Name item template --> 
&lt;DataTemplate x:Key="nameItemTemplate"> 
&lt;TextBlock Text="{Binding XPath=@Name}"/> 
&lt;/DataTemplate> 
&lt;/Grid.Resources> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Style="{StaticResource backgroundImageStyle}" /> 
&lt;/Canvas> 
&lt;TextBlock Style="{StaticResource headerTextStyle}">View Expense Report
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition Width="Auto"/> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="Auto" /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource labelStyle}"> Names: 
&lt;/TextBlock> 
&lt;ListBox Name="peopleListBox" Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2" ItemsSource="{Binding Source={StaticResource ExpenseDataSource}, XPath=Person}" ItemTemplate="{StaticResource nameItemTemplate}"/> 
&lt;Button Grid.Column="4" Grid.Row="2" Width="125" Height="25" Click="viewButton_Click">View
&lt;/Button> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This code creates the XML data that is bound to various controls. Notice that the data is supplied within a <Run FontWeight="Bold">Grid</Run>
 resource.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Connect Data to Controls
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">HomePage.xaml.cs</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Navigation; 
namespace ExpenseIt { public partial class HomePage : Page { public HomePage() { InitializeComponent(); 
} private void viewButton_Click(object sender, RoutedEventArgs args) { // View Expense Report ExpenseReportPage expenseReportPage = new ExpenseReportPage(this.peopleListBox.SelectedItem); 
this.NavigationService.Navigate(expenseReportPage); 
} } }</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

      </ListItem>

      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">ExpenseReportPage.xaml.cs</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>C# </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Navigation; 
namespace ExpenseIt { public partial class ExpenseReportPage : Page { public ExpenseReportPage(object data) { InitializeComponent(); 
// Bind to expense report data this.DataContext = data; 
} } }</Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This code retrieves the current item that is selected in the list of people on <Run FontWeight="Bold">HomePage</Run>
, and passes its reference to the constructor of <Run FontWeight="Bold">ExpenseReportPage</Run>
 during insantiation. <Run FontWeight="Bold">ExpenseReportPage</Run>
 sets its data context with the passed item, which is what the controls defined in <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
 will bind to.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Add Style to Data with Data Templates
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>Open <Run FontWeight="Bold">ExpenseReportPage.xaml</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Overwrite the content of the file with the following code.
        </Paragraph>

        <Table CellSpacing="5">
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="22"><Run>XAML </Run>

                </Paragraph>

              </TableCell>

            </TableRow>

            <TableRow>
              <TableCell>
                <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="ExpenseIt.ExpenseReportPage" WindowTitle="ExpenseIt - View Expense Report" Title="ExpenseIt - View Expense Report" WindowWidth="550" WindowHeight="350"> 
&lt;Grid> 
&lt;Grid.Resources> 
&lt;!-- Reason item template --> 
&lt;DataTemplate x:Key="reasonItemTemplate"> 
&lt;TextBlock Text="{Binding XPath=@ExpenseReason}"/> 
&lt;/DataTemplate> 
&lt;!-- Amount item template --> 
&lt;DataTemplate x:Key="amountItemTemplate"> 
&lt;TextBlock Text="{Binding XPath=@ExpenseAmount}"/> 
&lt;/DataTemplate> 
&lt;/Grid.Resources> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="230" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"> 
&lt;Canvas DockPanel.Dock="Left" Width="230" Height="100"> 
&lt;Image Style="{StaticResource backgroundImageStyle}" /> 
&lt;/Canvas> 
&lt;TextBlock Style="{StaticResource headerTextStyle}">Expense Report For:
&lt;/TextBlock> 
&lt;/DockPanel> 
&lt;Grid Grid.Column="1" Grid.Row="1"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10"/> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="20"/> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition Height="10" /> 
&lt;RowDefinition /> 
&lt;RowDefinition Height="20" /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Name --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0"> 
&lt;TextBlock Style="{StaticResource labelStyle}">Name:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0" Text="{Binding XPath=@Name}" /> 
&lt;/TextBlock> 
&lt;!-- Department --> 
&lt;TextBlock Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"> 
&lt;TextBlock Style="{StaticResource labelStyle}">Department:
&lt;/TextBlock> 
&lt;TextBlock Margin="10,0,0,0" Text="{Binding XPath=@Department}" /> 
&lt;/TextBlock> 
&lt;Grid Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="3"> 
&lt;Grid.ColumnDefinitions> 
&lt;ColumnDefinition /> 
&lt;ColumnDefinition Width="10" /> 
&lt;ColumnDefinition /> 
&lt;/Grid.ColumnDefinitions> 
&lt;Grid.RowDefinitions> 
&lt;RowDefinition Height="Auto" /> 
&lt;RowDefinition /> 
&lt;/Grid.RowDefinitions> 
&lt;!-- Expense type list--> 
&lt;Border Grid.Column="0" Grid.Row="0" Style="{StaticResource listHeaderStyle}"> 
&lt;TextBlock Style="{StaticResource listHeaderTextStyle}">Expense Type
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding XPath=Expense}" ItemTemplate="{StaticResource reasonItemTemplate}"/> 
&lt;!-- Amount list --> 
&lt;Border Grid.Column="2" Grid.Row="0" Style="{StaticResource listHeaderStyle}"> 
&lt;TextBlock Style="{StaticResource listHeaderTextStyle}">Amount
&lt;/TextBlock> 
&lt;/Border> 
&lt;ListBox Grid.Column="2" Grid.Row="1" ItemsSource="{Binding XPath=Expense}" ItemTemplate="{StaticResource amountItemTemplate}"/> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Grid> 
&lt;/Page></Run>

                </Paragraph>

              </TableCell>

            </TableRow>

          </TableRowGroup>

        </Table>

        <Paragraph>This code creates styles for the data using data templates. Notice that the data templates are defined as <Run FontWeight="Bold">Grid</Run>
 resources.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Compile and run the application. 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>The following two figures show both pages of the <Run FontWeight="Bold">ExpenseIt</Run>
 application with controls, layout, styles, data binding and data templates applied:
    </Paragraph>

    <Paragraph FontSize="22">What's Next
    </Paragraph>

    <Paragraph>You now have a number of techniques at your disposal for creating a UI using Windows Presentation Foundation (WPF). You should now have a broad understanding of the basic building blocks of a data-bound .NET Framework 3.0 application. This topic is by no means exhaustive, but hopefully you also now have a sense of some of the possibilities you might discover on your own beyond the techniques in this topic.
    </Paragraph>

    <Paragraph>Panels are explored in greater detail in the <Hyperlink NavigateUri="f73644af-9941-4611-8754-6d4cef03fc44.xaml">Panels Overview</Hyperlink>
. Data templating is explored in greater depth in the <Hyperlink NavigateUri="0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a.xaml">Data Templating Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="3eecdced-3623-403a-a077-7595453a9221.xaml">The Layout System</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="f73644af-9941-4611-8754-6d4cef03fc44.xaml">Panels Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="c707c95f-7811-401d-956e-2fffd019a211.xaml">Data Binding Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a.xaml">Data Templating Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a58696fd-bdad-4b55-9759-136dfdf8b91c.xaml">Building a Windows Presentation Foundation Application</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Get Started Using Windows Presentation Foundation to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

