<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_bd875f46_4690_46f5_81e0_f11a9822484f"
  Tag     ="ToolBar ControlTemplate Example"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>ToolBar ControlTemplate Example</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Controls in Windows Presentation Foundation (WPF) have a ControlTemplate that contains the <Run>visual tree</Run>
 of that control. You can change the structure and appearance of a control by modifying the <Run FontWeight="Bold">ControlTemplate</Run>
 of that control. There is no way to replace only part of the visual tree of a control; 
to change the visual tree of a control you must set the Template property of the control to its new and complete <Run FontWeight="Bold">ControlTemplate</Run>
.
    </Paragraph>

    <Paragraph>This topic shows the <Run FontWeight="Bold">ControlTemplate</Run>
 of the WPF ToolBar control.
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="prerequisites">Prerequisites</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="example">ToolBar ControlTemplate Example</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Prerequisites
    </Paragraph>

    <Paragraph>To run the examples in this topic, you should understand how to write WPF applications. For more information, see <Hyperlink NavigateUri="b96bed40-8946-4285-8fe4-88045ab854ed.xaml">Get Started Using Windows Presentation Foundation</Hyperlink>
. You should also understand how styles are used in WPF. For more information, see <Hyperlink NavigateUri="481765e5-5467-4a75-9f7b-e10e2ac410d9.xaml">Styling and Templating</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22">ToolBar ControlTemplate Example
    </Paragraph>

    <Paragraph>While this example contains all of the elements that are defined in the <Run FontWeight="Bold">ControlTemplate</Run>
 of a <Run FontWeight="Bold">ToolBar</Run>
 by default, the specific values should be thought of as examples.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}"> 
&lt;Setter Property="SnapsToDevicePixels" Value="true"/> 
&lt;Setter Property="OverridesDefaultStyle" Value="true"/> 
&lt;Setter Property="Template"> 
&lt;Setter.Value> 
&lt;ControlTemplate TargetType="{x:Type ButtonBase}"> 
&lt;Border x:Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="Transparent"> 
&lt;ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/> 
&lt;/Border> 
&lt;ControlTemplate.Triggers> 
&lt;Trigger Property="IsKeyboardFocused" Value="true"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" /> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" /> 
&lt;/Trigger> 
&lt;Trigger Property="IsMouseOver" Value="true"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" /> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" /> 
&lt;/Trigger> 
&lt;Trigger Property="IsPressed" Value="true"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" /> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" /> 
&lt;/Trigger> 
&lt;Trigger Property="CheckBox.IsChecked" Value="true"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" /> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" /> 
&lt;/Trigger> 
&lt;Trigger Property="IsEnabled" Value="false"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" /> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" /> 
&lt;Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/> 
&lt;/Trigger> 
&lt;/ControlTemplate.Triggers> 
&lt;/ControlTemplate> 
&lt;/Setter.Value> 
&lt;/Setter> 
&lt;/Style> 
&lt;Style x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type Button}"/> 
&lt;Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type ToggleButton}"/> 
&lt;Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type CheckBox}"/> 
&lt;Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="{x:Type RadioButton}"/> 
&lt;Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}"> 
&lt;Setter Property="SnapsToDevicePixels" Value="True"/> 
&lt;Setter Property="OverridesDefaultStyle" Value="True"/> 
&lt;Setter Property="KeyboardNavigation.TabNavigation" Value="None"/> 
&lt;Setter Property="FocusVisualStyle" Value="{x:Null}"/> 
&lt;Setter Property="AllowDrop" Value="true"/> 
&lt;Setter Property="Template"> 
&lt;Setter.Value> 
&lt;ControlTemplate TargetType="{x:Type TextBox}"> 
&lt;Border Name="Border" Padding="2" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" > 
&lt;ScrollViewer Margin="0" x:Name="PART_ContentHost"/> 
&lt;/Border> 
&lt;ControlTemplate.Triggers> 
&lt;Trigger Property="IsEnabled" Value="False"> 
&lt;Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/> 
&lt;Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/> 
&lt;Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/> 
&lt;/Trigger> 
&lt;/ControlTemplate.Triggers> 
&lt;/ControlTemplate> 
&lt;/Setter.Value> 
&lt;/Setter> 
&lt;/Style> 
&lt;Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}"> 
&lt;Setter Property="OverridesDefaultStyle" Value="true"/> 
&lt;Setter Property="Cursor" Value="SizeAll"/> 
&lt;Setter Property="Template"> 
&lt;Setter.Value> 
&lt;ControlTemplate TargetType="{x:Type Thumb}"> 
&lt;Border Background="Transparent" SnapsToDevicePixels="True"> 
&lt;Rectangle Margin="0,2"> 
&lt;Rectangle.Fill> 
&lt;DrawingBrush Viewport="0,0,4,4" ViewportUnits="Absolute" Viewbox="0,0,8,8" ViewboxUnits="Absolute" TileMode="Tile"> 
&lt;DrawingBrush.Drawing> 
&lt;DrawingGroup> 
&lt;DrawingGroup.Children> 
&lt;GeometryDrawing Brush="#AAA" Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/> 
&lt;/DrawingGroup.Children> 
&lt;/DrawingGroup> 
&lt;/DrawingBrush.Drawing> 
&lt;/DrawingBrush> 
&lt;/Rectangle.Fill> 
&lt;/Rectangle> 
&lt;/Border> 
&lt;/ControlTemplate> 
&lt;/Setter.Value> 
&lt;/Setter> 
&lt;/Style> 
&lt;Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}"> 
&lt;Setter Property="OverridesDefaultStyle" Value="true"/> 
&lt;Setter Property="Template"> 
&lt;Setter.Value> 
&lt;ControlTemplate TargetType="{x:Type ToggleButton}"> 
&lt;Border Name="Bd" CornerRadius="0,3,3,0" Background="Transparent" SnapsToDevicePixels="true"> 
&lt;Grid> 
&lt;Path Name="Arrow" Fill="Black" VerticalAlignment="Bottom" Margin="2,3" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/> 
&lt;ContentPresenter/> 
&lt;/Grid> 
&lt;/Border> 
&lt;ControlTemplate.Triggers> 
&lt;Trigger Property="IsMouseOver" Value="true"> 
&lt;Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/> 
&lt;/Trigger> 
&lt;Trigger Property="IsKeyboardFocused" Value="true"> 
&lt;Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/> 
&lt;/Trigger> 
&lt;Trigger Property="IsChecked" Value="true"> 
&lt;Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/> 
&lt;/Trigger> 
&lt;Trigger Property="IsEnabled" Value="false"> 
&lt;Setter TargetName="Arrow" Property="Fill" Value="#AAA"/> 
&lt;/Trigger> 
&lt;/ControlTemplate.Triggers> 
&lt;/ControlTemplate> 
&lt;/Setter.Value> 
&lt;/Setter> 
&lt;/Style> 
&lt;Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}"> 
&lt;Setter Property="SnapsToDevicePixels" Value="true"/> 
&lt;Setter Property="OverridesDefaultStyle" Value="true"/> 
&lt;Setter Property="Template"> 
&lt;Setter.Value> 
&lt;ControlTemplate TargetType="{x:Type ToolBar}"> 
&lt;Border x:Name="Border" CornerRadius="2" BorderThickness="1" Background="{StaticResource LightBrush}" BorderBrush="{StaticResource NormalBorderBrush}"> 
&lt;DockPanel > 
&lt;ToggleButton DockPanel.Dock="Right" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarOverflowButtonStyle}" IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"> 
&lt;Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="false" Focusable="false" PopupAnimation="Slide"> 
&lt;Border x:Name="DropDownBorder" Background="{StaticResource WindowBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}"> 
&lt;ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true" FocusVisualStyle="{x:Null}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"/> 
&lt;/Border> 
&lt;/Popup> 
&lt;/ToggleButton> 
&lt;Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10"/> 
&lt;ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"/> 
&lt;/DockPanel> 
&lt;/Border> 
&lt;ControlTemplate.Triggers> 
&lt;Trigger Property="IsOverflowOpen" Value="true"> 
&lt;Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/> 
&lt;/Trigger> 
&lt;Trigger Property="ToolBarTray.IsLocked" Value="true"> 
&lt;Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/> 
&lt;/Trigger> 
&lt;/ControlTemplate.Triggers> 
&lt;/ControlTemplate> 
&lt;/Setter.Value> 
&lt;/Setter> 
&lt;/Style> 
&lt;Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}" > 
&lt;Setter Property="Background" Value="{StaticResource HorizontalLightBrush}"/> 
&lt;/Style> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The above example uses one or more of the following resources:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;!-- Fill Brushes --> 
&lt;LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#FFF" Offset="0.0"/> 
&lt;GradientStop Color="#CCC" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#FFF" Offset="0.0"/> 
&lt;GradientStop Color="#CCC" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#FFF" Offset="0.0"/> 
&lt;GradientStop Color="#EEE" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#FFF" Offset="0.0"/> 
&lt;GradientStop Color="#EEE" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#FFF" Offset="0.0"/> 
&lt;GradientStop Color="#AAA" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#BBB" Offset="0.0"/> 
&lt;GradientStop Color="#EEE" Offset="0.1"/> 
&lt;GradientStop Color="#EEE" Offset="0.9"/> 
&lt;GradientStop Color="#FFF" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" /> 
&lt;SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" /> 
&lt;SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" /> 
&lt;SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" /> 
&lt;!-- Border Brushes --> 
&lt;LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#CCC" Offset="0.0"/> 
&lt;GradientStop Color="#444" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#CCC" Offset="0.0"/> 
&lt;GradientStop Color="#444" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#777" Offset="0.0"/> 
&lt;GradientStop Color="#000" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1"> 
&lt;GradientBrush.GradientStops> 
&lt;GradientStopCollection> 
&lt;GradientStop Color="#444" Offset="0.0"/> 
&lt;GradientStop Color="#888" Offset="1.0"/> 
&lt;/GradientStopCollection> 
&lt;/GradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" /> 
&lt;SolidColorBrush x:Key="SolidBorderBrush" Color="#888" /> 
&lt;SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" /> 
&lt;!-- Miscellaneous Brushes --> 
&lt;SolidColorBrush x:Key="GlyphBrush" Color="#444" /> 
&lt;SolidColorBrush x:Key="LightColorBrush" Color="#DDD" /> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For the complete sample, see Styling with ControlTemplates Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="c52dde45-a311-4531-af4c-853371c4d5f4.xaml">Guidelines for Designing Stylable Controls</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="c19049bb-5ceb-492d-afd2-751dca0ed8e3.xaml">ControlTemplate Examples</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about ToolBar ControlTemplate Example to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

