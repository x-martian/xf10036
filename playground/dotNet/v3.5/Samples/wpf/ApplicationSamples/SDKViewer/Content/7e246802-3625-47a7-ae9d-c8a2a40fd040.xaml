<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_7e246802_3625_47a7_ae9d_c8a2a40fd040"
  Tag     ="Change the Color of an Element Using Focus Events"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Change the Color of an Element Using Focus Events</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to change the color of an element when it gains and loses focus by using the GotFocus and LostFocus events.
    </Paragraph>

    <Paragraph>This example consists of a Extensible Application Markup Language (XAML) file and a code-behind file. For the complete samples, see Firing Events when an Element Gains and Loses Focus Sample.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following XAML creates the user interface, which consists of two Button objects, and attaches event handlers for the <Run FontWeight="Bold">GotFocus</Run>
 and <Run FontWeight="Bold">LostFocus</Run>
 events to the <Run FontWeight="Bold">Button</Run>
 objects.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel> 
&lt;StackPanel.Resources> 
&lt;Style TargetType="{x:Type Button}"> 
&lt;Setter Property="Height" Value="20"/> 
&lt;Setter Property="Width" Value="250"/> 
&lt;Setter Property="HorizontalAlignment" Value="Left"/> 
&lt;/Style> 
&lt;/StackPanel.Resources> 
&lt;Button GotFocus="OnGotFocusHandler" LostFocus="OnLostFocusHandler">Click Or Tab To Give Keyboard Focus
&lt;/Button> 
&lt;Button GotFocus="OnGotFocusHandler" LostFocus="OnLostFocusHandler">Click Or Tab To Give Keyborad Focus
&lt;/Button> 
&lt;/StackPanel> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following code behind creates the <Run FontWeight="Bold">GotFocus</Run>
 and <Run FontWeight="Bold">LostFocus</Run>
 event handlers. When the <Run FontWeight="Bold">Button</Run>
 gains keyboard focus, the Background of the <Run FontWeight="Bold">Button</Run>
 is changed to red. When the <Run FontWeight="Bold">Button</Run>
 losses keyboard focus, the <Run FontWeight="Bold">Background</Run>
 of the <Run FontWeight="Bold">Button</Run>
 is changed back to white.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public partial class Window1 : Window { public Window1() { InitializeComponent(); 
} // raised when Button gains focus. // changes the color of the Button to Red. void OnGotFocusHandler(object sender, RoutedEventArgs e) { Button tb = e.Source as Button; 
tb.Background = Brushes.Red; 
} // raised when Button loses focus. // changes the color of the Button back to white void OnLostFocusHandler(object sender, RoutedEventArgs e) { Button tb = e.Source as Button; 
tb.Background = Brushes.White; 
} } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Partial Public Class Window1 Inherits Window Public Sub New() InitializeComponent() End Sub 'raised when Button gains focus. Changes the color of the Button to red. Sub OnGotFocusHandler(ByVal sender As Object, ByVal e As RoutedEventArgs) Dim tb As Button = CType(e.Source, Button) tb.Background = Brushes.Red End Sub 'raised when Button loses focus. Changes the color back to white. Sub OnLostFocusHandler(ByVal sender As Object, ByVal e As RoutedEventArgs) Dim tb As Button = CType(e.Source, Button) tb.Background = Brushes.White End Sub End Class </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="ee5258b7-6567-415a-9b1c-c0cbe46e79ef.xaml">Input Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Manipulate Focus Programmatically
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Change the Color of an Element Using Focus Events to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

