<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_76b0949a_5b23_4cfc_84cc_154f713e2e12"
  Tag     ="Implementing the UI Automation SelectionItem Control Pattern"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Implementing the UI Automation SelectionItem Control Pattern</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This topic introduces the SelectionItemPattern <Run>control pattern</Run>
. It contains guidelines and conventions for implementing the ISelectionItemProvider interface and includes information about <Run FontWeight="Bold">SelectionItemPattern</Run>
 properties, methods, and events. Links to additional references are listed at the end of the overview.
    </Paragraph>

    <Paragraph>The <Run FontWeight="Bold">SelectionItemPattern</Run>
 control pattern is used to support controls that act as individual, selectable child items of container controls that implement ISelectionProvider. For examples of controls that implement the SelectionItem control pattern, see <Hyperlink NavigateUri="8b81645b-8be3-4e26-9c98-4fb0fceca06b.xaml">Control Pattern Mapping for UI Automation Clients</Hyperlink>

    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="Implementation_Guidelines_and_Conventions">Implementation Guidelines and Conventions</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_Members_for_the_IValueProvider_Interface">Required Members for the ISelectionItemProvider Interface</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Exceptions">Exceptions</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Implementation Guidelines and Conventions
    </Paragraph>

    <Paragraph>When implementing the Selection Item control pattern, note the following guidelines and conventions:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Single-selection controls that manage child controls that implement IRawElementProviderFragmentRoot, such as the <Run FontWeight="Bold">Screen Resolution</Run>
 slider in the <Run FontWeight="Bold">Display Properties</Run>
 dialog box, should implement <Run FontWeight="Bold">ISelectionProvider</Run>
 and their children should implement both IRawElementProviderFragment and <Run FontWeight="Bold">ISelectionItemProvider</Run>
.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Required Members for the ISelectionItemProvider Interface
    </Paragraph>

    <Paragraph>The following properties, methods, and events are required for implementing <Run FontWeight="Bold">ISelectionItemProvider</Run>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Required members 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Member type 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>CanSelectMultiple 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Property
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsSelectionRequired 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Property
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>GetSelection 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Method
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>InvalidatedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Event
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Raised when a selection in a container has changed significantly and requires sending more ElementSelectedEvent and ElementRemovedFromSelectionEvent events than the InvalidateLimit constant permits.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>If the result of a Select, an AddToSelection, or a RemoveFromSelection is a single selected item, an <Run FontWeight="Bold">ElementSelectedEvent</Run>
 should be raised; 
otherwise send ElementAddedToSelectionEvent/ <Run FontWeight="Bold">ElementRemovedFromSelectionEvent</Run>
 as appropriate.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Exceptions
    </Paragraph>

    <Paragraph>Providers must throw the following exceptions.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Exception type 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Condition 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>InvalidOperationException 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>When any of the following are attempted:
            </Paragraph>

            <List MarkerStyle="Disc">
              <ListItem>
                <Paragraph>RemoveFromSelection is called on a single-selection container where IsSelectionRequiredProperty = <Run FontWeight="Bold">true</Run>
 and an element is already selected.
                </Paragraph>

              </ListItem>

              <ListItem>
                <Paragraph><Run FontWeight="Bold">RemoveFromSelection</Run>
 is called on a multiple-selection container where <Run FontWeight="Bold">IsSelectionRequiredProperty</Run>
 = <Run FontWeight="Bold">true</Run>
 and only one element is selected.
                </Paragraph>

              </ListItem>

              <ListItem>
                <Paragraph>AddToSelection is called on a single-selection container where CanSelectMultipleProperty = <Run FontWeight="Bold">false</Run>
 and another element is already selected.
                </Paragraph>

              </ListItem>

            </List>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="0d635c35-ffa8-4dc8-bbc9-12fcd5445776.xaml">Support Control Patterns in a UI Automation Provider</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="ec722dff-6009-4279-b86a-e18d3fa94ebf.xaml">Use Caching in UI Automation</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="cc229b33-234b-469b-ad60-f0254f32d45d.xaml">UI Automation Control Patterns Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="571561d8-5f49-43a9-a054-87735194e013.xaml">UI Automation Control Patterns for Clients</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="449c3068-a5d6-4f66-84c6-1bcc7dd4d209.xaml">Implementing the UI Automation Selection Control Pattern</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="03b98058-bdb3-47a0-8ff7-45e6cdf67166.xaml">UI Automation Tree Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Fragment Provider Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Implementing the UI Automation SelectionItem Control Pattern to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

