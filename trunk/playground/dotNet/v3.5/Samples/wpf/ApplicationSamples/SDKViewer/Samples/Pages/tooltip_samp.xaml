<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Tool Tip" x:Class="myToolTip.Page1" Loaded="OnLoaded">
    <Page.Resources>
        <Style x:Key="itemHeaderStyler">
            <Setter Property="ListBoxItem.Margin" Value="0,2,0,5" />
            <Setter Property="ListBoxItem.Padding" Value="2" />
            <Setter Property="ListBoxItem.FontFamily" Value="Verdana" />
            <Setter Property="ListBoxItem.FontWeight" Value="Bold" />
            <Setter Property="ListBoxItem.FontSize" Value="12" />
        </Style>
        <Style x:Key="imageStyler">
            <Setter Property="TextBlock.Margin" Value="15" />
        </Style>
        <Style x:Key="HeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="20" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="TabStyle">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabStyle2">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="TabItem.Foreground" Value="Black" />
        </Style>
        <Style x:Key="SubHeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="16" />
            <Setter Property="TextBlock.Foreground" Value="DarkSlateBlue" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="DisStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="8" />
            <Setter Property="TextBlock.Foreground" Value="Gray" />
            <Setter Property="TextBlock.Margin" Value="5,0,5,0" />
        </Style>
        <Style x:Key="mainContentStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="5,10,5,10" />
        </Style>
        <Style x:Key="tocStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.Margin" Value="0" />
        </Style>
        <Style x:Key="CodeSnippetParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Courier New" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10,0,10,0" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="noteParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="TCStyle">
            <Setter Property="TabControl.Margin" Value="10" />
        </Style>
    </Page.Resources>
    <TabControl MinHeight="500" MaxHeight="700" MinWidth="400" Style="{StaticResource TCStyle}">
        <TabItem Style="{StaticResource TabStyle}" Header="Tool Tip Sample" IsSelected="true">
            <StackPanel>
                <TextBlock Style="{StaticResource HeaderStyle}">Tool Tip Sample</TextBlock>
                <TextBlock Style="{StaticResource mainContentStyle}">This example shows how to create a ToolTip.</TextBlock>
            </StackPanel>
        </TabItem>
        <TabItem Name="xaml" Style="{StaticResource TabStyle}" Header="XAML">
        </TabItem>
        <TabItem Name="xamlcsharp" Style="{StaticResource TabStyle}" Header="XAML + C#">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xcsharpCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                    <ScrollViewer HorizontalScrollBarVisibility="Visible">
                        <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">
              
&lt;StackPanel  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="ToolTipSimple_wcp.Pane1"
    &gt;
  &lt;!--  The namespace + class name in the codebehind file and the x:Class attribute in the root of this document, must stay identical.  You can change them, but you must keep them in sync. --&gt;
  &lt;Grid ShowGridLines ="false" Background ="White" &gt;
    &lt;ColumnDefinition Width="300"/&gt;
    &lt;ColumnDefinition Width="250"/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;RowDefinition/&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="0" FontSize="24"&gt;ToolTips&lt;/TextBlock&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="1" FontSize="14" Grid.ColumnSpan="2"&gt;The following tooltip examples demonstrate:&lt;/TextBlock&gt;
    &lt;DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="2"&gt;
      &lt;TextBox HorizontalAlignment="Left"&gt;
        TextBox with ToolTip
        &lt;TextBox.ToolTip&gt;
          &lt;ToolTip&gt;
            &lt;TextBlock&gt;useful information goes here&lt;/TextBlock&gt;
          &lt;/ToolTip&gt;
        &lt;/TextBox.ToolTip&gt;
      &lt;/TextBox&gt;
    &lt;/DockPanel&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="2" FontSize="12" VerticalAlignment="Center"&gt;Tooltip attached to a text box control.&lt;/TextBlock&gt;

    &lt;DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="3"&gt;
      &lt;TextBox HorizontalAlignment="Left"&gt;
        ToolTip with non-text content
        &lt;TextBox.ToolTip&gt;
          &lt;ToolTip&gt;
            &lt;DockPanel&gt;
              &lt;Image Source="data\flower.jpg"/&gt;
              &lt;TextBlock&gt;useful information goes here&lt;/TextBlock&gt;
            &lt;/DockPanel&gt;
          &lt;/ToolTip&gt;
        &lt;/TextBox.ToolTip&gt;
      &lt;/TextBox&gt;
    &lt;/DockPanel&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="3" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap"&gt;Tooltip with non-text content. The content is a dock panel which contains an image and some text.&lt;/TextBlock&gt;

    &lt;DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="4"&gt;
      &lt;TextBox HorizontalAlignment="Left" ToolTipService.InitialShowDelay="1500"&gt;
        ToolTip with delay
        &lt;TextBox.ToolTip&gt;
          &lt;ToolTip&gt;
            &lt;Image Source="data\flower.jpg"/&gt;
          &lt;/ToolTip&gt;
        &lt;/TextBox.ToolTip&gt;
      &lt;/TextBox&gt;
    &lt;/DockPanel&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="4" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap"&gt;Tooltip that uses the ToolTipService to delay showing the tooltip.&lt;/TextBlock&gt;

    &lt;Button Name="btn" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="5" Click="OnClick"&gt;Hover over me to create a tooltip with C# code.&lt;/Button&gt;
    &lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="5" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap"&gt;Creating a tooltip with C#.&lt;/TextBlock&gt;
  &lt;/Grid&gt;
  &lt;Canvas Name="cv2" Width="550" Height="50" Canvas.Top="290" Canvas.Left="10"&gt;&lt;/Canvas&gt;

&lt;/StackPanel&gt;

              </TextBox>
                    </ScrollViewer>
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="C#">
                    <ScrollViewer HorizontalScrollBarVisibility="Visible">
                        <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">
//This is a list of commonly used namespaces for a pane.
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Data;

namespace ToolTipSimple_wcp
{
  /// &lt;summary&gt;
  /// Interaction logic for Pane1.xaml
  /// &lt;/summary&gt;

  public partial class Pane1 : StackPanel
  {
    void OnClick(object sender, RoutedEventArgs e)
    {
      ToolTip tt = new ToolTip();
      tt.Content = "Created with C#";
      btn.ToolTip = tt;
    }
  }
}                
                
              </TextBox>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="xamlvb" Style="{StaticResource TabStyle}" Header="XAML + Visual Basic.NET">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xvbCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="VB.NET">
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="csharp" Style="{StaticResource TabStyle}" Header="C#">
        </TabItem>
        <TabItem Name="vb" Style="{StaticResource TabStyle}" Header="Visual Basic.NET">
        </TabItem>
        <TabItem Name="managedcpp" Style="{StaticResource TabStyle}" Header="Managed C++">
        </TabItem>
        <TabItem Style="{StaticResource TabStyle}" Header="Preview Sample">
            <StackPanel>
                <!--  The namespace + class name in the codebehind file and the x:Class attribute in the root of this document, must stay identical.  You can change them, but you must keep them in sync. -->
                <Grid ShowGridLines="false" Background="White">
                    <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="250" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="0" FontSize="24">ToolTips</TextBlock>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="1" FontSize="14" Grid.ColumnSpan="2">The following tooltip examples demonstrate:</TextBlock>
                    <DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="2">
                        <TextBox HorizontalAlignment="Left">TextBox with ToolTip
     <TextBox.ToolTip><ToolTip><TextBlock>useful information goes here</TextBlock></ToolTip></TextBox.ToolTip></TextBox>
                    </DockPanel>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="2" FontSize="12" VerticalAlignment="Center">Tooltip attached to a text box control.</TextBlock>
                    <DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="3">
                        <TextBox HorizontalAlignment="Left">ToolTip with non-text content
     <TextBox.ToolTip><ToolTip><DockPanel><Image Stretch="None"><Image.Source><BitmapImage UriSource="pack://application:,,,/samples;component/Images\flower.jpg" /></Image.Source></Image><TextBlock>useful information goes here</TextBlock></DockPanel></ToolTip></TextBox.ToolTip></TextBox>
                    </DockPanel>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="3" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap">Tooltip with non-text content. The content is a dock panel which contains an image and some text.</TextBlock>
                    <DockPanel Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="4">
                        <TextBox HorizontalAlignment="Left" ToolTipService.InitialShowDelay="1500">ToolTip with delay
     <TextBox.ToolTip><ToolTip><Image Stretch="None"><Image.Source><BitmapImage UriSource="pack://application:,,,/samples;component/Images\flower.jpg" /></Image.Source></Image></ToolTip></TextBox.ToolTip></TextBox>
                    </DockPanel>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="4" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap">Tooltip that uses the ToolTipService to delay showing the tooltip.</TextBlock>
                    <Button Name="btn" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="5" Click="OnClick">Hover over me to create a tooltip with C# code.</Button>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="5" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap">Creating a tooltip with C#.</TextBlock>
                </Grid>
                <Canvas Name="cv2" Width="550" Height="50" Canvas.Top="290" Canvas.Left="10">
                </Canvas>
            </StackPanel>
        </TabItem>
    </TabControl>
</Page>