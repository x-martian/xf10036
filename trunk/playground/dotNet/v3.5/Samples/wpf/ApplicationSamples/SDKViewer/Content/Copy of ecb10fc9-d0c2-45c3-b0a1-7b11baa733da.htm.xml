<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xml:space="preserve" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table>
      <TableRowGroup>

        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Receive Notification When a Clock's State Changes</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph><Run Foreground="DarkGray">[This topic is pre-release documentation and is subject to change in future releases. Blank topics are included as placeholders.]</Run>

    </Paragraph>

    <Paragraph/>
    <Paragraph>A clock's CurrentStateInvalidated event occurs when its CurrentState becomes invalid, such as when the clock starts or stops. You can register for this event with directly using a Clock, or you can register using a Timeline. 
    </Paragraph>

    <Paragraph>In the following example, a Storyboard and two DoubleAnimation objects are used to animate the width of two rectangles. The CurrentStateInvalidated event is used to listen for clock state changes.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Table>
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="Microsoft.Samples.Animation.TimingBehaviors.StateExample" Background="LightGray">
 
&lt;StackPanel Margin="20">
 
&lt;TextBlock Name="ParentTimelineStateTextBlock">

&lt;/TextBlock>
 
&lt;TextBlock Name="Animation1StateTextBlock">

&lt;/TextBlock>
 
&lt;Rectangle Name="Rectangle01" Width="100" Height="50" Fill="Orange" />
 
&lt;TextBlock Name="Animation2StateTextBlock">

&lt;/TextBlock>
 
&lt;Rectangle Name="Rectangle02" Width="100" Height="50" Fill="Gray" />
 
&lt;Button Content="Start Animations" Margin="20">
 
&lt;Button.Triggers>
 
&lt;EventTrigger RoutedEvent="Button.Click">
 
&lt;BeginStoryboard>
 
&lt;Storyboard RepeatBehavior="2x" AutoReverse="True" CurrentStateInvalidated="parentTimelineStateInvalidated" >
 
&lt;DoubleAnimation Storyboard.TargetName="Rectangle01" Storyboard.TargetProperty="Width" From="10" To="200" Duration="0:0:9" BeginTime="0:0:1" CurrentStateInvalidated="animation1StateInvalidated"/>
 
&lt;DoubleAnimation Storyboard.TargetName="Rectangle02" Storyboard.TargetProperty="Width" From="10" To="200" Duration="0:0:8" BeginTime="0:0:1" CurrentStateInvalidated="animation2StateInvalidated" />
 
&lt;/Storyboard>
 
&lt;/BeginStoryboard>
 
&lt;/EventTrigger>
 
&lt;/Button.Triggers>
 
&lt;/Button>
 
&lt;/StackPanel>
 
&lt;/Page>
 </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph><Run/>
    </Paragraph>

    <Table>
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Media.Animation;
namespace Microsoft.Samples.Animation.TimingBehaviors {

 public partial class StateExample : Page {

 private void parentTimelineStateInvalidated(object sender, EventArgs args)
{


 Clock myClock = (Clock)sender;
ParentTimelineStateTextBlock.Text += myClock.CurrentTime.ToString() + ":" + myClock.CurrentState.ToString() + " ";

}

 private void animation1StateInvalidated(object sender, EventArgs args)
{


 Clock myClock = (Clock)sender;
Animation1StateTextBlock.Text += myClock.Parent.CurrentTime.ToString() + ":" + myClock.CurrentState.ToString() + " ";

}

 private void animation2StateInvalidated(object sender, EventArgs args)
{


 Clock myClock = (Clock)sender;
Animation2StateTextBlock.Text += myClock.Parent.CurrentTime.ToString() + ":" + myClock.CurrentState.ToString() + " ";

}

 }
 }
 </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph><Run/>
    </Paragraph>

    <Paragraph>The following illustration shows the different states the animations enter as the parent timeline (<Run FontStyle="italic">Storyboard</Run>
) progresses. 
    </Paragraph>

    <Paragraph>The following table shows the times at which <Run FontStyle="italic">Animation1</Run>
's <Run FontWeight="Bold">CurrentStateInvalidated</Run>
 event fires:
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table>
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Time (Seconds)
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>1
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>10
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>19
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>21
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>30
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>39
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>State
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Stopped
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Stopped
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following table shows the times at which <Run FontStyle="italic">Animation2</Run>
's <Run FontWeight="Bold">CurrentStateInvalidated</Run>
 event fires:
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table>
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Time (Seconds)
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>1
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>9
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>11
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>19
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>21
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>29
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>31
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>39
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>State
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Filling
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Stopped
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Filling
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Active
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Stopped
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Notice that <Run FontStyle="italic">Animation1</Run>
's <Run FontWeight="Bold">CurrentStateInvalidated</Run>
 event fires at 10 seconds, even though its state remains Active. That's because its state changed at 10 seconds, but it changed from <Run FontWeight="Bold">Active</Run>
 to Filling and then back to <Run FontWeight="Bold">Active</Run>
 in the same tick.
    </Paragraph>

    <Paragraph> 
    </Paragraph>

    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Receive Notification When a Clock's State Changes  to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

