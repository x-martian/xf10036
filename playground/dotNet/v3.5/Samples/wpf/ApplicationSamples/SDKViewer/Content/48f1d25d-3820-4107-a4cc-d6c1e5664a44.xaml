<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_48f1d25d_3820_4107_a4cc_d6c1e5664a44"
  Tag     ="Use the Attached Properties of Canvas to Position Child Elements"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Use the Attached Properties of Canvas to Position Child Elements</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use the <Run>attached properties</Run>
 of Canvas to position child elements. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example adds four Button elements as child elements of a parent <Run FontWeight="Bold">Canvas</Run>
. Each child element represents a distinct attached property of <Run FontWeight="Bold">Canvas</Run>
: Bottom, Left, Right, and Top. Each <Run FontWeight="Bold">Button</Run>
 is positioned relative to the parent <Run FontWeight="Bold">Canvas</Run>
 and according to its assigned property value.
    </Paragraph>

    <Paragraph/>
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C++ </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Create the application's main window mainWindow = gcnew System::Windows::Window(); 
mainWindow->Title = "Canvas Attached Properties Sample"; 
// Add a Border Border^ myBorder = gcnew Border(); 
myBorder->HorizontalAlignment = HorizontalAlignment::Left; 
myBorder->VerticalAlignment = VerticalAlignment::Top; 
myBorder->BorderBrush = Brushes::Black; 
myBorder->BorderThickness = System::Windows::Thickness(2); 
// Create the Canvas Canvas^ myCanvas = gcnew Canvas(); 
myCanvas->Background = Brushes::LightBlue; 
myCanvas->Width = 400; 
myCanvas->Height = 400; 
// Create the child Button elements Button^ myButton1 = gcnew Button(); 
Button^ myButton2 = gcnew Button(); 
Button^ myButton3 = gcnew Button(); 
Button^ myButton4 = gcnew Button(); 
// Set Positioning attached properties on Button elements Canvas::SetTop(myButton1, 50); 
myButton1->Content = "Canvas.Top=50"; 
Canvas::SetBottom(myButton2, 50); 
myButton2->Content = "Canvas.Bottom=50"; 
Canvas::SetLeft(myButton3, 50); 
myButton3->Content = "Canvas.Left=50"; 
Canvas::SetRight(myButton4, 50); 
myButton4->Content = "Canvas.Right=50"; 
// Add Buttons to the Canvas' Children collection myCanvas->Children->Add(myButton1); 
myCanvas->Children->Add(myButton2); 
myCanvas->Children->Add(myButton3); 
myCanvas->Children->Add(myButton4); 
// Add the Canvas as the lone Child of the Border myBorder->Child = myCanvas; 
// Add the Border as the Content of the Parent Window Object mainWindow->Content = myBorder; 
mainWindow->Show(); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Create the application's main window mainWindow = new Window (); 
mainWindow.Title = "Canvas Attached Properties Sample"; 
// Add a Border Border myBorder = new Border(); 
myBorder.HorizontalAlignment = HorizontalAlignment.Left; 
myBorder.VerticalAlignment = VerticalAlignment.Top; 
myBorder.BorderBrush = Brushes.Black; 
myBorder.BorderThickness = new Thickness(2); 
// Create the Canvas Canvas myCanvas = new Canvas(); 
myCanvas.Background = Brushes.LightBlue; 
myCanvas.Width = 400; 
myCanvas.Height = 400; 
// Create the child Button elements Button myButton1 = new Button(); 
Button myButton2 = new Button(); 
Button myButton3 = new Button(); 
Button myButton4 = new Button(); 
// Set Positioning attached properties on Button elements Canvas.SetTop(myButton1, 50); 
myButton1.Content = "Canvas.Top=50"; 
Canvas.SetBottom(myButton2, 50); 
myButton2.Content = "Canvas.Bottom=50"; 
Canvas.SetLeft(myButton3, 50); 
myButton3.Content = "Canvas.Left=50"; 
Canvas.SetRight(myButton4, 50); 
myButton4.Content = "Canvas.Right=50"; 
// Add Buttons to the Canvas' Children collection myCanvas.Children.Add(myButton1); 
myCanvas.Children.Add(myButton2); 
myCanvas.Children.Add(myButton3); 
myCanvas.Children.Add(myButton4); 
// Add the Canvas as the lone Child of the Border myBorder.Child = myCanvas; 
// Add the Border as the Content of the Parent Window Object mainWindow.Content = myBorder; 
mainWindow.Show (); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>WindowTitle = "Attached Properties Sample" ' Add a Border Dim myBorder As New Border() myBorder.HorizontalAlignment = Windows.HorizontalAlignment.Left myBorder.VerticalAlignment = Windows.VerticalAlignment.Top myBorder.BorderBrush = Brushes.Black myBorder.BorderThickness = New Thickness(2) ' Create a Canvas as the root Panel Dim myCanvas As New Canvas() myCanvas.Background = Brushes.LightBlue myCanvas.Width = 400 myCanvas.Height = 400 ' Create the child Button elements Dim myButton1 As New Button() Dim myButton2 As New Button() Dim myButton3 As New Button() Dim myButton4 As New Button() ' Set Positioning attached properties on Button elements Canvas.SetTop(myButton1, 50) myButton1.Content = "Canvas.Top=50" Canvas.SetBottom(myButton2, 50) myButton2.Content = "Canvas.Bottom=50" Canvas.SetLeft(myButton3, 50) myButton3.Content = "Canvas.Left=50" Canvas.SetRight(myButton4, 50) myButton4.Content = "Canvas.Right=50" ' Add Buttons to the Canvas' Children collection myCanvas.Children.Add(myButton1) myCanvas.Children.Add(myButton2) myCanvas.Children.Add(myButton3) myCanvas.Children.Add(myButton4) ' Add the Canvas as the lone Child of the Border myBorder.Child = myCanvas Me.Content = myBorder </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_48f1d25d_3820_4107_a4cc_d6c1e5664a44_0">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" WindowTitle="Canvas Attached Properties Sample"> 
&lt;Border HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Black" BorderThickness="2"> 
&lt;Canvas Background="LightBlue" Width="400" Height="400"> 
&lt;Button Canvas.Top="50">Canvas.Top="50"
&lt;/Button> 
&lt;Button Canvas.Bottom="50">Canvas.Bottom="50"
&lt;/Button> 
&lt;Button Canvas.Left="50">Canvas.Left="50"
&lt;/Button> 
&lt;Button Canvas.Right="50">Canvas.Right="50"
&lt;/Button> 
&lt;/Canvas> 
&lt;/Border> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph>For the complete sample, see Canvas Attached Properties Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>Canvas
      <LineBreak/>Bottom
      <LineBreak/>Left
      <LineBreak/>Right
      <LineBreak/>Top
      <LineBreak/>Button
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="f73644af-9941-4611-8754-6d4cef03fc44.xaml">Panels Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="75928354-dc01-47e8-a018-8409aec1f32d.xaml">Attached Properties Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Canvas Attached Properties Sample
      <LineBreak/>Canvas Samples
      <LineBreak/><Hyperlink NavigateUri="5c8f5bca-7ba9-4526-a9bf-0852351dbe8a.xaml">Canvas How-to Topics</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Use the Attached Properties of Canvas to Position Child Elements to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

