<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_877bf425_0e54_49ec_8fd2_13a211377abb"
  Tag     ="Expander Overview"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Expander Overview</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>An Expander control provides a way to provide content in an expandable area that resembles a window and includes a header. The following illustration provides an example of this control in its expanded position.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Expander control</Run>

    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="CreatinganExpanderinXAML">Creating a Simple Expander</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="SettingtheDirectionoftheExpandingWindow">Setting the Direction of the Expanding Content Area</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="SettingSizeDimensionsonanExpanderinaPanel">Controlling the Size of an Expander in a Panel</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="CreatingScrollableContent">Creating Scrollable Content</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="UsingtheAlignmentProperties">Using the Alignment Properties</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Creating a Simple Expander
    </Paragraph>

    <Paragraph>The following example shows how to create a simple <Run FontWeight="Bold">Expander</Run>
 control. This example creates an <Run FontWeight="Bold">Expander</Run>
 that looks like the previous illustration.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Expander Name="myExpander" Background="Tan" HorizontalAlignment="Left" Header="My Expander" ExpandDirection="Down" IsExpanded="True" Width="100"> 
&lt;TextBlock TextWrapping="Wrap"> Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua 
&lt;/TextBlock> 
&lt;/Expander> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The Content and Header of an <Run FontWeight="Bold">Expander</Run>
 can also contain complex content, such as RadioButton and Image objects. 
    </Paragraph>

    <Paragraph FontSize="22">Setting the Direction of the Expanding Content Area
    </Paragraph>

    <Paragraph>You can set the content area of an <Run FontWeight="Bold">Expander</Run>
 control to expand in one of four directions (Down, Up, Left, or Right) by using the ExpandDirection property. When the content area is collapsed, only the <Run FontWeight="Bold">Expander</Run>
<Run FontWeight="Bold">Header</Run>
 and its toggle button appear. A Button control that displays a directional arrow is used as a toggle button to expand or collapse the content area. When expanded, the <Run FontWeight="Bold">Expander</Run>
 tries to display all of its content in a window-like area.
    </Paragraph>

    <Paragraph FontSize="22">Controlling the Size of an Expander in a Panel
    </Paragraph>

    <Paragraph>If an <Run FontWeight="Bold">Expander</Run>
 control is inside a layout control that inherits from Panel, such as StackPanel, do not specify a Height on the <Run FontWeight="Bold">Expander</Run>
 when the ExpandDirection property is set to <Run FontWeight="Bold">Down</Run>
 or <Run FontWeight="Bold">Up</Run>
. Similarly, do not specify a Width on the <Run FontWeight="Bold">Expander</Run>
 when the <Run FontWeight="Bold">ExpandDirection</Run>
 property is set to <Run FontWeight="Bold">Left</Run>
 or <Run FontWeight="Bold">Right</Run>
. 
    </Paragraph>

    <Paragraph>When you set a size dimension on an <Run FontWeight="Bold">Expander</Run>
 control in the direction that the expanded content is displayed, the <Run FontWeight="Bold">Expander</Run>
 takes control of the area that is used by the content and displays a border around it. The border shows even when the content is collapsed. To set the size of the expanded content area, set size dimensions on the content of the <Run FontWeight="Bold">Expander</Run>
, or if you want scrolling capability, on the ScrollViewer that encloses the content.
    </Paragraph>

    <Paragraph>When an <Run FontWeight="Bold">Expander</Run>
 control is the last element in a DockPanel, Windows Presentation Foundation (WPF) automatically sets the <Run FontWeight="Bold">Expander</Run>
 dimensions to equal the remaining area of the <Run FontWeight="Bold">DockPanel</Run>
. To prevent this default behavior, set the LastChildFill property on the <Run FontWeight="Bold">DockPanel</Run>
 object to <Run FontWeight="Bold">false</Run>
, or make sure that the <Run FontWeight="Bold">Expander</Run>
 is not the last element in a <Run FontWeight="Bold">DockPanel</Run>
.
    </Paragraph>

    <Paragraph FontSize="22">Creating Scrollable Content
    </Paragraph>

    <Paragraph>If the content is too large for the size of the content area, you can wrap the content of an <Run FontWeight="Bold">Expander</Run>
 in a <Run FontWeight="Bold">ScrollViewer</Run>
 in order to provide scrollable content. The <Run FontWeight="Bold">Expander</Run>
 control does not automatically provide scrolling capability. The following illustration shows an <Run FontWeight="Bold">Expander</Run>
 control that contains a <Run FontWeight="Bold">ScrollViewer</Run>
 control. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Expander in a ScrollViewer</Run>

    </Paragraph>

    <Paragraph>When you place an <Run FontWeight="Bold">Expander</Run>
 control in a <Run FontWeight="Bold">ScrollViewer</Run>
, set the <Run FontWeight="Bold">ScrollViewer</Run>
 dimension property that corresponds to the direction in which the <Run FontWeight="Bold">Expander</Run>
 content opens to the size of the <Run FontWeight="Bold">Expander</Run>
 content area. For example, if you set the <Run FontWeight="Bold">ExpandDirection</Run>
 property on the <Run FontWeight="Bold">Expander</Run>
 to <Run FontWeight="Bold">Down</Run>
 (the content area opens down), set the <Run FontWeight="Bold">Height</Run>
 property on the <Run FontWeight="Bold">ScrollViewer</Run>
 control to the required height for the content area. If you instead set the height dimension on the content itself, <Run FontWeight="Bold">ScrollViewer</Run>
 does not recognize this setting and therefore, does not provide scrollable content. 
    </Paragraph>

    <Paragraph>The following example shows how to create an <Run FontWeight="Bold">Expander</Run>
 control that has complex content and that contains a <Run FontWeight="Bold">ScrollViewer</Run>
 control. This example creates an <Run FontWeight="Bold">Expander</Run>
 that is like the illustration at the beginning of this section.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Expander Width="200" HorizontalContentAlignment="Stretch"> 
&lt;Expander.Header> 
&lt;BulletDecorator> 
&lt;BulletDecorator.Bullet> 
&lt;Image Width="10" Source="images\icon.jpg"/> 
&lt;/BulletDecorator.Bullet> 
&lt;TextBlock Margin="20,0,0,0">My Expander
&lt;/TextBlock> 
&lt;/BulletDecorator> 
&lt;/Expander.Header> 
&lt;Expander.Content> 
&lt;ScrollViewer Height="50"> 
&lt;TextBlock TextWrapping="Wrap"> Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 
&lt;/TextBlock> 
&lt;/ScrollViewer> 
&lt;/Expander.Content> 
&lt;/Expander> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>void MakeExpander() { //Create containing stack panel and assign to Grid row/col StackPanel sp = new StackPanel(); 
Grid.SetRow(sp, 0); 
Grid.SetColumn(sp, 1); 
sp.Background = Brushes.LightSalmon; 
//Create column title TextBlock colTitle = new TextBlock(); 
colTitle.Text = "EXPANDER CREATED FROM CODE"; 
colTitle.HorizontalAlignment= HorizontalAlignment.Center; 
colTitle.Margin.Bottom.Equals(20); 
sp.Children.Add(colTitle); 
//Create Expander object Expander exp = new Expander(); 
//Create Bullet Panel for Expander Header BulletDecorator bp = new BulletDecorator(); 
Image i = new Image(); 
BitmapImage bi= new BitmapImage(); 
bi.BeginInit(); 
bi.UriSource = new Uri(@"pack://application:,,/images/icon.jpg"); 
bi.EndInit(); 
i.Source = bi; 
i.Width = 10; 
bp.Bullet = i; 
TextBlock tb = new TextBlock(); 
tb.Text = "My Expander"; 
tb.Margin = new Thickness(20,0,0,0); 
bp.Child = tb; 
exp.Header = bp; 
//Create TextBlock with ScrollViewer for Expander Content StackPanel spScroll = new StackPanel(); 
TextBlock tbc = new TextBlock(); 
tbc.Text = "Lorem ipsum dolor sit amet, consectetur adipisicing elit," + "sed do eiusmod tempor incididunt ut labore et dolore magna" + "aliqua. Ut enim ad minim veniam, quis nostrud exercitation" + "ullamco laboris nisi ut aliquip ex ea commodo consequat." + "Duis aute irure dolor in reprehenderit in voluptate velit" + "esse cillum dolore eu fugiat nulla pariatur. Excepteur sint" + "occaecat cupidatat non proident, sunt in culpa qui officia" + "deserunt mollit anim id est laborum."; 
tbc.TextWrapping = TextWrapping.Wrap; 
spScroll.Children.Add(tbc); 
ScrollViewer scr = new ScrollViewer(); 
scr.Content = spScroll; 
scr.Height = 50; 
exp.Content = scr; 
exp.Width=200; 
exp.HorizontalContentAlignment= HorizontalAlignment.Stretch; 
//Insert Expander into the StackPanel and add it to the //Grid sp.Children.Add(exp); 
myGrid.Children.Add(sp); 
} </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Sub MakeExpander() 'Create containing stack panel and assign to Grid row/col Dim sp As StackPanel = New StackPanel() Grid.SetRow(sp, 0) Grid.SetColumn(sp, 1) sp.Background = Brushes.LightSalmon 'Create column title Dim colTitle As TextBlock = New TextBlock() colTitle.Text = "EXPANDER CREATED FROM CODE" colTitle.HorizontalAlignment = HorizontalAlignment.Center colTitle.Margin.Bottom.Equals(20) sp.Children.Add(colTitle) 'Create Expander object Dim exp As Expander = New Expander() 'Create Bullet Panel for Expander Header Dim bp As BulletDecorator = New BulletDecorator() Dim i As Image = New Image() Dim bi As BitmapImage = New BitmapImage() bi.BeginInit() bi.UriSource = New Uri("pack://application:,,//images//icon.jpg") bi.EndInit() i.Source = bi i.Width = 10 bp.Bullet = i Dim tb As TextBlock = New TextBlock() tb.Text = "My Expander" tb.Margin = New Thickness(20, 0, 0, 0) bp.Child = tb exp.Header = bp 'Create TextBlock with ScrollViewer for Expander Content Dim spScroll As StackPanel = New StackPanel() Dim tbc As TextBlock = New TextBlock() tbc.Text = _ "Lorem ipsum dolor sit amet, consectetur adipisicing elit," + _ "sed do eiusmod tempor incididunt ut labore et dolore magna" + _ "aliqua. Ut enim ad minim veniam, quis nostrud exercitation" + _ "ullamco laboris nisi ut aliquip ex ea commodo consequat." + _ "Duis aute irure dolor in reprehenderit in voluptate velit" + _ "esse cillum dolore eu fugiat nulla pariatur. Excepteur sint" + _ "occaecat cupidatat non proident, sunt in culpa qui officia" + _ "deserunt mollit anim id est laborum." tbc.TextWrapping = TextWrapping.Wrap spScroll.Children.Add(tbc) Dim scr As ScrollViewer = New ScrollViewer() scr.Content = spScroll scr.Height = 50 exp.Content = scr 'Insert Expander into the StackPanel and add it to the 'Grid exp.Width = 200 exp.HorizontalContentAlignment = HorizontalAlignment.Stretch sp.Children.Add(exp) myGrid.Children.Add(sp) End Sub </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Using the Alignment Properties
    </Paragraph>

    <Paragraph>You can align content by setting the HorizontalContentAlignment and VerticalContentAlignment properties on the <Run FontWeight="Bold">Expander</Run>
 control. When you set these properties, the alignment applies to the header and also to the expanded content.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>Expander
      <LineBreak/>ExpandDirection
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Expander Samples
      <LineBreak/><Hyperlink NavigateUri="c31e85e3-963f-4693-b463-a29adc433fcd.xaml">Expander How-to Topics</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Expander Overview to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

