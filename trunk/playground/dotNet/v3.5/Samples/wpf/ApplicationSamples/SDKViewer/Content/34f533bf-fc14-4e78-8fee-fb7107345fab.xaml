<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_34f533bf_fc14_4e78_8fee_fb7107345fab"
  Tag     ="UI Automation Support for the List Item Control Type"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>UI Automation Support for the List Item Control Type</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This topic provides information about UI Automation support for the List Item control type. In UI Automation, a control type is a set of conditions that a control must meet in order to use the ControlTypeProperty property. The conditions include specific guidelines for UI Automation tree structure, UI Automation property values and <Run>control pattern</Run>
s. 
    </Paragraph>

    <Paragraph>List item controls are an example of controls that implement the List Item control type.
    </Paragraph>

    <Paragraph>The following sections define the required UI Automation tree structure, properties, control patterns, and events for the List Item control type. The UI Automation requirements apply to all list controls, whether Windows Presentation Foundation (WPF), Win32, or Windows Forms. 
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Tree_Structure">Required UI Automation Tree Structure</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Properties">Required UI Automation Properties</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Control_Patterns">Required UI Automation Control Patterns</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Events">Required UI Automation Events</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Required UI Automation Tree Structure
    </Paragraph>

    <Paragraph>The following table depicts the <Run>Control View</Run>
 and the <Run>Content View</Run>
 of the UI Automation tree that pertains to list item controls and describes what can be contained in each view. For more information on the UI Automation tree, see <Hyperlink NavigateUri="03b98058-bdb3-47a0-8ff7-45e6cdf67166.xaml">UI Automation Tree Overview</Hyperlink>
. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Control View 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Content View 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <List MarkerStyle="Disc">
              <ListItem>
                <Paragraph>List Item
                </Paragraph>

                <List MarkerStyle="Disc">
                  <ListItem>
                    <Paragraph>Image (0 or 1)
                    </Paragraph>

                  </ListItem>

                  <ListItem>
                    <Paragraph>Text (0 or 1)
                    </Paragraph>

                  </ListItem>

                </List>

              </ListItem>

            </List>

          </TableCell>

          <TableCell>
            <List MarkerStyle="Disc">
              <ListItem>
                <Paragraph>List Item
                </Paragraph>

              </ListItem>

            </List>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The children of a list item control within the content view of the UI Automation tree must always be "0". If the structure of the control is such that other items are contained underneath the list item then it should follow the requirements for the <Hyperlink NavigateUri="229f341a-477f-434e-b877-4db9973068eb.xaml">UI Automation Support for the Tree Item Control Type</Hyperlink>
 control type.
    </Paragraph>

    <Paragraph FontSize="22">Required UI Automation Properties
    </Paragraph>

    <Paragraph>The following table lists the UI Automation properties whose value or definition is especially relevant to list item controls. For more information on UI Automation properties, see <Hyperlink NavigateUri="255905af-0b17-485c-93d4-8a2db2a6524b.xaml">UI Automation Properties for Clients</Hyperlink>
. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>UI Automation Property 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Value 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>AutomationIdProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The value of this property needs to be unique across all controls in an application.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>BoundingRectangleProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>This value of this property should include the area of the image and text contents of the list item. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ClickablePointProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the list control has a clickable point (a point that can be clicked to cause the list to take focus) then that point must be exposed through this property. If the list control is completely covered by descendant list items it will raise a NoClickablePointException to indicate that the client must ask an item inside the list control for a clickable point.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>NameProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The value of a list item control's name property comes from the text contents of the item. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>LabeledByProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If there is a static text label then this property must expose a reference to that control.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ControlTypeProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>ListItem
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>This value is the same for all UI frameworks.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>LocalizedControlTypeProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>"list item"
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Localized string corresponding to the List control type.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsContentElementProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The list control is always included in the content view of the UI Automation tree.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsControlElementProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The list control is always included in the control view of the UI Automation tree.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsKeyboardFocusableProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the container can accept keyboard input then this property value should be true. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>HelpTextProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>""
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The Help text for list controls should explain why the user is being asked to make a choice from a list of options. For example, "Selection an item from this list will set the display resolution for your monitor."
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ItemTypeProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>This property should be exposed for list item controls that are representing an underlying object. These list item controls typically have an icon associated with the control that users associate with the underlying object.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsOffscreenProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>This property must return a value for whether the list item is currently scrolled into view within the parent container that implements Scroll control pattern.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Required UI Automation Control Patterns
    </Paragraph>

    <Paragraph>The following table lists the UI Automation control patterns required to be supported by list item controls. For more information on control patterns, see <Hyperlink NavigateUri="cc229b33-234b-469b-ad60-f0254f32d45d.xaml">UI Automation Control Patterns Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Control Pattern/Pattern Property 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Support/Value 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ISelectionItemProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Yes
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>List item control must implement this control pattern. This allows list items controls to convey when they are selected. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IScrollItemProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the list item is contained within a container that is scrollable then this control pattern must be implemented.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IToggleProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the list item is checkable and the action does not perform a selection state change then this control pattern must be implemented.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IExpandCollapseProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the item can be manipulated to show or hide information then this control pattern must be implemented.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IValueProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the item can be edited then this control pattern must be implemented. Changes to the list item control will cause changes to the values of <Run FontWeight="Bold">NameProperty</Run>
, and Value. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IGridItemProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If item to item spatial navigation is supported within the list container and the container is arranged in rows and columns then the Grid Item control pattern must be implemented.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IInvokeProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the item has a command that can be performed on it, separate from selection, then this pattern must be implemented. This is typically an action associated with double-clicking the list item control. Examples would be launching a document from Microsoft Windows Explorer, or playing a music file in Microsoft Windows Media Player.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Required UI Automation Events
    </Paragraph>

    <Paragraph>The following table lists the UI Automation events required to be supported by all list item controls. For more information on events, see <Hyperlink NavigateUri="69eebd8b-39ed-40e7-93cc-4457c4caf746.xaml">UI Automation Events Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>UI Automation Event 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Support 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>InvokedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ElementAddedToSelectionEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ElementRemovedFromSelectionEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ElementSelectedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>BoundingRectangleProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsOffscreenProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsEnabledProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>NameProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ItemStatusProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ExpandCollapseStateProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ValueProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ToggleStateProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>AutomationFocusChangedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>StructureChangedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>ListItem
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="75159ef8-bd43-4d13-acb7-1f1fe9253160.xaml">UI Automation Control Types Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="65847654-9994-4a9e-b36d-2dd5d998770b.xaml">UI Automation Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about UI Automation Support for the List Item Control Type to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

