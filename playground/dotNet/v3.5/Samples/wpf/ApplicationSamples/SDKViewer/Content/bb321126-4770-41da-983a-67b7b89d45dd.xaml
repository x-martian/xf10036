<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_bb321126_4770_41da_983a_67b7b89d45dd"
  Tag     ="UI Automation Support for the Combo Box Control Type"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>UI Automation Support for the Combo Box Control Type</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This topic provides information about UI Automation support for the Combo Box control type. In UI Automation, a control type is a set of conditions that a control must meet in order to use the ControlTypeProperty property. The conditions include specific guidelines for UI Automation tree structure, UI Automation property values, <Run>control pattern</Run>
s, and UI Automation events.
    </Paragraph>

    <Paragraph>A combo box is a list box combined with a static control or an edit control that displays the currently selected item in the list box portion of the combo box. The list box portion of the control is displayed at all times or only appears when the user selects the drop-down arrow (which is a push button) next to the control. If the selection field is an edit control, the user can enter information that is not in the list; 
otherwise, the user can only select items in the list.
    </Paragraph>

    <Paragraph>The following sections define the required UI Automation tree structure, properties, control patterns, and events for the Combo Box control type. The UI Automation requirements apply to all combo box controls, whether Windows Presentation Foundation (WPF), Win32, or Windows Forms.
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Tree_Structure">Required UI Automation Tree Structure</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Properties">Required UI Automation Properties</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_UI_Automation_Control_Patterns">Required UI Automation Control Patterns</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="Required_Events">Required Events</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Required UI Automation Tree Structure
    </Paragraph>

    <Paragraph>The following table depicts the <Run>Control View</Run>
 and the <Run>Content View</Run>
 of the UI Automation tree that pertains to combo box controls and describes what can be contained in each view. For more information about the UI Automation tree, see <Hyperlink NavigateUri="03b98058-bdb3-47a0-8ff7-45e6cdf67166.xaml">UI Automation Tree Overview</Hyperlink>
. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Control View 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Content View 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <List MarkerStyle="Disc">
              <ListItem>
                <Paragraph>Combo Box
                </Paragraph>

                <List MarkerStyle="Disc">
                  <ListItem>
                    <Paragraph>Edit (0 or 1)
                    </Paragraph>

                  </ListItem>

                  <ListItem>
                    <Paragraph>List (1)
                    </Paragraph>

                  </ListItem>

                  <ListItem>
                    <Paragraph><Run FontStyle="italic">List Item</Run>
 (child of List; 
0 to many)
                    </Paragraph>

                  </ListItem>

                  <ListItem>
                    <Paragraph>Button (1)
                    </Paragraph>

                  </ListItem>

                </List>

              </ListItem>

            </List>

          </TableCell>

          <TableCell>
            <List MarkerStyle="Disc">
              <ListItem>
                <Paragraph>Combo Box
                </Paragraph>

                <List MarkerStyle="Disc">
                  <ListItem>
                    <Paragraph>List Item (0 to many)
                    </Paragraph>

                  </ListItem>

                </List>

              </ListItem>

            </List>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The edit control in the control view of the combo box is necessary only if the combo box can be edited to take any input, as is the case of the combo box in the Run dialog box.
    </Paragraph>

    <Paragraph FontSize="22">Required UI Automation Properties
    </Paragraph>

    <Paragraph>The following table lists the UI Automation properties whose value or definition is especially relevant to combo box controls. For more information about UI Automation properties, see <Hyperlink NavigateUri="255905af-0b17-485c-93d4-8a2db2a6524b.xaml">UI Automation Properties for Clients</Hyperlink>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>UI Automation Property 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Value 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>AutomationIdProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The value of this property needs to be unique across all controls in an application.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>BoundingRectangleProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The outermost rectangle that contains the whole control.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ClickablePointProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Supported if there is a bounding rectangle. If not every point within the bounding rectangle is clickable, and you perform specialized hit testing, then override and provide a clickable point.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ControlTypeProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>ComboBox
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>This value is the same for all UI frameworks.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>HelpTextProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The help text for combo box controls should explain why the user is being asked to make a choice from a combo box of options. For example, “Selecting an item from this combo box will cause the display resolution for your monitor to be set.”
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsContentElementProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Combo box controls are always included in the content view of the UI Automation tree.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsControlElementProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Combo box controls are always included in the control view of the UI Automation tree.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsKeyboardFocusableProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>True
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Combo box controls expose a set of items from a selection container. The combo box control can receive keyboard focus, although when a <Run>UI Automation client</Run>
 sets focus on a combo box, any items in the combo box subtree might receive the focus. 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>LabeledByProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Combo box controls typically have a static text label that this property references.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>LocalizedControlTypeProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>"combo box"
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Localized string corresponding to the Combo Box control type.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>NameProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>See notes.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The combo box control typically gets its name from a static text control.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Required UI Automation Control Patterns
    </Paragraph>

    <Paragraph>The following table lists the UI Automation control patterns required to be supported by all combo box controls. For more information on control patterns, see <Hyperlink NavigateUri="cc229b33-234b-469b-ad60-f0254f32d45d.xaml">UI Automation Control Patterns Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Control Pattern/Pattern Property 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Support/Value 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IExpandCollapseProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Yes
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The combo box control must always contain the drop-down button in order to be a combo box.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ISelectionProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Yes
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Displays the current selection in the combo box. This support is delegated to the list box beneath the combo box.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IValueProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the combo box has the ability to take arbitrary text values, the Value pattern must be supported. This pattern provides the ability to programmatically set the string contents of the combo box. If the Value pattern is not supported, this indicates that the user must make a selection from the list items within the subtree of the combo box.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IScrollProvider 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Never
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The Scroll pattern is never supported on a combo box directly. It is supported if a list box contained within a combo box can scroll. It may only be supported when the list box is visible on the screen.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Required Events
    </Paragraph>

    <Paragraph>The following table lists the UI Automation events required to be supported by all combo box controls. For more information on events, see <Hyperlink NavigateUri="69eebd8b-39ed-40e7-93cc-4457c4caf746.xaml">UI Automation Events Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>UI Automation Event 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Support 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Notes 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>AutomationFocusChangedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>BoundingRectangleProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsOffscreenProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>IsEnabledProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>StructureChangedEvent 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ExpandCollapseStateProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Required
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>None
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>ValueProperty 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Depends
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>If the control supports the Value pattern, it must support this event.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>ComboBox
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="75159ef8-bd43-4d13-acb7-1f1fe9253160.xaml">UI Automation Control Types Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="65847654-9994-4a9e-b36d-2dd5d998770b.xaml">UI Automation Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about UI Automation Support for the Combo Box Control Type to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

