<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_548df369_c7cc_4dab_b569_08b95ced2e7e"
  Tag     ="Accumulate Animation Values During Repeat Cycles"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Accumulate Animation Values During Repeat Cycles</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use the IsCumulative property to accumulate animation values across repeating cycles. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>Use the <Run FontWeight="Bold">IsCumulative</Run>
 property to accumulate base values of an animation across repeating cycles. For example, if you set an animation to repeat 9 times (RepeatBehavior = “9x”) and you set the property to animate between 10 and 15 (From = 10 To = 15), the property animates from 10 to 15 during the first cycle, from 15 to 20 during the second cycle, from 20 to 25 during the third cycle, and so on. Hence, each animation cycle uses the ending animation value from the previous animation cycle as its base value.
    </Paragraph>

    <Paragraph>You can use the <Run FontWeight="Bold">IsCumulative</Run>
 property with most basic animations and most key frame animations. For more information, see <Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>
 and <Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>The following example shows this behavior by animating the width of four rectangles. The example:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Animates the first rectangle with DoubleAnimation and sets the <Run FontWeight="Bold">IsCumulative</Run>
 property to <Run FontWeight="Bold">true</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Animates the second rectangle with <Run FontWeight="Bold">DoubleAnimation</Run>
 and sets the <Run FontWeight="Bold">IsCumulative</Run>
 property to the default value of <Run FontWeight="Bold">false</Run>
. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Animates the third rectangle with DoubleAnimationUsingKeyFrames and sets the IsCumulative property to <Run FontWeight="Bold">true</Run>
.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Animates the last rectangle with <Run FontWeight="Bold">DoubleAnimationUsingKeyFrames</Run>
 and sets the <Run FontWeight="Bold">IsCumulative</Run>
 property to <Run FontWeight="Bold">false</Run>
.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph/>
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_548df369_c7cc_4dab_b569_08b95ced2e7e_0">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> 
&lt;StackPanel Margin="20" > 
&lt;!-- This rectangle is animated with DoubleAnimation and IsCumulative set to "True". --> 
&lt;Rectangle Name="withIsCumulative" Width="100" Height="20" Margin="12,0,0,5" Fill="#AA3333FF" HorizontalAlignment="Left" /> 
&lt;!-- This rectangle is animated with DoubleAnimation and IsCumulative set to "False". --> 
&lt;Rectangle Name="withoutIsCumulative" Width="100" Height="20" Margin="12,0,0,5" Fill="#AA3333FF" HorizontalAlignment="Left" /> 
&lt;!-- This rectangle is animated with DoubleAnimationUsingKeyFrames and IsCumulative set to "True". --> 
&lt;Rectangle Name="withIsCumulativeUsingKeyFrames" Width="100" Height="20" Margin="12,0,0,5" Fill="#AA3333FF" HorizontalAlignment="Left" /> 
&lt;!-- This rectangle is animated with DoubleAnimationUsingKeyFrames and IsCumulative set to "False". --> 
&lt;Rectangle Name="withoutIsCumulativeUsingKeyFrames" Width="100" Height="20" Margin="12,0,0,5" Fill="#AA3333FF" HorizontalAlignment="Left" /> 
&lt;!-- Create a button to restart the animations. --> 
&lt;Button Margin="0,30,0,0" HorizontalAlignment="Left"> Restart Animations 
&lt;Button.Triggers> 
&lt;EventTrigger RoutedEvent="Button.Click"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;!-- DoubleAnimation with IsCumulative set to "True". Because IsCumulative is set to "True", the base values of the animation will accumulate over repeat cycles. In this example, the first iteration will be from 100 to 200, the second will be from 200 to 300, the third from 300 to 400, etc. --> 
&lt;DoubleAnimation Storyboard.TargetName="withIsCumulative" Storyboard.TargetProperty="Width" RepeatBehavior="4x" AutoReverse="True" IsCumulative="True" Duration="0:0:3" From="100" To="200" /> 
&lt;!-- DoubleAnimation with IsCumulative set to "False". The starting value 100 pixels and repeat cycles do not build on earlier ones. --> 
&lt;DoubleAnimation Storyboard.TargetName="withoutIsCumulative" Storyboard.TargetProperty="Width" RepeatBehavior="4x" AutoReverse="True" IsCumulative="False" Duration="0:0:3" From="100" To="200" /> 
&lt;!-- DoubleAnimationUsingKeyFrames with IsCumulative set to "True". Similar to the DoubleAnimation above, the base value of each cycle builds on the last one. Note that the output value is the total output value from all the key frames for a total output of 100 pixels. --> 
&lt;DoubleAnimationUsingKeyFrames Storyboard.TargetName="withIsCumulativeUsingKeyFrames" Storyboard.TargetProperty="Width" RepeatBehavior="4x" AutoReverse="True" IsCumulative="True" > 
&lt;DoubleAnimationUsingKeyFrames.KeyFrames> 
&lt;LinearDoubleKeyFrame Value="100" KeyTime="0:0:0" /> 
&lt;LinearDoubleKeyFrame Value="130" KeyTime="0:0:1" /> 
&lt;SplineDoubleKeyFrame KeySpline="0.6,0.0 0.9,0.00" Value="200" KeyTime="0:0:3" /> 
&lt;/DoubleAnimationUsingKeyFrames.KeyFrames> 
&lt;/DoubleAnimationUsingKeyFrames> 
&lt;!-- DoubleAnimationUsingKeyFrames with IsCumulative set to "False". The base value of each cycle does not build on the last one. --> 
&lt;DoubleAnimationUsingKeyFrames Storyboard.TargetName="withoutIsCumulativeUsingKeyFrames" Storyboard.TargetProperty="Width" RepeatBehavior="4x" AutoReverse="True" IsCumulative="False" > 
&lt;DoubleAnimationUsingKeyFrames.KeyFrames> 
&lt;LinearDoubleKeyFrame Value="100" KeyTime="0:0:0" /> 
&lt;LinearDoubleKeyFrame Value="130" KeyTime="0:0:1" /> 
&lt;SplineDoubleKeyFrame KeySpline="0.6,0.0 0.9,0.00" Value="200" KeyTime="0:0:3" /> 
&lt;/DoubleAnimationUsingKeyFrames.KeyFrames> 
&lt;/DoubleAnimationUsingKeyFrames> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Button.Triggers> 
&lt;/Button> 
&lt;/StackPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph/>
    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="b89a82be-b03d-481e-a8d3-cc513d09ca00.xaml">How to: Add an Animation Output Value to an Animation Starting Value</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="e6f3b068-eeeb-47fd-8d40-8848c31f1e1e.xaml">How to: Repeat an Animation</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Animation and Timing Overviews
      <LineBreak/><Hyperlink NavigateUri="587e36f6-1957-424e-9d89-c43724f26d84.xaml">Animation and Timing How-to Topics</Hyperlink>

      <LineBreak/>Animation and Timing Samples
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Accumulate Animation Values During Repeat Cycles to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

