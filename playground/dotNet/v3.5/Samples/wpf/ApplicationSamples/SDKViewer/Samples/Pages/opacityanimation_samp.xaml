<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Opacity Animation" x:Class="OpacityAnimation.Page1" Loaded="OnLoaded">
    <Page.Resources>
        <Style x:Key="itemHeaderStyler">
            <Setter Property="ListBoxItem.Margin" Value="0,2,0,5" />
            <Setter Property="ListBoxItem.Padding" Value="2" />
            <Setter Property="ListBoxItem.FontFamily" Value="Verdana" />
            <Setter Property="ListBoxItem.FontWeight" Value="Bold" />
            <Setter Property="ListBoxItem.FontSize" Value="12" />
        </Style>
        <Style x:Key="imageStyler">
            <Setter Property="TextBlock.Margin" Value="15" />
        </Style>
        <Style x:Key="HeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="20" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="TabStyle">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabStyle2">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="TabItem.Foreground" Value="Black" />
        </Style>
        <Style x:Key="SubHeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="16" />
            <Setter Property="TextBlock.Foreground" Value="DarkSlateBlue" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="DisStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="8" />
            <Setter Property="TextBlock.Foreground" Value="Gray" />
            <Setter Property="TextBlock.Margin" Value="5,0,5,0" />
        </Style>
        <Style x:Key="mainContentStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="5,10,5,10" />
        </Style>
        <Style x:Key="tocStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.Margin" Value="0" />
        </Style>
        <Style x:Key="CodeSnippetParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Courier New" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10,0,10,0" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="noteParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="TCStyle">
            <Setter Property="TabControl.Margin" Value="10" />
        </Style>
    </Page.Resources>
    <TabControl MinHeight="500" MaxHeight="700" MinWidth="400" Style="{StaticResource TCStyle}">
        <TabItem Style="{StaticResource TabStyle}" Header="Opacity Animation Sample" IsSelected="true">
            <StackPanel>
                <TextBlock Style="{StaticResource HeaderStyle}">Opacity Animation Sample</TextBlock>
                <TextBlock Style="{StaticResource mainContentStyle}">This example demonstrates animation of the opacity property.</TextBlock>
            </StackPanel>
        </TabItem>
        <TabItem Name="xaml" Style="{StaticResource TabStyle}" Header="XAML">
            <ScrollViewer HorizontalScrollBarVisibility="Visible">
                <TextBlock Name="xamlCheck">
                    <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve"><![CDATA[
<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  WindowTitle="Opacity Animation Example">
  <StackPanel Margin="20,0,0,0" Background="{StaticResource myGridBrushResource}">


    <TextBlock Margin="0,30,0,0" FontWeight="Bold">Animating the Opacity of Elements</TextBlock>
    <TextBlock Margin="0,10,0,0">A Button</TextBlock>

    <!-- The opacity property of this Button element is animated. -->

    <Button Name="opacityAnimatedButton"
      HorizontalAlignment="Left" VerticalAlignment="Top">
      A Button
    </Button>

    <TextBlock Margin="0,10,0,0">An Image</TextBlock>

    <!-- The opacity property of this Image element is animated. -->

    <Image Name="opacityAnimatedImage"
      Source="sampleImages\berries.jpg" Stretch="None"
      HorizontalAlignment="Left" VerticalAlignment="Top" />

    <TextBlock Margin="0,30,0,0" FontWeight="Bold">Animating the Opacity of a Brush</TextBlock>

    <!-- The opacity of the brush used to fill this Button element
         is animated. -->

    <Button Name="opacityAnimatedBrushButton" Background="Orange"
      HorizontalAlignment="Left" VerticalAlignment="Top">
      A Button
    </Button>


    <TextBlock Margin="0,30,0,0" FontWeight="Bold"> Animating the Opacity of a Color within a Brush</TextBlock>

    <!-- The opacity of one of the colors that comprise the gradient
         used to fill this Rectangle element is animated. -->

    <Rectangle Name="opacityAnimatedColorRectangle"
      Width="120" Height="50"  Stroke="Black" StrokeThickness="1"
      HorizontalAlignment="Left" VerticalAlignment="Top">
      <Rectangle.Fill>
        <LinearGradientBrush>
           <LinearGradientBrush.GradientStops>
             <GradientStop Offset="0.0" Color="MediumBlue" />
             <GradientStop Offset="0.75" Color="BlueViolet" />
           </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Rectangle.Fill>
    </Rectangle>


  </StackPanel>
  <Page.Triggers>
    <EventTrigger RoutedEvent="Page.Loaded">
      <BeginStoryboard Name="myBeginStoryboard">
        <Storyboard Name="myStoryboard">
          <DoubleAnimation Storyboard.TargetName="opacityAnimatedButton"
            Storyboard.TargetProperty="(Button.Opacity)" From="1" To="0"
            Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
          <DoubleAnimation Storyboard.TargetName="opacityAnimatedImage"
            Storyboard.TargetProperty="(Image.Opacity)" From="1" To="0"
            Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
          <DoubleAnimation Storyboard.TargetName="opacityAnimatedBrushButton"
            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" From="1" To="0"
            Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
          <DoubleAnimation Storyboard.TargetName="opacityAnimatedBrushButton"
            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" From="1" To="0"
            Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
          <ColorAnimation  Storyboard.TargetName="opacityAnimatedColorRectangle"
            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
            Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever">
            <ColorAnimation.By>
             <Color ScA="-1.0" ScR="0.0" ScG="0.0" ScB="0.0" />
            </ColorAnimation.By>
          </ColorAnimation>
        </Storyboard>
      </BeginStoryboard>
    </EventTrigger>
  </Page.Triggers>
</Page>]]>
                      </TextBox>
                </TextBlock>
            </ScrollViewer>
        </TabItem>
        <TabItem Name="xamlcsharp" Style="{StaticResource TabStyle}" Header="XAML + C#">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xcsharpCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="C#">
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="xamlvb" Style="{StaticResource TabStyle}" Header="XAML + Visual Basic.NET">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xvbCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="VB.NET">
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="csharp" Style="{StaticResource TabStyle}" Header="C#">
        </TabItem>
        <TabItem Name="vb" Style="{StaticResource TabStyle}" Header="Visual Basic.NET">
        </TabItem>
        <TabItem Name="managedcpp" Style="{StaticResource TabStyle}" Header="Managed C++">
        </TabItem>
        <TabItem Style="{StaticResource TabStyle}" Header="Preview Sample">
            <!-- OpacityAnimationExample.xaml
     This example shows how to animate the opacity of objects, making them fade in and
     out of view. -->
            <Canvas Height="600">
                <Canvas.Resources>
                    <DrawingBrush x:Key="myGridBrushResource" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="White">
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0 0 1 1" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                    <GeometryDrawing Brush="#66CCCCCC">
                                        <GeometryDrawing.Geometry>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0 0 0.5 0.5" />
                                                <RectangleGeometry Rect="0.5 0.5 0.5 0.5" />
                                            </GeometryGroup>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Canvas.Resources>
                <StackPanel Margin="20" Background="{StaticResource myGridBrushResource}">
                    <TextBlock Margin="0,30,0,0" FontWeight="Bold">Animating the Opacity of Elements</TextBlock>
                    <TextBlock Margin="0,10,0,0">A Button</TextBlock>
                    <!-- The opacity property of this Button element is animated. -->
                    <Button Name="opacityAnimatedButton" HorizontalAlignment="Left" VerticalAlignment="Top">
      A Button
    </Button>
                    <TextBlock Margin="0,10,0,0">An Image</TextBlock>
                    <!-- The opacity property of this Image element is animated. -->
                    <Image HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="None" Name="opacityAnimatedImage">
                        <Image.Source>
                            <BitmapImage UriSource="pack://application:,,,/samples;component/Images\berries.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock Margin="0,30,0,0" FontWeight="Bold">Animating the Opacity of a Brush</TextBlock>
                    <!-- The opacity of the brush used to fill this Button element
         is animated. -->
                    <Button Name="opacityAnimatedBrushButton" Background="Orange" HorizontalAlignment="Left" VerticalAlignment="Top">
      A Button
    </Button>
                    <TextBlock Margin="0,30,0,0" FontWeight="Bold">Animating the Opacity of a Color within a Brush</TextBlock>
                    <!-- The opacity of one of the colors that comprise the gradient
         used to fill this Rectangle element is animated. -->
                    <Rectangle Name="opacityAnimatedColorRectangle" Width="120" Height="50" Stroke="Black" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle.Fill>
                            <LinearGradientBrush>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0.0" Color="MediumBlue" />
                                    <GradientStop Offset="0.75" Color="BlueViolet" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <StackPanel.Triggers>
                        <EventTrigger RoutedEvent="StackPanel.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Animates the Opacity property of a rectangle from 1 to 0 over 5 seconds. -->
                                    <DoubleAnimation Storyboard.TargetName="opacityAnimatedButton" Storyboard.TargetProperty="(Button.Opacity)" From="1" To="0" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                    <!-- Animates the Opacity property of an image from 1 to 0 over 5 seconds. -->
                                    <DoubleAnimation Storyboard.TargetName="opacityAnimatedImage" Storyboard.TargetProperty="(Image.Opacity)" From="1" To="0" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                    <!-- Animates the Opacity property of a brush used to fill a rectangle from 1 to 0 over 5 seconds. -->
                                    <DoubleAnimation Storyboard.TargetName="opacityAnimatedBrushButton" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" From="1" To="0" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                    <!-- Animates the opacity of a color within a LinearGradientBrush.  -->
                                    <ColorAnimation Storyboard.TargetName="opacityAnimatedColorRectangle" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation.By>
                                            <Color ScA="-1.0" ScR="0.0" ScG="0.0" ScB="0.0" />
                                        </ColorAnimation.By>
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </StackPanel.Triggers>
                </StackPanel>
                <!--storyboards moved to root-->
            </Canvas>
        </TabItem>
    </TabControl>
</Page>