<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_8bb6c46a_a444_4d4e_93d5_1ee5f9d66992"
  Tag     ="Handle MouseUp and MouseDown Events for a TextBox"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Handle MouseUp and MouseDown Events for a TextBox</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow/>
      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to handle MouseUp and MouseDown for a TextBox.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">TextBox</Run>
 has built-in handling for the <Run>bubbling</Run>
<Run FontWeight="Bold">MouseUp</Run>
 and events. Consequently, custom event handlers that listen for <Run FontWeight="Bold">MouseUp</Run>
 or <Run FontWeight="Bold">MouseDown</Run>
 events from a <Run FontWeight="Bold">TextBox</Run>
 will never be called. If you need to respond to these events, listen for the <Run>tunneling</Run>
 PreviewMouseUp and PreviewMouseDown events instead.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following Extensible Application Markup Language (XAML) example shows how to use the <Run FontWeight="Bold">PreviewMouseUp</Run>
 and <Run FontWeight="Bold">PreviewMouseDown</Run>
 attributes to specify the handler delegates for these events.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TextBox PreviewMouseUp="MouseUpHandler" PreviewMouseDown="MouseDownHandler" /> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example shows how to add event listeners programmatically.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>TextBox textBox = new TextBox(); 
textBox.PreviewMouseUp += MouseUpHandler; 
textBox.PreviewMouseDown += MouseDownHandler; 
// Note: Event listeners can also be added using the AddHandler // method. </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example shows empty event handler methods that correspond to the delegates specified in the previous examples.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>void MouseUpHandler(Object sender, RoutedEventArgs args) { // This method is called whenever the PreviewMouseUp event fires. } void MouseDownHandler(Object sender, RoutedEventArgs args) { // This method is called whenever the PreviewMouseDown event fires. } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Handle MouseUp and MouseDown Events for a TextBox to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

