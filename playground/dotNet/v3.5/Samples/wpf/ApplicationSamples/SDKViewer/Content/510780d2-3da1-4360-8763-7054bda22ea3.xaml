<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_510780d2_3da1_4360_8763_7054bda22ea3"
  Tag     ="Manipulate Flow Content Elements through the Inlines Property"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Manipulate Flow Content Elements through the Inlines Property</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>These examples demonstrate some of the more common operations that can be performed on inline flow content elements (and containers of such elements, such as TextBlock) through the <Run FontWeight="Bold">Inlines</Run>
 property. Flow content elements that feature an <Run FontWeight="Bold">Inlines</Run>
 property include:
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Bold 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Hyperlink 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Italic 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Paragraph 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Span 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Underline 
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph>These examples happen to use <Run FontWeight="Bold">Span</Run>
 as the flow content element, but these techniques are applicable to all elements or controls that host an <Run FontWeight="Bold">InlineCollection</Run>
 collection. For information on <Run FontWeight="Bold">InlineCollection</Run>
, see <Hyperlink NavigateUri="4e03f058-8377-4438-a36e-e186c8fc494b.xaml">Flow Collection Elements</Hyperlink>
. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example creates a new <Run FontWeight="Bold">Span</Run>
 object, and then uses the <Run FontWeight="Bold">Add</Run>
 method to add two text runs as content children of the <Run FontWeight="Bold">Span</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Span spanx = new Span(); 
spanx.Inlines.Add(new Run("A bit of text content...")); 
spanx.Inlines.Add(new Run("A bit more text content...")); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example creates a new Run element and inserts it at the beginning of the <Run FontWeight="Bold">Span</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Run runx = new Run("Text to insert..."); 
spanx.Inlines.InsertBefore(spanx.Inlines.FirstInline, runx); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example gets the number of top-level Inline elements contained in the <Run FontWeight="Bold">Span</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>int countTopLevelInlines = spanx.Inlines.Count; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example deletes the last <Run FontWeight="Bold">Inline</Run>
 element in the <Run FontWeight="Bold">Span</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>spanx.Inlines.Remove(spanx.Inlines.LastInline); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example clears all of the contents (<Run FontWeight="Bold">Inline</Run>
 elements) from the <Run FontWeight="Bold">Span</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>spanx.Inlines.Clear(); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="cbb7291e-3f1b-433e-9e16-f4d93ced14e8.xaml">How to: Manipulate a FlowDocument through the Blocks Property</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="3f8884f4-7e1f-456b-be06-fbd3cf469bf3.xaml">How to: Manipulate a Table's Columns through the Columns Property</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="ea61440f-08ae-44ed-b314-5716aaaae3ed.xaml">How to: Manipulate a Table's Row Groups through the RowGroups Property</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="4e03f058-8377-4438-a36e-e186c8fc494b.xaml">Flow Collection Elements</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Manipulate Flow Content Elements through the Inlines Property to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

