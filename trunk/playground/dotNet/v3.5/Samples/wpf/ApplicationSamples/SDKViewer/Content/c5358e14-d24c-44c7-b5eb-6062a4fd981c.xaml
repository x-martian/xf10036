<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_c5358e14_d24c_44c7_b5eb_6062a4fd981c"
  Tag     ="x:Array Markup Extension"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>x:Array Markup Extension</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Provides general support for arrays of objects in XAML.
    </Paragraph>

    <Paragraph FontSize="22"><Run>XAML Object Element Syntax</Run>

    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run/>
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;<Run FontStyle="italic">object</Run>
> 
&lt;<Run FontStyle="italic">object.property</Run>
> 
&lt;<Run FontWeight="Bold">x:Array</Run>
 Type="{x:Type <Run FontStyle="italic">typeName</Run>
}"> 
&lt;<Run FontStyle="italic">arrayObject1</Run>
/> 
&lt;<Run FontStyle="italic">arrayObject2</Run>
/> ... 
&lt;/<Run FontWeight="Bold">x:Array</Run>
> 
&lt;/<Run FontStyle="italic">object.property</Run>
> 
&lt;<Run FontStyle="italic">object</Run>
></Span>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>XAML Values</Run>

    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph><Run FontStyle="italic">typeName</Run>

            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The name of the type that your <Run FontWeight="Bold">x:Array</Run>
 will contain. Setting the Type property in attribute syntax requires use of the <Hyperlink NavigateUri="e0e0ce6f-e873-49c7-8ad7-8b840eb353ec.xaml">x:Type Markup Extension</Hyperlink>
.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph><Run FontStyle="italic">arrayObject1</Run>
, <Run FontStyle="italic">arrayObject2</Run>
, etc.
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Object elements that define the contents of your array. Typically, these object elements are not elements that exist in the WPF xmlns namespace, and will require a prefix mapping. For more information, see <Hyperlink NavigateUri="618dc745-8b14-4886-833f-486d2254bb78.xaml">Markup Extensions and XAML</Hyperlink>
. The elements must also support the requirements for being instantiated in XAML. For details, see <Hyperlink NavigateUri="e7313137-581e-4a64-8453-d44e15a6164a.xaml">XAML and Custom Classes</Hyperlink>
.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>Remarks</Run>

    </Paragraph>

    <Paragraph>Object element syntax is the only XAML syntax available for the <Run FontWeight="Bold">x:Array</Run>
 markup extension. Although it is possible to instantiate an array using an attribute syntax, it is not possible to populate that array with any items. Populating an array using an attribute syntax would require a specialized type converter and markup extension that is capable of parsing a string and converting it to the appropriate type of object, and the <Run FontWeight="Bold">x:Array</Run>
 extension is deliberately intended to be general. In object element syntax, setting the <Run FontWeight="Bold">Type</Run>
 property is required.
    </Paragraph>

    <Paragraph>In the WPF XAML reader implementation, the handling for this markup extension is defined by the ArrayExtension class. This class is not sealed, and could be used as the basis for a custom array type implementation.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">x:Array</Run>
 is more intended for general language extensibility in XAML. But <Run FontWeight="Bold">x:Array</Run>
 can also be useful for populating certain properties using XAML that take general collection support interfaces or classes as their structured property content, for instance as IEnumerable.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">x:Array</Run>
 is a markup extension. Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties. <Run FontWeight="Bold">x:Array</Run>
 is somewhat of an exception to that general rule, because instead of providing alternative attribute value handling, <Run FontWeight="Bold">x:Array</Run>
 provides alternative handling of its inner text content. This provides support such that element classes that might not be supported by any existing content model can be grouped into an array, and can be referenced later in code-behind by accessing the named array and calling array methods to get individual array items.
    </Paragraph>

    <Paragraph>All markup extensions in XAML use the { and } characters in their attribute syntax, which is the convention by which a XAML reader recognizes that a markup extension must process the attribute. For more information, see <Hyperlink NavigateUri="618dc745-8b14-4886-833f-486d2254bb78.xaml">Markup Extensions and XAML</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="481765e5-5467-4a75-9f7b-e10e2ac410d9.xaml">Styling and Templating</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a80db4cd-dd0f-479f-a45f-3740017c22e4.xaml">XAML Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="618dc745-8b14-4886-833f-486d2254bb78.xaml">Markup Extensions and XAML</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about x:Array Markup Extension to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

