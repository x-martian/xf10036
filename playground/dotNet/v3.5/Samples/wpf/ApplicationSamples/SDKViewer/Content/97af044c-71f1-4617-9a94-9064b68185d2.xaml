<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_97af044c_71f1_4617_9a94_9064b68185d2"
  Tag     ="StaticResource Markup Extension"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>StaticResource Markup Extension</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Provides a value for any XAML property attribute by looking up a reference to an already defined resource. Lookup behavior for that resource is analogous to compile-time lookup, which will look for resources that were previously compiled from the markup of the current XAML page as well as other application sources, and will generate that resource value as the property value in the compiled runtime objects.
    </Paragraph>

    <Paragraph FontSize="22"><Run>XAML Attribute Usage</Run>

    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run/>
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;<Run FontStyle="italic">object</Run>
<Run FontStyle="italic">property</Run>
="{<Run FontWeight="Bold">StaticResource</Run>
<Run FontStyle="italic">key</Run>
}" .../></Span>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>XAML Object Element Usage</Run>

    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run/>
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;<Run FontStyle="italic">object</Run>
> 
&lt;<Run FontStyle="italic">object</Run>
.<Run FontStyle="italic">property</Run>
> 
&lt;<Run FontWeight="Bold">StaticResource</Run>
 ResourceKey="<Run FontStyle="italic">key</Run>
" .../> 
&lt;/<Run FontStyle="italic">object</Run>
.<Run FontStyle="italic">property</Run>
> 
&lt;/<Run FontStyle="italic">object</Run>
></Span>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>XAML Values</Run>

    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph><Run FontStyle="italic">key</Run>

            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The key for the requested resource. This key was initially assigned by the <Hyperlink NavigateUri="1985cd45-f197-42d5-b75e-886add64b248.xaml">x:Key Attribute</Hyperlink>
 if a resource was created in markup, or was provided as the <Run>key</Run>
 parameter when calling System.Windows.ResourceDictionary.Add(System.Object,System.Object) if the resource was created in code.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>Remarks</Run>

    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Important: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>A <Run FontWeight="Bold">StaticResource</Run>
 must not attempt to make a forward reference to a resource that is defined lexically further within the XAML file. Attempting to do so is not supported, and even if such a reference does not fail, attempting the forward reference will incur a load time performance penalty when the internal hashtables representing a ResourceDictionary are searched. For best results, adjust the composition of your resource dictionaries such that forward references can be avoided. If you cannot avoid a forward reference, use <Hyperlink NavigateUri="7324f243-03af-4c2b-b0db-26ac6cdfcbe4.xaml">DynamicResource Markup Extension</Hyperlink>
 instead.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The specified ResourceKey should correspond to an existing resource determined by <Hyperlink NavigateUri="1985cd45-f197-42d5-b75e-886add64b248.xaml">x:Key Attribute</Hyperlink>
 at some level in your page, application, the available control themes, or system resources, and the resource lookup will happen in that order. For more information about resource lookup for static and dynamic resources, see <Hyperlink NavigateUri="91580b89-a0a8-4889-aecb-fddf8e63175f.xaml">Resources Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>A resource key may be any string defined in the <Hyperlink NavigateUri="11e4cada-41d2-494d-9531-0d3df4dfcbe3.xaml">XAMLName Grammar</Hyperlink>
. A resource key may also be other object types, such as a Type. A <Run FontWeight="Bold">Type</Run>
 key is fundamental to how controls can be styled by themes. For more information, see <Hyperlink NavigateUri="3d864748-cff0-4e63-9b23-d8e5a635b28f.xaml">Control Authoring Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>The alternative declarative means of referencing a resource is as a <Hyperlink NavigateUri="7324f243-03af-4c2b-b0db-26ac6cdfcbe4.xaml">DynamicResource Markup Extension</Hyperlink>
.
    </Paragraph>

    <Paragraph>Attribute syntax is the most common syntax used with this markup extension. The string token provided after the <Run FontWeight="Bold">StaticResource</Run>
 identifier string is assigned as the <Run FontWeight="Bold">ResourceKey</Run>
 value of the underlying StaticResourceExtension extension class.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">StaticResource</Run>
 can be used in object element syntax. In this case, specifying the value of the <Run FontWeight="Bold">ResourceKey</Run>
 property is required.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">StaticResource</Run>
 can also be used in a verbose attribute usage that specifies the <Run FontWeight="Bold">ResourceKey</Run>
 property as a property=value pair:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run/>
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;<Run FontStyle="italic">object property</Run>
="{<Run FontWeight="Bold">StaticResource</Run>
 ResourceKey=<Run FontStyle="italic">key</Run>
}" .../></Span>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The verbose usage is often useful for extensions that have more than one settable property, or if some properties are optional. Because <Run FontWeight="Bold">StaticResource</Run>
 has only one settable property, which is required, this verbose usage is not typical.
    </Paragraph>

    <Paragraph>In the WPF XAML reader implementation, the handling for this markup extension is defined by the <Run FontWeight="Bold">StaticResourceExtension</Run>
 class.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">StaticResource</Run>
 is a markup extension. Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties. All markup extensions in XAML use the { and } characters in their attribute syntax, which is the convention by which a XAML reader recognizes that a markup extension must process the attribute. For more information, see <Hyperlink NavigateUri="618dc745-8b14-4886-833f-486d2254bb78.xaml">Markup Extensions and XAML</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="481765e5-5467-4a75-9f7b-e10e2ac410d9.xaml">Styling and Templating</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a80db4cd-dd0f-479f-a45f-3740017c22e4.xaml">XAML Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="618dc745-8b14-4886-833f-486d2254bb78.xaml">Markup Extensions and XAML</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="91580b89-a0a8-4889-aecb-fddf8e63175f.xaml">Resources Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="c1cfcddb-e39c-41c8-a7f3-60984914dfae.xaml">Resources and Code</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about StaticResource Markup Extension to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

