<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_6f671b95_7f30_4836_9a4f_aeb7dc30121f"
  Tag     ="Animate a 3-D Rotation Using Key Frames (Rotation3DAnimationUsingKeyFrames)"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Animate a 3-D Rotation Using Key Frames</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>In the following example, Rotation3DAnimationUsingKeyFrames is used to make a 3D object rotate while its axis of rotation animates resulting in a "wobble". This animation uses the following key frames:
    </Paragraph>

    <List MarkerStyle="Decimal">
      <ListItem>
        <Paragraph>LinearRotation3DKeyFrame is used to create a smooth, linear interpolation between values.
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>DiscreteRotation3DKeyFrame is used to create sudden "jumps" between values (no interpolation).
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>SplineRotation3DKeyFrame is used to create a variable transition between values depending on the KeySpline property. In the example below, this part of the animation starts off slow but toward the end of the time segment, speeds up exponentially.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_6f671b95_7f30_4836_9a4f_aeb7dc30121f_0">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" > 
&lt;DockPanel> 
&lt;Viewbox> 
&lt;Canvas Width="321" Height="201"> 
&lt;!-- The Viewport3D provides a rendering surface for 3-D visual content. --> 
&lt;Viewport3D Name="MyAnimatedObject" ClipToBounds="True" Width="150" Height="150" Canvas.Left="0" Canvas.Top="10"> 
&lt;!-- Defines the camera used to view the 3D object. --> 
&lt;Viewport3D.Camera> 
&lt;PerspectiveCamera Position="0,0,2" LookDirection="0,0,-1" FieldOfView="60" /> 
&lt;/Viewport3D.Camera> 
&lt;!-- The ModelVisual3D children contain the 3D models --> 
&lt;Viewport3D.Children> 
&lt;!-- Two ModelVisual3D define the lights cast in the scene. Without light, the 3D object cannot be seen. Also, the direction of the lights affect shadowing. --> 
&lt;ModelVisual3D> 
&lt;ModelVisual3D.Content> 
&lt;DirectionalLight Color="#FFFFFF" Direction="-0.612372,-0.5,-0.612372" /> 
&lt;/ModelVisual3D.Content> 
&lt;/ModelVisual3D> 
&lt;ModelVisual3D> 
&lt;ModelVisual3D.Content> 
&lt;DirectionalLight Color="#FFFFFF" Direction="0.612372,-0.5,-0.612372" /> 
&lt;/ModelVisual3D.Content> 
&lt;/ModelVisual3D> 
&lt;ModelVisual3D> 
&lt;ModelVisual3D.Content> 
&lt;GeometryModel3D> 
&lt;!-- The geometry specifes the shape of the 3D plane. In this case, a flat sheet is created. --> 
&lt;GeometryModel3D.Geometry> 
&lt;MeshGeometry3D TriangleIndices="0,1,2 3,4,5 " Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 " TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0 " Positions="-0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 " /> 
&lt;/GeometryModel3D.Geometry> 
&lt;!-- The material specifies the material applied to the plane. In this case it is a linear gradient.--> 
&lt;GeometryModel3D.Material> 
&lt;MaterialGroup> 
&lt;DiffuseMaterial> 
&lt;DiffuseMaterial.Brush> 
&lt;LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5"> 
&lt;LinearGradientBrush.GradientStops> 
&lt;GradientStop Color="Yellow" Offset="0" /> 
&lt;GradientStop Color="Red" Offset="0.25" /> 
&lt;GradientStop Color="Blue" Offset="0.75" /> 
&lt;GradientStop Color="LimeGreen" Offset="1" /> 
&lt;/LinearGradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;/DiffuseMaterial.Brush> 
&lt;/DiffuseMaterial> 
&lt;/MaterialGroup> 
&lt;/GeometryModel3D.Material> 
&lt;!-- The Transform specifies how to transform the 3D object. The properties of the Rotation object are animated causing the 3D object to rotate and "wobble" (see Storyboard below).--> 
&lt;GeometryModel3D.Transform> 
&lt;RotateTransform3D x:Name="myRotateTransform3D" > 
&lt;RotateTransform3D.Rotation> 
&lt;AxisAngleRotation3D Axis="0,3,0" Angle="40" /> 
&lt;/RotateTransform3D.Rotation> 
&lt;/RotateTransform3D> 
&lt;/GeometryModel3D.Transform> 
&lt;/GeometryModel3D> 
&lt;/ModelVisual3D.Content> 
&lt;/ModelVisual3D> 
&lt;/Viewport3D.Children> 
&lt;!-- Trigger the rotation animation when the 3D object loads. --> 
&lt;Viewport3D.Triggers> 
&lt;EventTrigger RoutedEvent="Viewport3D.Loaded"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;!-- This animation animates the Rotation property of the RotateTransform causing the 3D shape to rotate and wobble as the rotation angle and axis are animated. --> 
&lt;Rotation3DAnimationUsingKeyFrames Storyboard.TargetName="myRotateTransform3D" Storyboard.TargetProperty="Rotation" > 
&lt;Rotation3DAnimationUsingKeyFrames.KeyFrames> 
&lt;!-- Using a LinearRotation3DKeyFrame, the object gradually rotates to an angle of -60 degrees while the axis of rotation shifts (animates) to a new value. --> 
&lt;LinearRotation3DKeyFrame KeyTime="0:0:1"> 
&lt;LinearRotation3DKeyFrame.Value> 
&lt;AxisAngleRotation3D Axis="1,0,1" Angle="-60" /> 
&lt;/LinearRotation3DKeyFrame.Value> 
&lt;/LinearRotation3DKeyFrame> 
&lt;!-- Using a DiscreteRotation3DKeyFrame, the object suddenly rotates to the an angle of 80 degrees on a new axis. This happens immdeiately after the first 1 and a half seconds of the animation. --> 
&lt;DiscreteRotation3DKeyFrame KeyTime="0:0:1.5"> 
&lt;DiscreteRotation3DKeyFrame.Value> 
&lt;AxisAngleRotation3D Axis="0,0,1" Angle="80" /> 
&lt;/DiscreteRotation3DKeyFrame.Value> 
&lt;/DiscreteRotation3DKeyFrame> 
&lt;!-- Using a SplineRotation3DKeyFrame, the object rotates back to its starting position. The animation starts out slowly at first and then speeds up. This KeyFrame ends after the fourth second. --> 
&lt;SplineRotation3DKeyFrame KeySpline="0.6,0.0 0.9,0.00" KeyTime="0:0:4"> 
&lt;SplineRotation3DKeyFrame.Value> 
&lt;AxisAngleRotation3D Axis="0,3,0" Angle="40" /> 
&lt;/SplineRotation3DKeyFrame.Value> 
&lt;/SplineRotation3DKeyFrame> 
&lt;/Rotation3DAnimationUsingKeyFrames.KeyFrames> 
&lt;/Rotation3DAnimationUsingKeyFrames> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Viewport3D.Triggers> 
&lt;/Viewport3D> 
&lt;/Canvas> 
&lt;/Viewbox> 
&lt;/DockPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="1020e44e-e21e-49a8-be53-53cbc1910e83.xaml">How to: Animate a 3-D Rotation Using Storyboards</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a92223ec-b634-4f5e-8e79-d33bc43ecfb3.xaml">How to: Animate a 3-D Rotation Using Rotation3DAnimation</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="adca9cb1-066b-4de8-abbb-6b4007579ee7.xaml">How to: Animate a 3-D Rotation Using Quaternions</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="09e5707b-7523-4a08-9aa7-bb13cbedccdf.xaml">How to: Animate a 3-D Rotation Using Key Frames (QuaternionAnimationUsingKeyFrames)</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="67f31ed4-e36b-4b02-9889-dcce245d7afc.xaml">3-D Graphics Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Animate a 3-D Rotation Using Key Frames to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

