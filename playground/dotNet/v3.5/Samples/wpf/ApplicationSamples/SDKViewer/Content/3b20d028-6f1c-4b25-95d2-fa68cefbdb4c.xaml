<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_3b20d028_6f1c_4b25_95d2_fa68cefbdb4c"
  Tag     ="Create a Rollover Effect Using Events"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create a Rollover Effect Using Events</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to change the color of an element as the mouse pointer enters and leaves the area occupied by the element.
    </Paragraph>

    <Paragraph>This example consists of a Extensible Application Markup Language (XAML) file and a code-behind file. For the complete samples, see Mouse Pointer Sample.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>This example demonstrates how to use events, but the recommended way to achieve this same effect is to use a Trigger in a style. For more information, see <Hyperlink NavigateUri="481765e5-5467-4a75-9f7b-e10e2ac410d9.xaml">Styling and Templating</Hyperlink>
.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following XAML creates the user interface, which consists of Border around a TextBlock, and attaches the MouseEnter and MouseLeave event handlers to the <Run FontWeight="Bold">Border</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel> 
&lt;Border MouseEnter="OnMouseEnterHandler" MouseLeave="OnMouseLeaveHandler" Name="border1" Margin="10" BorderThickness="1" BorderBrush="Black" VerticalAlignment="Center" Width="300" Height="100"> 
&lt;Label Margin="10" FontSize="14" HorizontalAlignment="Center">Move Cursor Over Me
&lt;/Label> 
&lt;/Border> 
&lt;/StackPanel> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following code behind creates the MouseEnter and <Run FontWeight="Bold">MouseLeave</Run>
 event handlers. When the mouse pointer enters the <Run FontWeight="Bold">Border</Run>
, the background of the <Run FontWeight="Bold">Border</Run>
 is changed to red. When the mouse pointer leaves the <Run FontWeight="Bold">Border</Run>
, the background of the <Run FontWeight="Bold">Border</Run>
 is changed back to white.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public partial class Window1 : Window { public Window1() { InitializeComponent(); 
} // raised when mouse cursor enters the area occupied by the element void OnMouseEnterHandler(object sender, MouseEventArgs e) { border1.Background = Brushes.Red; 
} // raised when mouse cursor leaves the area occupied by the element void OnMouseLeaveHandler(object sender, MouseEventArgs e) { border1.Background = Brushes.White; 
} } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Partial Public Class Window1 Inherits Window Public Sub New() InitializeComponent() End Sub ' raised when mouse cursor enters the are occupied by the element Sub OnMouseEnterHandler(ByVal sender As Object, ByVal e As MouseEventArgs) border1.Background = Brushes.Red End Sub ' raised when mouse cursor leaves the are occupied by the element Sub OnMouseLeaveHandler(ByVal sender As Object, ByVal e As MouseEventArgs) border1.Background = Brushes.White End Sub End Class </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>How to: Use Event Triggers in a Style
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create a Rollover Effect Using Events to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

