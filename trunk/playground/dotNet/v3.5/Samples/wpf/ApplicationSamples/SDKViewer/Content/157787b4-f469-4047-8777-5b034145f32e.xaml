<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_157787b4_f469_4047_8777_5b034145f32e"
  Tag     ="Handle a Routed Event"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Handle a Routed Event</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how <Run>bubbling</Run>
 events work and how to write a handler that can process the <Run>routed event</Run>
 data.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>In Windows Presentation Foundation (WPF), elements are arranged in an <Run>element tree</Run>
 structure. The parent element can participate in the handling of events that are initially raised by child elements in the element tree. This is possible because of <Run>event routing</Run>
. 
    </Paragraph>

    <Paragraph>Routed events typically follow one of two routing strategies, bubbling or <Run>tunneling</Run>
. This example focuses on the bubbling event and uses the System.Windows.Controls.Primitives.ButtonBase.Click event to show how routing works.
    </Paragraph>

    <Paragraph>The following example uses XAML attribute syntax to attach an event handler to a common parent element, which in this example is StackPanel. Instead of attaching individual event handlers for each Button child element, the example uses attribute syntax to attach the event handler to the <Run FontWeight="Bold">StackPanel</Run>
 parent element. This event-handling pattern shows how to use event routing as a technique for reducing the number of elements where a handler is attached. All the bubbling events for each <Run FontWeight="Bold">Button</Run>
 route through the parent element.
    </Paragraph>

    <Paragraph>Note that on the parent <Run FontWeight="Bold">StackPanel</Run>
 element, the <Run FontWeight="Bold">Click</Run>
 event name specified as the attribute is partially qualified by naming the <Run FontWeight="Bold">Button</Run>
 class. The <Run FontWeight="Bold">Button</Run>
 class is a ButtonBase derived class that has the <Run FontWeight="Bold">Click</Run>
 event in its members listing. This partial qualification technique for attaching an event handler is necessary if the event that is being handled does not exist in the members listing of the element where the routed event handler is attached.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;StackPanel xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="SDKSample.RoutedEventHandle" Name="dpanel" Button.Click="HandleClick" > 
&lt;StackPanel.Resources> 
&lt;Style TargetType="{x:Type Button}"> 
&lt;Setter Property="Height" Value="20"/> 
&lt;Setter Property="Width" Value="250"/> 
&lt;Setter Property="HorizontalAlignment" Value="Left"/> 
&lt;/Style> 
&lt;/StackPanel.Resources> 
&lt;Button Name="Button1">Item 1
&lt;/Button> 
&lt;Button Name="Button2">Item 2
&lt;/Button> 
&lt;TextBlock Name="results"/> 
&lt;/StackPanel> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For the complete sample, see RoutedEvent Handling Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>RoutedEvent
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="ee5258b7-6567-415a-9b1c-c0cbe46e79ef.xaml">Input Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="1a2189ae-13b4-45b0-b12c-8de2e49c29d2.xaml">Routed Events Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="67cce290-ca26-4c41-a797-b68aabc45479.xaml">XAML Syntax Terminology</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="00463181-36eb-4be0-bfa2-452854cce642.xaml">Events How-to Topics</Hyperlink>

      <LineBreak/>Events Samples
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Handle a Routed Event to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

