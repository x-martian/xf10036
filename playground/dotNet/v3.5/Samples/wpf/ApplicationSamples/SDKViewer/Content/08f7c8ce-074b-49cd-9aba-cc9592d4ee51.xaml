<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_08f7c8ce_074b_49cd_9aba_cc9592d4ee51"
  Tag     ="Create a Shape Using a StreamGeometry"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create a Shape Using a StreamGeometry</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>StreamGeometry is light-weight alternative to PathGeometry for creating geometric shapes. Use a <Run FontWeight="Bold">StreamGeometry</Run>
 when you need to describe a complex geometry but do not want the overhead of supporting data binding, animation, or modification. For example, because of its efficiency, the <Run FontWeight="Bold">StreamGeometry</Run>
 class is a good choice for describing adorners.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example uses attribute syntax to create a triangular <Run FontWeight="Bold">StreamGeometry</Run>
 in XAML.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_08f7c8ce_074b_49cd_9aba_cc9592d4ee51_0">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> 
&lt;StackPanel> 
&lt;Path Data="F0 M10,100 L100,100 100,50Z" StrokeThickness="1" Stroke="Black"/> 
&lt;/StackPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For more information about <Run FontWeight="Bold">StreamGeometry</Run>
 attribute syntax, see the <Hyperlink NavigateUri="b8586241-a02d-486e-9223-e1e98e047f41.xaml">Path Markup Syntax</Hyperlink>
 page. 
    </Paragraph>

    <Paragraph>The next example uses a <Run FontWeight="Bold">StreamGeometry</Run>
 to define a triangle in code. First, the example creates a <Run FontWeight="Bold">StreamGeometry</Run>
, then obtains a StreamGeometryContext and uses it to describe the triangle.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Shapes; 
namespace SDKSample { // Use StreamGeometry with StreamGeometryContext to define a triangle shape. public partial class StreamGeometryTriangleExample : Page { public StreamGeometryTriangleExample() { // Create a path to draw a geometry with. Path myPath = new Path(); 
myPath.Stroke = Brushes.Black; 
myPath.StrokeThickness = 1; 
// Create a StreamGeometry to use to specify myPath. StreamGeometry geometry = new StreamGeometry(); 
geometry.FillRule = FillRule.EvenOdd; 
// Open a StreamGeometryContext that can be used to describe this StreamGeometry // object's contents. using (StreamGeometryContext ctx = geometry.Open()) { // Begin the triangle at the point specified. Notice that the shape is set to // be closed so only two lines need to be specified below to make the triangle. ctx.BeginFigure(new Point(10, 100), true /* is filled */, true /* is closed */); 
// Draw a line to the next specified point. ctx.LineTo(new Point(100, 100), true /* is stroked */, false /* is smooth join */); 
// Draw another line to the next specified point. ctx.LineTo(new Point(100, 50), true /* is stroked */, false /* is smooth join */); 
} // Freeze the geometry (make it unmodifiable) // for additional performance benefits. geometry.Freeze(); 
// Specify the shape (triangle) of the Path using the StreamGeometry. myPath.Data = geometry; 
// Add path shape to the UI. StackPanel mainPanel = new StackPanel(); 
mainPanel.Children.Add(myPath); 
this.Content = mainPanel; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The next example creates a method that uses a <Run FontWeight="Bold">StreamGeometry</Run>
 and <Run FontWeight="Bold">StreamGeometryContext</Run>
 to define a geometric shape based on specified parameters.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Shapes; 
namespace SDKSample { public partial class StreamGeometryExample : Page { public StreamGeometryExample() { // Create a path to draw a geometry with. Path myPath = new Path(); 
myPath.Stroke = Brushes.Black; 
myPath.StrokeThickness = 1; 
// Create a StreamGeometry to use to specify myPath. StreamGeometry theGeometry = BuildRegularPolygon(new Point(200, 200), 200, 8, 0); 
theGeometry.FillRule = FillRule.EvenOdd; 
// Freeze the geometry (make it unmodifiable) // for additional performance benefits. theGeometry.Freeze(); 
// Use the StreamGeometry returned by the BuildRegularPolygon to // specify the shape of the path. myPath.Data = theGeometry; 
// Add path shape to the UI. StackPanel mainPanel = new StackPanel(); 
mainPanel.Children.Add(myPath); 
this.Content = mainPanel; 
} StreamGeometry BuildRegularPolygon(Point c, double r, int numSides, double offsetDegree) { // c is the center, r is the radius, // numSides the number of sides, offsetDegree the offset in Degrees. // Do not add the last point. StreamGeometry geometry = new StreamGeometry(); 
using (StreamGeometryContext ctx = geometry.Open()) { ctx.BeginFigure(new Point(), true /* is filled */, true /* is closed */); 
double step = 2 * Math.PI / Math.Max(numSides, 3); 
Point cur = c; 
double a = Math.PI * offsetDegree / 180.0; 
for (int i = 0; 
i 
&lt; 
numSides; 
i++, a += step) { cur.X = c.X + r * Math.Cos(a); 
cur.Y = c.Y + r * Math.Sin(a); 
ctx.LineTo(cur, true /* is stroked */, false /* is smooth join */); 
} } return geometry; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="49a4a8b7-e738-45be-8dac-b54a6d8f5b21.xaml">How to: Create a Shape by Using a PathGeometry</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>PathGeometry
      <LineBreak/>StreamGeometry
      <LineBreak/>StreamGeometryContext
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="9fba8934-98b7-4af6-82f6-f4ef887f963a.xaml">Geometry Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create a Shape Using a StreamGeometry to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

