<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_59afba57_6fc1_44c8_987e_8a5f4142adad"
  Tag     ="Control an Animation using From, To, and By"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Control an Animation using From, To, and By</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>A "From/To/By" or "basic animation" creates a transition between two target values (see <Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>
 for an introduction to different types of animations). To set the target values of a basic animation, use its From, To, and By properties. The following table summarizes how the From, To, and By properties may be used together or separately to determine an animation's target values. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Properties specified 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>Resulting behavior 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>From 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The animation progresses from the value specified by the From property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>From and To
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The animation progresses from the value specified by the From property to the value specified by the To property.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>From and By
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The animation progresses from the value specified by the From property to the value specified by the sum of the From and By properties.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>To 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the To property.
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>By 
            </Paragraph>

          </TableCell>

          <TableCell>
            <Paragraph>The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the By property.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>Do not set both the To property and the By property on the same animation.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>To use other interpolation methods or animate between more than two target values, use a key frame animation. See <Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>
 for more information. 
    </Paragraph>

    <Paragraph>For information about applying multiple animations to a single property, see <Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>The example below shows the different effects of setting To, By, and From properties on animations.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_59afba57_6fc1_44c8_987e_8a5f4142adad_0">
                <cc:SnippetViewer.SnippetText>
&lt;!-- This example shows the different effects of setting To, By, and From properties on animations. --> 
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> 
&lt;StackPanel Margin="20"> 
&lt;!-- Demonstrates the From and To properties used together. --> 
&lt;Rectangle Name="fromToAnimatedRectangle" Height="10" Width="100" HorizontalAlignment="Left" Margin="10" Fill="#99FF9900" /> 
&lt;!-- Demonstrates the use of the To property. --> 
&lt;Rectangle Name="toAnimatedRectangle" Height="10" Width="100" HorizontalAlignment="Left" Margin="10" Fill="#99FF9900" /> 
&lt;!-- Demonstrates the use of the By property. --> 
&lt;Rectangle Name="byAnimatedRectangle" Height="10" Width="100" HorizontalAlignment="Left" Margin="10" Fill="#99FF9900" /> 
&lt;!-- Demonstrates the use of the From and By properties. --> 
&lt;Rectangle Name="fromByAnimatedRectangle" Height="10" Width="100" HorizontalAlignment="Left" Margin="10" Fill="#99FF9900" /> 
&lt;!-- Demonstrates the use of the From property. --> 
&lt;Rectangle Name="fromAnimatedRectangle" Height="10" Width="100" HorizontalAlignment="Left" Margin="10" Fill="#99FF9900" /> 
&lt;Button> Start Animations 
&lt;Button.Triggers> 
&lt;EventTrigger RoutedEvent="Button.Click"> 
&lt;BeginStoryboard> 
&lt;Storyboard FillBehavior="Stop"> 
&lt;!-- Demonstrates the From and To properties used together. Animates the rectangle's Width property from 50 to 300 over 10 seconds. --> 
&lt;DoubleAnimation Storyboard.TargetName="fromToAnimatedRectangle" Storyboard.TargetProperty="(Rectangle.Width)" From="50" To="300" Duration="0:0:10" /> 
&lt;!-- Demonstrates the To property used by itself. Animates the Rectangle's Width property from its base value (100) to 300 over 10 seconds. --> 
&lt;DoubleAnimation Storyboard.TargetName="toAnimatedRectangle" Storyboard.TargetProperty="(Rectangle.Width)" To="300" Duration="0:0:10" /> 
&lt;!-- Demonstrates the By property used by itself. Increments the Rectangle's Width property by 300 over 10 seconds. As a result, the Width property is animated from its base value (100) to 400 (100 + 300) over 10 seconds. --> 
&lt;DoubleAnimation Storyboard.TargetName="byAnimatedRectangle" Storyboard.TargetProperty="(Rectangle.Width)" By="300" Duration="0:0:10" /> 
&lt;!-- Demonstrates the From and By properties used together. Increments the Rectangle's Width property by 300 over 10 seconds. As a result, the Width property is animated from 50 to 350 (50 + 300) over 10 seconds. --> 
&lt;DoubleAnimation Storyboard.TargetName="fromByAnimatedRectangle" Storyboard.TargetProperty="(Rectangle.Width)" From="50" By="300" Duration="0:0:10" /> 
&lt;!-- Demonstrates the From property used by itself. Animates the rectangle's Width property from 50 to its base value (100) over 10 seconds. --> 
&lt;DoubleAnimation Storyboard.TargetName="fromAnimatedRectangle" Storyboard.TargetProperty="(Rectangle.Width)" From="50" Duration="0:0:10" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Button.Triggers> 
&lt;/Button> 
&lt;/StackPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="10028f97-bb63-41fc-b8ad-663dac7ea203.xaml">Key-Frame Animations Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>From, To, and By Animation Target Values Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Control an Animation using From, To, and By to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

