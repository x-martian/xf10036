<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_adca9cb1_066b_4de8_abbb_6b4007579ee7"
  Tag     ="Animate a 3-D Rotation Using Quaternions"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Animate a 3-D Rotation Using Quaternions</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to animate a rotation of a 3-D object using quaternions. 
    </Paragraph>

    <Paragraph>The code below shows a QuaternionRotation3D used as the value for the Rotation property of a RotateTransform3D.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;!-- The Transform specifies how to transform the 3D object. The rotation is animated using the Storyboard below. --> 
&lt;GeometryModel3D.Transform> 
&lt;RotateTransform3D> 
&lt;RotateTransform3D.Rotation> 
&lt;QuaternionRotation3D x:Name="myQuaternionRotation3D" /> 
&lt;/RotateTransform3D.Rotation> 
&lt;/RotateTransform3D> 
&lt;/GeometryModel3D.Transform> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This <Run FontWeight="Bold">QuaternionRotation3D</Run>
 is animated with a QuaternionAnimation within a Storyboard using the code below.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;!-- Trigger the rotation animation when the 3D object loads. --> 
&lt;Viewport3D.Triggers> 
&lt;EventTrigger RoutedEvent="Viewport3D.Loaded"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;!-- This animation animates the Rotation property of the RotateTransform3D causing the 3D shape to rotate. --> 
&lt;QuaternionAnimation Storyboard.TargetName="myQuaternionRotation3D" Storyboard.TargetProperty="Quaternion" From="0,0,1,0" To="0.3, 0.3, 1, 0" Duration="0:0:2" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Viewport3D.Triggers> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following code shows the entire sample.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_adca9cb1_066b_4de8_abbb_6b4007579ee7_2">
                <cc:SnippetViewer.SnippetText>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" > 
&lt;DockPanel> 
&lt;Viewbox> 
&lt;Canvas Width="321" Height="201"> 
&lt;!-- The Viewport3D provides a rendering surface for 3-D visual content. --> 
&lt;Viewport3D Name="MyAnimatedObject" ClipToBounds="True" Width="150" Height="150" Canvas.Left="0" Canvas.Top="10"> 
&lt;!-- Defines the camera used to view the 3D object. --> 
&lt;Viewport3D.Camera> 
&lt;PerspectiveCamera x:Name="myPerspectiveCamera" Position="0,0,2" LookDirection="0,0,-1" FieldOfView="60" /> 
&lt;/Viewport3D.Camera> 
&lt;!-- The ModelVisual3D children contain the 3D models --> 
&lt;Viewport3D.Children> 
&lt;!-- This ModelVisual3D defines the lights cast in the scene. Without light, the 3D object cannot be seen. Also, the direction of the lights affect shadowing. --> 
&lt;ModelVisual3D> 
&lt;ModelVisual3D.Content> 
&lt;DirectionalLight Color="#FFFFFF" Direction="-0.612372,-0.5,-0.612372" /> 
&lt;/ModelVisual3D.Content> 
&lt;/ModelVisual3D> 
&lt;ModelVisual3D> 
&lt;ModelVisual3D.Content> 
&lt;GeometryModel3D> 
&lt;!-- The geometry specifes the shape of the 3D plane. In this case, a flat sheet is created. --> 
&lt;GeometryModel3D.Geometry> 
&lt;MeshGeometry3D TriangleIndices="0,1,2 3,4,5 " Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 " TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0 " Positions="-0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 " /> 
&lt;/GeometryModel3D.Geometry> 
&lt;!-- The material specifies the material applied to the plane. In this case it is a linear gradient.--> 
&lt;GeometryModel3D.Material> 
&lt;MaterialGroup> 
&lt;DiffuseMaterial> 
&lt;DiffuseMaterial.Brush> 
&lt;LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5"> 
&lt;LinearGradientBrush.GradientStops> 
&lt;GradientStop Color="Yellow" Offset="0" /> 
&lt;GradientStop Color="Red" Offset="0.25" /> 
&lt;GradientStop Color="Blue" Offset="0.75" /> 
&lt;GradientStop Color="LimeGreen" Offset="1" /> 
&lt;/LinearGradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;/DiffuseMaterial.Brush> 
&lt;/DiffuseMaterial> 
&lt;/MaterialGroup> 
&lt;/GeometryModel3D.Material> 
&lt;!-- The Transform specifies how to transform the 3D object. The rotation is animated using the Storyboard below. --> 
&lt;GeometryModel3D.Transform> 
&lt;RotateTransform3D> 
&lt;RotateTransform3D.Rotation> 
&lt;QuaternionRotation3D x:Name="myQuaternionRotation3D" /> 
&lt;/RotateTransform3D.Rotation> 
&lt;/RotateTransform3D> 
&lt;/GeometryModel3D.Transform> 
&lt;/GeometryModel3D> 
&lt;/ModelVisual3D.Content> 
&lt;/ModelVisual3D> 
&lt;/Viewport3D.Children> 
&lt;!-- Trigger the rotation animation when the 3D object loads. --> 
&lt;Viewport3D.Triggers> 
&lt;EventTrigger RoutedEvent="Viewport3D.Loaded"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;!-- This animation animates the Rotation property of the RotateTransform3D causing the 3D shape to rotate. --> 
&lt;QuaternionAnimation Storyboard.TargetName="myQuaternionRotation3D" Storyboard.TargetProperty="Quaternion" From="0,0,1,0" To="0.3, 0.3, 1, 0" Duration="0:0:2" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Viewport3D.Triggers> 
&lt;/Viewport3D> 
&lt;/Canvas> 
&lt;/Viewbox> 
&lt;/DockPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="adb4a598-71a2-4dd5-b677-ea3fc11b78b2.xaml">How to: Create a 3-D Scene</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="1020e44e-e21e-49a8-be53-53cbc1910e83.xaml">How to: Animate a 3-D Rotation Using Storyboards</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a92223ec-b634-4f5e-8e79-d33bc43ecfb3.xaml">How to: Animate a 3-D Rotation Using Rotation3DAnimation</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="67f31ed4-e36b-4b02-9889-dcce245d7afc.xaml">3-D Graphics Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="8f153d5e-ed61-4aa5-a7cd-286f0c427a13.xaml">Transforms Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Animate a 3-D Rotation Using Quaternions to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

