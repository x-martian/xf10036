<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_41231b22_1f74_4c26_a8e7_a55b29f8f6bd"
  Tag     ="Create a Line Using a LineGeometry"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create a Line Using a LineGeometry</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use the LineGeometry class to describe a line. A <Run FontWeight="Bold">LineGeometry</Run>
 is defined by its start and end points. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example shows how to create and render a <Run FontWeight="Bold">LineGeometry</Run>
. A Path element is used to render the line. Since a line has no area, the <Run FontWeight="Bold">Path</Run>
 object's Fill is not specified; 
instead the Stroke and StrokeThickness properties are used.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Path Stroke="Black" StrokeThickness="1" > 
&lt;Path.Data> 
&lt;LineGeometry StartPoint="10,20" EndPoint="100,130" /> 
&lt;/Path.Data> 
&lt;/Path> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>LineGeometry myLineGeometry = new LineGeometry(); 
myLineGeometry.StartPoint = new Point(10,20); 
myLineGeometry.EndPoint = new Point(100,130); 
Path myPath = new Path(); 
myPath.Stroke = Brushes.Black; 
myPath.StrokeThickness = 1; 
myPath.Data = myLineGeometry; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph><Run FontWeight="Bold">A LineGeometry drawn from (10,20) to (100,130)</Run>

    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
      <LineBreak/>
    </Paragraph>

    <Paragraph>Other simple geometry classes include <Run FontWeight="Bold">LineGeometry</Run>
 and EllipseGeometry. These geometries, as well as more complex ones, can also be created using a PathGeometry or StreamGeometry. For more information, see the Geometries Overview.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="8e5c7ef4-d7ed-4c43-afc9-ca01325c300b.xaml">How to: Create a Composite Shape</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="49a4a8b7-e738-45be-8dac-b54a6d8f5b21.xaml">How to: Create a Shape by Using a PathGeometry</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="9fba8934-98b7-4af6-82f6-f4ef887f963a.xaml">Geometry Overview</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create a Line Using a LineGeometry to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

