<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_28c39478_13d7_4011_80a3_8b9cc3e54478"
  Tag     ="Preserve the Aspect Ratio of an Image Used as a Background"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Preserve the Aspect Ratio of an Image Used as a Background</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use the Stretch property of an ImageBrush in order to preserve the <Run>aspect ratio</Run>
 of the image. 
    </Paragraph>

    <Paragraph>By default, when you use an <Run FontWeight="Bold">ImageBrush</Run>
 to paint an area, its content is stretched to completely fill the output area. When the output area and the image have different aspect ratios, the image is distorted by this stretching. 
    </Paragraph>

    <Paragraph>To make an <Run FontWeight="Bold">ImageBrush</Run>
 preserve the aspect ratio of its image, set the <Run FontWeight="Bold">Stretch</Run>
 property to Uniform or UniformToFill. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example uses two <Run FontWeight="Bold">ImageBrush</Run>
 objects to paint two rectangles. Each rectangle is 300 by 150 <Run>pixels</Run>
 and each contains a 300 by 300 pixel image. The <Run FontWeight="Bold">Stretch</Run>
 property of the first brush is set to <Run FontWeight="Bold">Uniform</Run>
, and the <Run FontWeight="Bold">Stretch</Run>
 property of the second brush is set to <Run FontWeight="Bold">UniformToFill</Run>
.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media.Imaging; 
using System.Windows.Media; 
using System.Windows.Shapes; 
namespace Microsoft.Samples.Graphics.UsingImageBrush { /// 
&lt;summary> /// Demonstrates different ImageBrush Stretch settings. /// 
&lt;/summary> public class StretchModes : Page { public StretchModes() { // Create an ImageBrush with its Stretch // property set to Uniform. The image it // contains will be expanded as much as possible // to fill the output area while still // preserving its aspect ratio. ImageBrush uniformBrush = new ImageBrush(); 
uniformBrush.ImageSource = new BitmapImage(new Uri("sampleImages\\square.jpg", UriKind.Relative)); 
uniformBrush.Stretch = Stretch.Uniform; 
// Freeze the brush (make it unmodifiable) for performance benefits. uniformBrush.Freeze(); 
// Create a rectangle and paint it with the ImageBrush. Rectangle rectangle1 = new Rectangle(); 
rectangle1.Width = 300; 
rectangle1.Height = 150; 
rectangle1.Stroke = Brushes.MediumBlue; 
rectangle1.StrokeThickness = 1.0; 
rectangle1.Fill = uniformBrush; 
// Create an ImageBrush with its Stretch // property set to UniformToFill. The image it // contains will be expanded to completely fill // the rectangle, but its aspect ratio is preserved. ImageBrush uniformToFillBrush = new ImageBrush(); 
uniformToFillBrush.ImageSource = new BitmapImage(new Uri("sampleImages\\square.jpg", UriKind.Relative)); 
uniformToFillBrush.Stretch = Stretch.UniformToFill; 
// Freeze the brush (make it unmodifiable) for performance benefits. uniformToFillBrush.Freeze(); 
// Create a rectangle and paint it with the ImageBrush. Rectangle rectangle2 = new Rectangle(); 
rectangle2.Width = 300; 
rectangle2.Height = 150; 
rectangle2.Stroke = Brushes.MediumBlue; 
rectangle2.StrokeThickness = 1.0; 
rectangle2.Margin = new Thickness(0, 10, 0, 0); 
rectangle2.Fill = uniformToFillBrush; 
StackPanel mainPanel = new StackPanel(); 
mainPanel.Children.Add(rectangle1); 
mainPanel.Children.Add(rectangle2); 
Content = mainPanel; 
Background = Brushes.White; 
Margin = new Thickness(20); 
Title = "ImageBrush Stretch Modes"; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;!-- Demonstrates different ImageBrush Stretch settings.--> 
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="PresentationOptions" Background="White" Margin="20" Title="ImageBrush Stretch Modes"> 
&lt;StackPanel> 
&lt;!-- The ImageBrush in this example has its Stretch property set to Uniform. As a result, the image it contains is expanded as much as possible to fill the rectangle while still preserving its aspect ratio.--> 
&lt;Rectangle Width="300" Height="150" Stroke="MediumBlue" StrokeThickness="1"> 
&lt;Rectangle.Fill> 
&lt;ImageBrush Stretch="Uniform" ImageSource="sampleImages\square.jpg" PresentationOptions:Freeze="True" /> 
&lt;/Rectangle.Fill> 
&lt;/Rectangle> 
&lt;!-- The ImageBrush in this example has its Stretch property set to UniformToFill. As a result, the image is expanded to completely fill the rectangle, but its aspect ratio is preserved.--> 
&lt;Rectangle Width="300" Height="150" Stroke="MediumBlue" StrokeThickness="1" Margin="0,10,0,0"> 
&lt;Rectangle.Fill> 
&lt;ImageBrush Stretch="UniformToFill" ImageSource="sampleImages\square.jpg" PresentationOptions:Freeze="True" /> 
&lt;/Rectangle.Fill> 
&lt;/Rectangle> 
&lt;/StackPanel> 
&lt;/Page> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following illustration shows the output of the first brush, which has a <Run FontWeight="Bold">Stretch</Run>
 setting of <Run FontWeight="Bold">Uniform</Run>
.
    </Paragraph>

    <Paragraph>The next illustration shows the output of the second brush, which has a <Run FontWeight="Bold">Stretch</Run>
 setting of <Run FontWeight="Bold">UniformToFill</Run>
.
    </Paragraph>

    <Paragraph>Note that the <Run FontWeight="Bold">Stretch</Run>
 property behaves identically for the other TileBrush objects, that is, for DrawingBrush and VisualBrush. For more information about <Run FontWeight="Bold">ImageBrush</Run>
 and the other <Run FontWeight="Bold">TileBrush</Run>
 objects, see <Hyperlink NavigateUri="779aac3f-8d41-49d8-8130-768244aa2240.xaml">Painting with Images, Drawings, and Visuals</Hyperlink>
. 
    </Paragraph>

    <Paragraph>Note also that, although the <Run FontWeight="Bold">Stretch</Run>
 property appears to specify how the <Run FontWeight="Bold">TileBrush</Run>
 content is stretched to fit its output area, it actually specifies how the <Run FontWeight="Bold">TileBrush</Run>
 content is stretched to fill its base tile. For more information, see <Run FontWeight="Bold">TileBrush</Run>
.
    </Paragraph>

    <Paragraph>This code example is part of a larger example that is provided for the ImageBrush class. For the complete sample, see ImageBrush Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>TileBrush
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="779aac3f-8d41-49d8-8130-768244aa2240.xaml">Painting with Images, Drawings, and Visuals</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Preserve the Aspect Ratio of an Image Used as a Background to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

