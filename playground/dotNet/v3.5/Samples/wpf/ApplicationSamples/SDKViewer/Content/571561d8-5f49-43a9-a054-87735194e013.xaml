<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_571561d8_5f49_43a9_a054_87735194e013"
  Tag     ="UI Automation Control Patterns for Clients"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>UI Automation Control Patterns for Clients</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This overview introduces <Run>control patterns</Run>
 for <Run>UI Automation clients</Run>
. It includes information on how UI Automation client can use control patterns to access information about the user interface (UI). 
    </Paragraph>

    <Paragraph>Control patterns provide a way to categorize and expose a control's functionality independent of the control type or the appearance of the control. UI Automation clients can examine an AutomationElement to determine which control patterns are supported and be assured of the behavior of the control. 
    </Paragraph>

    <Paragraph>For a complete list of control patterns, see <Hyperlink NavigateUri="cc229b33-234b-469b-ad60-f0254f32d45d.xaml">UI Automation Control Patterns Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="uiautomation_getting_control_patterns">Getting Control Patterns</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="uiautomation_properties_on_control_patterns">Retrieving Properties on Control Patterns</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="uiautomation_with_variable_patterns">Controls with Variable Patterns</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">Getting Control Patterns
    </Paragraph>

    <Paragraph>Clients retrieve a control pattern from an <Run FontWeight="Bold">AutomationElement</Run>
 by calling either System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern) or System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern). 
    </Paragraph>

    <Paragraph>Clients can use the GetSupportedPatterns method or an individual <Run>IsPatternAvailable</Run>
 property (for example, IsTextPatternAvailableProperty) to determine if a pattern or group of patterns is supported on the <Run FontWeight="Bold">AutomationElement</Run>
. However, it is more efficient to attempt to get the control pattern and test for a null reference (<Run FontWeight="Bold">Nothing</Run>
 in Microsoft Visual Basic .NET) than to check the supported properties and retrieve the control pattern since it results in fewer cross-process calls. 
    </Paragraph>

    <Paragraph>The following example demonstrates how to get a TextPattern control pattern from an <Run FontWeight="Bold">AutomationElement</Run>
. 
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Specify the control type we're looking for, in this case 'Document' PropertyCondition cond = new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Document); 
// ae --> our root automation element AutomationElement aeText = ae.FindFirst(TreeScope.Descendants, cond); 
targetTextPattern = aeText.GetCurrentPattern(TextPattern.Pattern) as TextPattern; 
if (targetTextPattern == null) { Console.WriteLine("Root element does not contain a descendant that supports TextPattern."); 
return; 
} </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Retrieving Properties on Control Patterns
    </Paragraph>

    <Paragraph>Clients can retrieve the property values on control patterns by calling either System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty) or System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty) and casting the object returned to an appropriate type. For more information on UI Automation properties, see <Hyperlink NavigateUri="255905af-0b17-485c-93d4-8a2db2a6524b.xaml">UI Automation Properties for Clients</Hyperlink>
. 
    </Paragraph>

    <Paragraph>In addition to the <Run>GetPropertyValue</Run>
 methods, property values can be retrieved through the common language runtime (CLR) accessors to access the UI Automation properties on a pattern. 
    </Paragraph>

    <Paragraph FontSize="22">Controls with Variable Patterns
    </Paragraph>

    <Paragraph>Some control types support different patterns depending on their state or the manner in which the control is being used. Examples of controls that can have variable patterns are list views (thumbnails, tiles, icons, list, details), Microsoft Excel Charts (Pie, Line, Bar, Cell Value with a formula), Microsoft Word's document area (Normal, Web Layout, Outline, Print Layout, Print Preview), and Microsoft Windows Media Player skins.
    </Paragraph>

    <Paragraph>Controls implementing custom control types can have any set of control patterns that are needed to represent their functionality. 
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="5ee2de3f-256c-43ec-b64c-62ace91f9983.xaml">Invoke a Control Using UI Automation</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="84fc31a3-175f-4e93-90a0-dd29d89b77ce.xaml">Get the Toggle State of a Check Box Using UI Automation</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="8b81645b-8be3-4e26-9c98-4fb0fceca06b.xaml">Control Pattern Mapping for UI Automation Clients</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="1f8b5ab3-c193-4d0f-9e67-a0076225a1a5.xaml">UI Automation Control Patterns</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="b51206f2-1281-4ad0-9820-ea39d88ae577.xaml">UI Automation Text Pattern</Hyperlink>

      <LineBreak/>TextPattern Insert Text Sample
      <LineBreak/>TextPattern Search and Selection Sample
      <LineBreak/>InvokePattern and ExpandCollapsePattern Menu Item Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about UI Automation Control Patterns for Clients to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

