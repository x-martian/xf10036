<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_3acaee5a_6ce8_4c3e_81c8_67e59eb74477"
  Tag     ="Find a UI Automation Element Based on a Property Condition"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Find a UI Automation Element Based on a Property Condition</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This topic contains example code that shows how to locate an element within the Microsoft UI Automation tree based on a specific property or properties.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>In the following example, a set of property conditions are specified that identify a certain element (or elements) of interest in the AutomationElement tree. A search for all matching elements is then performed with the FindAll method that incorporates a series of AndCondition boolean operations to limit the number of matching elements.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>When searching from the RootElement, you should try to obtain only direct children. A search for descendants might iterate through hundreds or even thousands of elements, possibly resulting in a stack overflow. If you are attempting to obtain a specific element at a lower level, you should start your search from the application window or from a container at a lower level.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>///-------------------------------------------------------------------- /// 
&lt;summary> /// Find the automation element of interest. /// 
&lt;/summary> /// 
&lt;param name="ae">The root element.
&lt;/param> /// 
&lt;param name="propertyCondition1">First property condition.
&lt;/param> /// 
&lt;param name="propertyCondition2">Second property condition.
&lt;/param> /// 
&lt;param name="propertyCondition3">Third property condition.
&lt;/param> ///-------------------------------------------------------------------- private AutomationElement FindAutomationElement( AutomationElement ae, PropertyCondition propertyCondition1, PropertyCondition propertyCondition2, PropertyCondition propertyCondition3) { Output("Looking for a control with the following properties.\n" + propertyCondition1.Property.ProgrammaticName.ToString() + " property of '" + propertyCondition1.Value.ToString() + "'\n" + propertyCondition2.Property.ProgrammaticName.ToString() + " property of '" + propertyCondition2.Value.ToString() + "'\n" + propertyCondition3.Property.ProgrammaticName.ToString() + " property of '" + propertyCondition3.Value.ToString() + "'\n"); 
// Set up the search to match all conditions. AndCondition searchCondition = new AndCondition( propertyCondition1, propertyCondition2, propertyCondition3); 
// Find all descendants from the root object // that match the specified conditions. // Alternatively, use the FindFirst method to return only // the first object matching the condition. AutomationElementCollection elementCollection = ae.FindAll(TreeScope.Descendants, searchCondition); 
// Check the element returned if (elementCollection.Count 
&lt;= 0) { // Didn't find it Output("Couldn't find the control.\n"); 
return (null); 
} if (elementCollection.Count > 1) { // Multiple objects Output("Found multiple controls matching criteria.\n"); 
return (null); 
} Output("Found control.\n"); 
return elementCollection[0]; 
} </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>'''-------------------------------------------------------------------- ''' 
&lt;summary> '''Find the automation element of interest. ''' 
&lt;/summary> ''' 
&lt;param name="ae">The root element.
&lt;/param> ''' 
&lt;param name="propertyCondition">First property condition.
&lt;/param> ''' 
&lt;param name="propertyCondition_2">Second property condition.
&lt;/param> ''' 
&lt;param name="propertyCondition_3">Third property condition.
&lt;/param> '''-------------------------------------------------------------------- Private Function FindAutomationElement( _ ByVal ae As AutomationElement, _ ByVal propertyCondition As PropertyCondition, _ ByVal propertyCondition_2 As PropertyCondition, _ ByVal propertyCondition_3 As PropertyCondition) As AutomationElement Output("Looking for a control with the following properties." + vbCrLf + _ propertyCondition.Property.ProgrammaticName.ToString() + _ " property of '" + propertyCondition.Value.ToString() + vbCrLf + _ propertyCondition_2.Property.ProgrammaticName.ToString() + _ " property of '" + propertyCondition_2.Value.ToString() + vbCrLf + _ propertyCondition_3.Property.ProgrammaticName.ToString() + _ " property of '" + propertyCondition_3.Value.ToString() + vbCrLf) ' Set up the search to match all conditions. Dim searchCondition As AndCondition = New AndCondition( _ propertyCondition, propertyCondition_2, propertyCondition_3) ' Find all descendants from the root object that match the specified conditions. ' Alternatively, use the FindFirst method to return only the first object matching the condition. Dim elementCollection As AutomationElementCollection = ae.FindAll(TreeScope.Descendants, searchCondition) ' Check the element returned If (elementCollection.Count 
&lt;= 0) Then ' Didn't find it Output("Couldn't find the control." + vbCrLf) Return (Nothing) End If If (elementCollection.Count > 1) Then ' Multiple objects Output("Found multiple controls matching criteria." + vbCrLf) Return (Nothing) End If Output("Found control." + vbCrLf) Return elementCollection(0) End Function </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="a24e807b-d7c3-4e93-ac48-80094c4e1c90.xaml">Use the AutomationID Property</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="c2caaf45-e59c-42a1-bc9b-77a6de520171.xaml">Obtaining UI Automation Elements</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>InvokePattern and ExpandCollapsePattern Menu Item Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about Find a UI Automation Element Based on a Property Condition to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

