<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_8221db67_d99f_4783_b65e_a6c5a52c03ab"
  Tag     ="Apply a LayoutTransform to an Element"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Apply a LayoutTransform to an Element</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>This example shows how to apply a LayoutTransform to an element. The example creates an instance of Button and hosts it within a parent Grid. It also uses the <Run FontWeight="Bold">LayoutTransform</Run>
 property to apply a RotateTransform to the <Run FontWeight="Bold">Button</Run>
.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Performance Note:</Run>
 Before using <Run FontWeight="Bold">LayoutTransform</Run>
, be sure that you understand how this property can affect performance. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">LayoutTransform</Run>
 can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system. When you apply a <Run FontWeight="Bold">LayoutTransform</Run>
 to the Children collection of the Panel, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged. If you are updating the complete application user interface (UI), this functionality might be exactly what you need. However, if you do not need a full layout pass, use the RenderTransform property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C++ </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Button^ btn2 = gcnew Button(); 
btn2->Background = Brushes::LightCoral; 
btn2->Content = "RotateTransform"; 
btn2->LayoutTransform = gcnew RotateTransform(45, 25, 25); 
Grid::SetRow(btn2, 0); 
Grid::SetColumn(btn2, 1); 
grid1->Children->Add(btn2); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Button btn2 = new Button(); 
btn2.Background = Brushes.LightCoral; 
btn2.Content = "RotateTransform"; 
btn2.LayoutTransform = new RotateTransform(45, 25, 25); 
Grid.SetRow(btn2, 0); 
Grid.SetColumn(btn2, 1); 
grid1.Children.Add(btn2); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>Visual Basic </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Dim btn2 As New Button() btn2.Background = Brushes.LightCoral btn2.Content = "RotateTransform" btn2.LayoutTransform = New RotateTransform(45, 25, 25) Grid.SetRow(btn2, 0) Grid.SetColumn(btn2, 1) grid1.Children.Add(btn2) </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Button Grid.Row="0" Grid.Column="1" Background="LightCoral" Content="RotateTransform Applied"> 
&lt;Button.LayoutTransform> 
&lt;RotateTransform CenterX="25" CenterY="25" Angle="45" /> 
&lt;/Button.LayoutTransform> 
&lt;/Button> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For the complete sample, which shows each of the available layout transforms, see Applying a LayoutTransform to an Element Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>LayoutTransform
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="8f153d5e-ed61-4aa5-a7cd-286f0c427a13.xaml">Transforms Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Applying a LayoutTransform to an Element Sample
      <LineBreak/>2-D Transforms Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Apply a LayoutTransform to an Element to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

