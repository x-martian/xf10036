<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_53857682_bd2c_4f2c_8f25_1307d0b451a2"
  Tag     ="Use an Application-Scope Resource Dictionary"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Use an Application-Scope Resource Dictionary</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use an application-scope custom resource dictionary.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>Application exposes an application-scope store for shared resources: Resources. By default, <Run FontWeight="Bold">Resources</Run>
 is initialized with an instance of the ResourceDictionary type. You use this instance when you get and set application-scope properties using the <Run FontWeight="Bold">Resources</Run>
 property (see <Hyperlink NavigateUri="39e0420c-c9fc-47dc-8956-fdd95b214095.xaml">How to: Get and Set Application-Scope Resources</Hyperlink>
).
    </Paragraph>

    <Paragraph>If you have multiple resources that you set using <Run FontWeight="Bold">Resources</Run>
, you can instead use a custom resource dictionary to store those resources and set <Run FontWeight="Bold">Resources</Run>
 with it instead. You declare a custom resource dictionary using markup, like so:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_53857682_bd2c_4f2c_8f25_1307d0b451a2_0">
                <cc:SnippetViewer.SnippetText>
&lt;ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" > 
&lt;SolidColorBrush x:Key="StandardSolidColorBrush" Color="White" /> 
&lt;LinearGradientBrush x:Key="StandardLinearGradientBrush" StartPoint="0.0,0.0" EndPoint="1.0,1.0"> 
&lt;LinearGradientBrush.GradientStops> 
&lt;GradientStop Color="White" Offset="0" /> 
&lt;GradientStop Color="Black" Offset="1" /> 
&lt;/LinearGradientBrush.GradientStops> 
&lt;/LinearGradientBrush> 
&lt;/ResourceDictionary> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Swapping entire resource dictionaries using <Run FontWeight="Bold">Resources</Run>
 allows you to support application-scope, themes, where each theme is encapsulated by a single resource dictionary. See Themed Application Sample.
    </Paragraph>

    <Paragraph>To get application-scope resources from the resource dictionary exposed by <Run FontWeight="Bold">Resources</Run>
, whether created by <Run FontWeight="Bold">Application</Run>
 or your, requires code like the following:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>// Get an application-scope resource Brush whiteBrush = (Brush)Application.Current.Resources["ApplicationScopeResource"]; 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>There are two considerations to make when using <Run FontWeight="Bold">Resources</Run>
. First, the dictionary <Run FontStyle="italic">key</Run>
 is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string). Second, the dictionary <Run FontStyle="italic">value</Run>
 is an object, so you will need to convert the value to the desired type when getting a property value.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>ResourceDictionary
      <LineBreak/>Resources
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Use an Application-Scope Resource Dictionary to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

