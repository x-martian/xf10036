<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_77935ff0_4500_4307_9710_96999dcf579f"
  Tag     ="Convert an Image to Greyscale"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Convert an Image to Greyscale</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to convert an image to grayscale using FormatConvertedBitmap.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> 
&lt;Page.Resources> 
&lt;!-- This resource defines a BitmapImage with a source and a DecodePixelWidth of 200. This property is set to the same value as the desired width of the image to save on memory use. This BitmapImage is used as the base for the other BitmapSource resources. --> 
&lt;BitmapImage x:Key="masterImage" DecodePixelWidth="200" UriSource="C:\Documents and Settings\All Users\Documents\My Pictures\Sample Pictures\Water Lilies.jpg"/> 
&lt;!-- This FormatConvertedBitmap uses the BitmapImage defined above and changes the format to Gray32 (grayscale). --> 
&lt;FormatConvertedBitmap x:Key="convertFormatImage" Source="{StaticResource masterImage}" DestinationFormat="Gray32" /> 
&lt;/Page.Resources> 
&lt;StackPanel> 
&lt;!-- Apply the "convertFormatImage" resource defined above to this image. --> 
&lt;Image Width="200" Source="{StaticResource convertFormatImage}" /> 
&lt;/StackPanel> 
&lt;/Page> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Media.Imaging; 
namespace SDKSample { public partial class FormatConvertedBitmapExample : Page { public FormatConvertedBitmapExample() { ///// Create a BitmapImage and set it's DecodePixelWidth to 200. Use ///// ///// this BitmapImage as a source for other BitmapSource objects. ///// BitmapImage myBitmapImage = new BitmapImage(); 
// BitmapSource objects like BitmapImage can only have their properties // changed within a BeginInit/EndInit block. myBitmapImage.BeginInit(); 
myBitmapImage.UriSource = new Uri(@"sampleImages/WaterLilies.jpg",UriKind.Relative); 
// To save significant application memory, set the DecodePixelWidth or // DecodePixelHeight of the BitmapImage value of the image source to the desired // height or width of the rendered image. If you don't do this, the application will // cache the image as though it were rendered as its normal size rather then just // the size that is displayed. // Note: In order to preserve aspect ratio, set DecodePixelWidth // or DecodePixelHeight but not both. myBitmapImage.DecodePixelWidth = 200; 
myBitmapImage.EndInit(); 
////////// Convert the BitmapSource to a new format //////////// // Use the BitmapImage created above as the source for a new BitmapSource object // which is set to a gray scale format using the FormatConvertedBitmap BitmapSource. // Note: New BitmapSource does not cache. It is always pulled when required. FormatConvertedBitmap newFormatedBitmapSource = new FormatConvertedBitmap(); 
// BitmapSource objects like FormatConvertedBitmap can only have their properties // changed within a BeginInit/EndInit block. newFormatedBitmapSource.BeginInit(); 
// Use the BitmapSource object defined above as the source for this new // BitmapSource (chain the BitmapSource objects together). newFormatedBitmapSource.Source = myBitmapImage; 
// Set the new format to Gray32Float (grayscale). newFormatedBitmapSource.DestinationFormat = PixelFormats.Gray32Float; 
newFormatedBitmapSource.EndInit(); 
// Create Image Element Image myImage = new Image(); 
myImage.Width = 200; 
//set image source myImage.Source = newFormatedBitmapSource; 
// Add Image to the UI StackPanel myStackPanel = new StackPanel(); 
myStackPanel.Children.Add(myImage); 
this.Content = myStackPanel; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="5b92e74b-1b56-4756-ac64-d5e9e08d9854.xaml">How to: Use the Image Element</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="c6bba109-c6e7-4cf8-bfe6-9cf8d01bb4fc.xaml">How to: Crop an Image</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="863fe998-9a6b-490d-bd86-6ef5c9ec6d75.xaml">How to: Rotate an Image</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Image Element Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Convert an Image to Greyscale to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

