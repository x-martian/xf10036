<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_bc4a3d8e_76e2_423e_a5d1_159a023e82ec"
  Tag     ="x:Class Attribute"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>x:Class Attribute</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>Configures XAML compilation in order to link the root element of a XAML page to a partial class defined in a separate procedural code file in a Common Language Specification (CLS) language that provides code-behind logic for that page.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">x:Class</Run>
 can be declared for any element that is the root of a Extensible Application Markup Language (XAML) page, and/or for the Application root in the application definition. Declaring <Run FontWeight="Bold">x:Class </Run>
on any element other than a page or application root will result in a compile-time error.
    </Paragraph>

    <Paragraph FontSize="22"><Run>Remarks</Run>

    </Paragraph>

    <Paragraph>The class used as the <Run FontWeight="Bold">x:Class</Run>
 cannot be a nested class.
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">x:Class</Run>
 is optional in the sense that is it is entirely legal to have a XAML page with no code-behind at all, but if your page declares event handling attribute values, or instantiates custom elements where the defining classes are in the code-behind class, providing the <Run FontWeight="Bold">x:Class</Run>
 reference (or <Run FontWeight="Bold">x:Subclass</Run>
) to the appropriate class is ultimately required.
    </Paragraph>

    <Paragraph>The value of the <Run FontWeight="Bold">x:Class</Run>
 attribute may be any string that specifies the fully qualified name of a public class, as defined in a procedural code file that is included as part of the project that produces the application.
    </Paragraph>

    <Paragraph FontSize="22"><Run>Example Attribute Usage</Run>

    </Paragraph>

    <Paragraph>
&lt;<Run FontStyle="italic">object</Run>
<Run FontWeight="Bold">x:Class</Run>
="<Run FontStyle="italic">namespace.classname</Run>
"...>
    </Paragraph>

    <Paragraph>...
    </Paragraph>

    <Paragraph>
&lt;/<Run FontStyle="italic">object</Run>
>
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="99f66072-8107-4362-ab99-8171dc83b469.xaml">x:Subclass Attribute</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="e7313137-581e-4a64-8453-d44e15a6164a.xaml">XAML and Custom Classes</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about x:Class Attribute to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

