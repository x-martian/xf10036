<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_d9154354_843f_4713_bad1_35bb0ba6eaeb"
  Tag     ="Animate the Color or Opacity of a SolidColorBrush"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Animate the Color or Opacity of a SolidColorBrush</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to animate the Color and Opacity of a SolidColorBrush. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example uses three animations to animate the <Run FontWeight="Bold">Color</Run>
 and <Run FontWeight="Bold">Opacity</Run>
 of a <Run FontWeight="Bold">SolidColorBrush</Run>
. 
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>The first animation, a ColorAnimation, changes the brush's color to Gray when the mouse enters the rectangle. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>The next animation, another <Run FontWeight="Bold">ColorAnimation</Run>
, changes the brush's color to Orange when the mouse leaves the rectangle. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>The final animation, a DoubleAnimation, changes the brush's opacity to 0.0 when the left mouse button is pressed. 
        </Paragraph>

      </ListItem>

    </List>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Media.Animation; 
using System.Windows.Shapes; 
using System.Windows.Input; 
namespace Microsoft.Samples.Animation { /// 
&lt;summary> /// This example shows how to animate the Opacity and Color /// properties of a SolidColorBrush. /// 
&lt;/summary> public class SolidColorBrushExample : Page { public SolidColorBrushExample() { Title = "SolidColorBrush Animation Example"; 
Background = Brushes.White; 
// Create a NameScope for the page so // that Storyboards can be used. NameScope.SetNameScope(this, new NameScope()); 
// Create a Rectangle. Rectangle aRectangle = new Rectangle(); 
aRectangle.Width = 100; 
aRectangle.Height = 100; 
// Create a SolidColorBrush to paint // the rectangle's fill. The Opacity // and Color properties of the brush // will be animated. SolidColorBrush myAnimatedBrush = new SolidColorBrush(); 
myAnimatedBrush.Color = Colors.Orange; 
aRectangle.Fill = myAnimatedBrush; 
// Register the brush's name with the page // so that it can be targeted by storyboards. this.RegisterName("MyAnimatedBrush", myAnimatedBrush); 
// // Animate the brush's color to gray when // the mouse enters the rectangle. // ColorAnimation mouseEnterColorAnimation = new ColorAnimation(); 
mouseEnterColorAnimation.To = Colors.Gray; 
mouseEnterColorAnimation.Duration = TimeSpan.FromSeconds(1); 
Storyboard.SetTargetName(mouseEnterColorAnimation, "MyAnimatedBrush"); 
Storyboard.SetTargetProperty( mouseEnterColorAnimation, new PropertyPath(SolidColorBrush.ColorProperty)); 
Storyboard mouseEnterStoryboard = new Storyboard(); 
mouseEnterStoryboard.Children.Add(mouseEnterColorAnimation); 
aRectangle.MouseEnter += delegate(object sender, MouseEventArgs e) { mouseEnterStoryboard.Begin(this); 
}; 
// // Animate the brush's color to orange when // the mouse leaves the rectangle. // ColorAnimation mouseLeaveColorAnimation = new ColorAnimation(); 
mouseLeaveColorAnimation.To = Colors.Orange; 
mouseLeaveColorAnimation.Duration = TimeSpan.FromSeconds(1); 
Storyboard.SetTargetName(mouseLeaveColorAnimation, "MyAnimatedBrush"); 
Storyboard.SetTargetProperty( mouseLeaveColorAnimation, new PropertyPath(SolidColorBrush.ColorProperty)); 
Storyboard mouseLeaveStoryboard = new Storyboard(); 
mouseLeaveStoryboard.Children.Add(mouseLeaveColorAnimation); 
aRectangle.MouseLeave += delegate(object sender, MouseEventArgs e) { mouseLeaveStoryboard.Begin(this); 
}; 
// // Animate the brush's opacity to 0 and back when // the left mouse button is pressed over the rectangle. // DoubleAnimation opacityAnimation = new DoubleAnimation(); 
opacityAnimation.To = 0.0; 
opacityAnimation.Duration = TimeSpan.FromSeconds(0.5); 
opacityAnimation.AutoReverse = true; 
Storyboard.SetTargetName(opacityAnimation, "MyAnimatedBrush"); 
Storyboard.SetTargetProperty( opacityAnimation, new PropertyPath(SolidColorBrush.OpacityProperty)); 
Storyboard mouseLeftButtonDownStoryboard = new Storyboard(); 
mouseLeftButtonDownStoryboard.Children.Add(opacityAnimation); 
aRectangle.MouseLeftButtonDown += delegate(object sender, MouseButtonEventArgs e) { mouseLeftButtonDownStoryboard.Begin(this); 
}; 
StackPanel mainPanel = new StackPanel(); 
mainPanel.Margin = new Thickness(20); 
mainPanel.Children.Add(aRectangle); 
Content = mainPanel; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <BlockUIContainer>
              <cc:SnippetViewer Name="_d9154354_843f_4713_bad1_35bb0ba6eaeb_0">
                <cc:SnippetViewer.SnippetText>
&lt;!-- SolidColorBrushExample.xaml This example shows how to animate the Opacity and Color properties of a SolidColorBrush.--> 
&lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="SolidColorBrush Animation Example" Background="White"> 
&lt;StackPanel Margin="20"> 
&lt;!-- The Opacity and Color of the SolidColorBrush used to fill this rectangle is animated. --> 
&lt;Rectangle Width="100" Height="100"> 
&lt;Rectangle.Fill> 
&lt;SolidColorBrush x:Name="MyAnimatedBrush" Color="Orange" /> 
&lt;/Rectangle.Fill> 
&lt;Rectangle.Triggers> 
&lt;!-- Animates the brush's color to gray When the mouse enters the rectangle. --> 
&lt;EventTrigger RoutedEvent="Rectangle.MouseEnter"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;ColorAnimation Storyboard.TargetName="MyAnimatedBrush" Storyboard.TargetProperty="Color" To="Gray" Duration="0:0:1" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;!-- Animates the brush's color to orange when the mouse leaves the rectangle. --> 
&lt;EventTrigger RoutedEvent="Rectangle.MouseLeave"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;ColorAnimation Storyboard.TargetName="MyAnimatedBrush" Storyboard.TargetProperty="Color" To="Orange" Duration="0:0:1" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;!-- Animates the brush's opacity when the left mouse button is pressed over the rectangle. --> 
&lt;EventTrigger RoutedEvent="Rectangle.MouseLeftButtonDown"> 
&lt;BeginStoryboard> 
&lt;Storyboard> 
&lt;DoubleAnimation Storyboard.TargetName="MyAnimatedBrush" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.5" AutoReverse="True" /> 
&lt;/Storyboard> 
&lt;/BeginStoryboard> 
&lt;/EventTrigger> 
&lt;/Rectangle.Triggers> 
&lt;/Rectangle> 
&lt;/StackPanel> 
&lt;/Page> 
                </cc:SnippetViewer.SnippetText>
              </cc:SnippetViewer>

            </BlockUIContainer>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph/>
    <Paragraph/>
    <Paragraph>For a more complete sample, which shows how to animate different types of brushes, see the Brushes Sample. For more information about animation, see the <Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph>For consistency with other animation examples, the code versions of this example use a Storyboard object to apply their animations. However, when applying a single animation in code, it's simpler to use the BeginAnimation method instead of using a <Run FontWeight="Bold">Storyboard</Run>
. For an example, see <Hyperlink NavigateUri="d411db70-4df7-487d-82bc-95a7c1b2e7f8.xaml">How to: Apply a Local (Non-Storyboard) Animation to a Property</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Concepts
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="bd9ce563-725d-4385-87c9-d7ee38cf79ea.xaml">Animation Overview</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="1a698c3c-30f1-4b30-ae56-57e8a39811bd.xaml">Storyboards Overview</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Brushes Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Animate the Color or Opacity of a SolidColorBrush to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

