<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Sample Title" x:Class="Slider_wcp.Page1" Loaded="OnLoaded">
    <Page.Resources>
        <Style x:Key="itemHeaderStyler">
            <Setter Property="ListBoxItem.Margin" Value="0,2,0,5" />
            <Setter Property="ListBoxItem.Padding" Value="2" />
            <Setter Property="ListBoxItem.FontFamily" Value="Verdana" />
            <Setter Property="ListBoxItem.FontWeight" Value="Bold" />
            <Setter Property="ListBoxItem.FontSize" Value="12" />
        </Style>
        <Style x:Key="imageStyler">
            <Setter Property="TextBlock.Margin" Value="15" />
        </Style>
        <Style x:Key="HeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="20" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="TabStyle">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabStyle2">
            <Setter Property="TabItem.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="TabItem.Foreground" Value="Black" />
        </Style>
        <Style x:Key="SubHeaderStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.FontSize" Value="16" />
            <Setter Property="TextBlock.Foreground" Value="DarkSlateBlue" />
            <Setter Property="TextBlock.Margin" Value="10" />
        </Style>
        <Style x:Key="DisStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="8" />
            <Setter Property="TextBlock.Foreground" Value="Gray" />
            <Setter Property="TextBlock.Margin" Value="5,0,5,0" />
        </Style>
        <Style x:Key="mainContentStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="5,10,5,10" />
        </Style>
        <Style x:Key="tocStyle">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.Margin" Value="0" />
        </Style>
        <Style x:Key="CodeSnippetParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Courier New" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10,0,10,0" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="noteParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Verdana" />
            <Setter Property="TextBlock.FontSize" Value="11" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10" />
            <Setter Property="TextBlock.Background" Value="LightGray" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="TCStyle">
            <Setter Property="TabControl.Margin" Value="10" />
        </Style>
    </Page.Resources>
    <TabControl MinHeight="500" MaxHeight="700" MinWidth="400" Style="{StaticResource TCStyle}">
        <TabItem Style="{StaticResource TabStyle}" Header="Slider Sample" IsSelected="true">
            <StackPanel>
                <TextBlock Style="{StaticResource HeaderStyle}">Slider</TextBlock>
                <TextBlock Style="{StaticResource mainContentStyle}">This example demonstrates how to create a slider control.</TextBlock>
                <TextBlock Style="{StaticResource mainContentStyle}">The preview window renders code from the C#+Markup tab. The C# standalone code is provided for reference purposes.</TextBlock>
            </StackPanel>
        </TabItem>
        <TabItem Name="xaml" Style="{StaticResource TabStyle}" Header="XAML">
        </TabItem>
        <TabItem Name="xamlcsharp" Style="{StaticResource TabStyle}" Header="XAML + C#">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xcsharpCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                    <ScrollViewer HorizontalScrollBarVisibility="Visible">
                        <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">                  
                  
&lt;StackPanel  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="Slider_wcp.Pane1"
    &gt;
    &lt;!--  The namespace + class name in the codebehind file and the x:Class attribute in the root of this document, must stay identical.  You can change them, but you must keep them in sync. --&gt;


&lt;Grid ShowGridLines ="false" Background ="White" &gt;
&lt;ColumnDefinition Width="300"/&gt;
&lt;ColumnDefinition Width="250"/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;RowDefinition/&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="0" FontSize="24"&gt;Sliders&lt;/TextBlock&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="1" FontSize="14" Grid.ColumnSpan="2"&gt;The following slider examples demonstrate:&lt;/TextBlock&gt;  
    
&lt;Slider Orientation="Horizontal" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="2" Value="0" HorizontalAlignment="Left"/&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="2" FontSize="12" VerticalAlignment="Center"&gt;Horizontal Slider.&lt;/TextBlock&gt; 

&lt;Slider Orientation="Vertical" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="3" Height="50"/&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="3" FontSize="12" VerticalAlignment="Center"&gt;Vertical Slider.&lt;/TextBlock&gt;

&lt;Slider Orientation="Horizontal" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="4" Value="50" HorizontalAlignment="Left" IsSnapToTickEnabled="True" Maximum="3" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" TickFrequency="1"/&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="4" FontSize="12" VerticalAlignment="Center"&gt;Horizontal Slider with tick bar.&lt;/TextBlock&gt;

&lt;Button Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="5" Click="OnClick" HorizontalAlignment="Left"&gt;Click me to create a slider with C# code.&lt;/Button&gt;
&lt;TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="5" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap"&gt;Creating a slider with C#.&lt;/TextBlock&gt;
&lt;/Grid&gt;

&lt;Canvas Name="cv1" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="6"&gt;&lt;/Canvas&gt;  

&lt;/StackPanel&gt;
</TextBox>
                    </ScrollViewer>
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="C#">
                    <ScrollViewer HorizontalScrollBarVisibility="Visible">
                        <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">     
//This is a list of commonly used namespaces for a pane.
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Data;

namespace Slider_wcp
{
	/// &lt;summary&gt;
	/// Interaction logic for Pane1.xaml
	/// &lt;/summary&gt;

	public partial class Pane1 : StackPanel
	{
	   void OnClick(object sender, RoutedEventArgs e)
		{ 
                 cv1.Children.Clear();
	         //Slider Orientation="Horizontal" hslider = new Slider Orientation="Horizontal"();
                 hslider.Width = 100;
                 cv1.Children.Add(hslider);
		}

	}
}                    
                    
                    
                    
                    </TextBox>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="xamlvb" Style="{StaticResource TabStyle}" Header="XAML + Visual Basic.NET">
            <TabControl TabStripPlacement="Right">
                <TabItem Name="xvbCheck" Style="{StaticResource TabStyle2}" Header="XAML">
                </TabItem>
                <TabItem Style="{StaticResource TabStyle2}" Header="VB.NET">
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Name="csharp" Style="{StaticResource TabStyle}" Header="C#">
            <ScrollViewer HorizontalScrollBarVisibility="Visible">
                <TextBlock Name="csharpCheck">
                    <TextBox Style="{StaticResource CodeSnippetParagraph}" xml:space="preserve">
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Threading;

namespace WCSample
{
	public class MyApp : System.Windows.Application
	{
		System.Windows.Controls.Slider Orientation="Horizontal" hslider;

		System.Windows.Controls.Slider Orientation="Vertical" vslider;

		System.Windows.Window mainWindow;

		System.Windows.Controls.Canvas cv;

		System.Windows.Controls.TextBlock txt1, txt2;

		protected override void OnStartingUp(StartingUpCancelEventArgs e)
		{
			base.OnStartingUp(e);
			CreateAndShowMainWindow();
		}

		private void CreateAndShowMainWindow()
		{
			// Create the application's main window
			mainWindow = new System.Windows.Window();

			// Create two sliders
			cv = new Canvas();
			mainWindow.Content = cv;
			hslider = new Slider Orientation="Horizontal"();
			vslider = new Slider Orientation="Vertical"();
			cv.Children.Add(hslider);
			cv.Children.Add(vslider);
			hslider.Width = 250;
			vslider.Height = 250;
			System.Windows.Controls.Canvas.SetTop(hslider, 10);
			System.Windows.Controls.Canvas.SetTop(vslider, 50);
			txt1 = new TextBlock();
			txt1.Text = "Horizontal Slider";
			cv.Children.Add(txt1);
			System.Windows.Controls.Canvas.SetTop(txt1, 25);
			System.Windows.Controls.Canvas.SetLeft(txt1, 60);
			txt2 = new TextBlock();
			txt2.Text = "Vertical Slider";
			System.Windows.Controls.Canvas.SetTop(txt2, 175);
			System.Windows.Controls.Canvas.SetLeft(txt2, 20);
			cv.Children.Add(txt2);
			mainWindow.Show();
		}

		internal sealed class EntryClass
		{
			[System.STAThread()]
			private static void Main()
			{
				MyApp app = new MyApp();

				app.Run();
			}
		}
	}
}

               
               
               </TextBox>
                </TextBlock>
            </ScrollViewer>
        </TabItem>
        <TabItem Name="vb" Style="{StaticResource TabStyle}" Header="Visual Basic.NET">
        </TabItem>
        <TabItem Name="managedcpp" Style="{StaticResource TabStyle}" Header="Managed C++">
        </TabItem>
        <TabItem Style="{StaticResource TabStyle}" Header="Preview Sample">
            <StackPanel>
                <!--  The namespace + class name in the codebehind file and the x:Class attribute in the root of this document, must stay identical.  You can change them, but you must keep them in sync. -->
                <Grid ShowGridLines="false" Background="White">
                    <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="250" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="0" FontSize="24">Sliders</TextBlock>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="1" FontSize="14" Grid.ColumnSpan="2">The following slider examples demonstrate:</TextBlock>
                    <Slider Orientation="Horizontal" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="2" Value="0" HorizontalAlignment="Left" />
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="2" FontSize="12" VerticalAlignment="Center">Horizontal Slider.</TextBlock>
                    <Slider Orientation="Vertical" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="3" Height="50" />
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="3" FontSize="12" VerticalAlignment="Center">Vertical Slider.</TextBlock>
                    <Slider Orientation="Horizontal" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="4" Value="50" HorizontalAlignment="Left" IsSnapToTickEnabled="True" Maximum="3" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" TickFrequency="1" />
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="4" FontSize="12" VerticalAlignment="Center">Horizontal Slider with tick bar.</TextBlock>
                    <!-- 
    <Button Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="5" Click="OnClick" HorizontalAlignment="Left">Click me to create a slider with C# code.</Button>
-->
                    <Button Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="5" HorizontalAlignment="Left">Click me to create a slider with C# code.</Button>
                    <TextBlock Margin="10, 10, 3, 3" Grid.Column="1" Grid.Row="5" FontSize="12" VerticalAlignment="Center" TextWrapping="Wrap">Creating a slider with C#.</TextBlock>
                </Grid>
                <Canvas Name="cv1" Margin="10, 10, 3, 3" Grid.Column="0" Grid.Row="6">
                </Canvas>
            </StackPanel>
        </TabItem>
    </TabControl>
</Page>