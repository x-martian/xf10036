<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_6cf7e275_df76_41c6_a611_53b889b8fd5a"
  Tag     ="Create and Bind to an ObservableCollection"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Create and Bind to an ObservableCollection</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to create and bind to a collection that derives from the ObservableCollection class, which is a collection class that provides notifications when items get added or removed.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example shows the implementation of a <Run>NameList</Run>
 collection:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>public class NameList : ObservableCollection
&lt;PersonName> { public NameList() : base() { Add(new PersonName("Willa", "Cather")); 
Add(new PersonName("Isak", "Dinesen")); 
Add(new PersonName("Victor", "Hugo")); 
Add(new PersonName("Jules", "Verne")); 
} } public class PersonName { private string firstName; 
private string lastName; 
public PersonName(string first, string last) { this.firstName = first; 
this.lastName = last; 
} public string FirstName { get { return firstName; 
} set { firstName = value; 
} } public string LastName { get { return lastName; 
} set { lastName = value; 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>You can make the collection available for binding the same way you would with other common language runtime (CLR) objects, as described in <Hyperlink NavigateUri="7103c2e8-0e31-4a13-bf12-ca382221a8d5.xaml">How to: Make Data Available for Binding in XAML</Hyperlink>
. For example, you can instantiate the collection in XAML and specify the collection as a resource, as shown here:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Span>
&lt;Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c="clr-namespace:SDKSample" x:Class="SDKSample.Window1" Width="400" Height="280" Title="MultiBinding Sample"> 
&lt;Window.Resources> 
&lt;c:NameList x:Key="NameListData"/> <Run>... </Run>
 
&lt;/Window.Resources> </Span>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>You can then bind to the collection:
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;ListBox Width="200" ItemsSource="{Binding Source={StaticResource NameListData}}" ItemTemplate="{StaticResource NameItemTemplate}" IsSynchronizedWithCurrentItem="True"/> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The definition of <Run>NameItemTemplate</Run>
 is not shown here. For the complete sample, see Implementing Parameterized MultiBinding Sample.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph>Note: 
            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph>The objects in your collection must satisfy the requirements described in the <Hyperlink NavigateUri="2df2cd11-6aac-4bdf-ab7b-ea5f464cd5ca.xaml">Binding Sources Overview</Hyperlink>
. In particular, if you are using OneWay or TwoWay (for example, you want your UI to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the INotifyPropertyChanged interface.
            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For more information, see the Binding to Collections section in the <Hyperlink NavigateUri="c707c95f-7811-401d-956e-2fffd019a211.xaml">Data Binding Overview</Hyperlink>
.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="f4c43578-01b7-4774-a953-acb95a13b94a.xaml">How to: Sort Data in View</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="c76e8606-4cc4-45a8-9110-e2ec66dc6afd.xaml">How to: Filter Data in a View</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="145c8c3f-dbdd-4d0d-816f-90b35eba7eda.xaml">How to: Sort and Group Data Using a View in XAML</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>Showing System Colors Using Data Services Sample
      <LineBreak/>Binding with an ObservableCollection Sample
      <LineBreak/>Data Binding Overviews
      <LineBreak/>Data Binding Samples
      <LineBreak/><Hyperlink NavigateUri="a3b2563e-d879-41a7-9dfd-ac56b27fdcad.xaml">Data Binding How-to Topics</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Create and Bind to an ObservableCollection to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

