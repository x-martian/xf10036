<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_7c0f6885_47ec_43cb_b234_82beda477849"
  Tag     ="TabControl Overview"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>TabControl Overview</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>A TabControl enables a developer to arrange visual content in a compacted and organized form. The real-world analog of the control might be a tabbed notebook in which visual content is displayed on discrete pages accessed by selecting the appropriate tab. This topic introduces the <Run FontWeight="Bold">TabControl</Run>
 class and provides examples of how to use it in both Extensible Application Markup Language (XAML) and C#.
    </Paragraph>

    <Paragraph/>
    <Paragraph>This topic contains the following sections.
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph><Hyperlink TargetName="tabcontrol">TabControl</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="creating_tabcontrols">Creating TabControls</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="tabcontrol_styling">TabControl Styling</Hyperlink>

        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph><Hyperlink TargetName="seeAlsoSection">Related Topics</Hyperlink>

        </Paragraph>

      </ListItem>

    </List>

    <Paragraph FontSize="22">TabControl
    </Paragraph>

    <Paragraph>A <Run FontWeight="Bold">TabControl</Run>
 contains TabItem elements with headers (titles) that identify the content of the tab page. The <Run FontWeight="Bold">TabControl</Run>
 is useful for minimizing screen space usage, while allowing an application to expose a large amount of data. The user navigates through the items by clicking on the tabs using the mouse or by using the keyboard. 
    </Paragraph>

    <Paragraph><Run FontWeight="Bold">Typical TabControl</Run>

    </Paragraph>

    <Paragraph><Run FontWeight="Bold"/>
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="22">Creating TabControls
    </Paragraph>

    <Paragraph>The following example shows how to create a <Run FontWeight="Bold">TabControl</Run>
 in XAML and add a C# event handler. This application demonstrates how properties of the Control class can be changed.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;TabControl TabStripPlacement="Top" Margin="0, 0, 0, 10"> 
&lt;TabItem Name="backgroundcolor" Header="Background"> 
&lt;TabItem.Content>Background property information goes here.
&lt;/TabItem.Content> 
&lt;/TabItem> 
&lt;TabItem Name="foregroundcolor" Header="Foreground"> 
&lt;TabItem.Content>Foreground property information goes here.
&lt;/TabItem.Content> 
&lt;/TabItem> 
&lt;TabItem Name="bordercolor" Header="BorderColor"> 
&lt;TabItem.Content>Border color property information goes here.
&lt;/TabItem.Content> 
&lt;/TabItem> 
&lt;/TabControl> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The following example shows how to generate a <Run FontWeight="Bold">TabControl</Run>
 in C#.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>tabcon = new System.Windows.Controls.TabControl(); 
ti1 = new TabItem(); 
ti1.Header = "Background"; 
tabcon.Items.Add(ti1); 
ti2 = new TabItem(); 
ti2.Header = "Foreground"; 
tabcon.Items.Add(ti2); 
ti3 = new TabItem(); 
ti3.Header = "FontFamily"; 
tabcon.Items.Add(ti3); 
cv2.Children.Add(tabcon); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For the complete sample see TabControl Sample.
    </Paragraph>

    <Paragraph FontSize="22">TabControl Styling
    </Paragraph>

    <Paragraph>With control styling, you can dramatically change the appearance and behavior of <Run FontWeight="Bold">TabControl</Run>
 elements without having to write a custom control. In addition to setting visual properties, you can also apply styles to individual parts of a control, change the behavior of parts of the control through properties, or add additional parts or change the layout of a control. The following examples demonstrate several ways to change tab controls. 
    </Paragraph>

    <Paragraph>The first code example defines a style called <Run FontStyle="italic">SimpleTabControl</Run>
 that is applied to a <Run FontWeight="Bold">TabControl</Run>
 to change the location of the tab strip and the color of the background. A <Run FontWeight="Bold">TabControl</Run>
 may be placed at the top, bottom, left, or right of a window. The following style assigns the tab strip placement to the top of a window.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Style x:Key="SimpleTabControl" TargetType="{x:Type TabControl}"> 
&lt;Setter Property = "TabStripPlacement" Value = "Top"/> 
&lt;Setter Property = "Foreground" Value= "Blue"/> 
&lt;/Style> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example styles the individual items of a <Run FontWeight="Bold">TabControl</Run>
. The <Run FontStyle="italic">SimpleTabItem</Run>
 style changes the background color and the font weight of the items.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Style x:Key="SimpleTabItem" TargetType="{x:Type TabItem}"> 
&lt;Setter Property = "Background" Value = "Pink"/> 
&lt;Setter Property = "FontWeight" Value = "Bold"/> 
&lt;/Style> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>The final sample styles the items of a <Run FontWeight="Bold">TabControl</Run>
, not the control itself. The <Run FontStyle="italic">Triggers</Run>
 style uses triggers that enable you to change the appearance of a <Run FontWeight="Bold">TabItem</Run>
 in response to events that occur on the item. When you move the mouse over the items, the background and foreground colors change.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Style x:Key="Triggers" TargetType="{x:Type TabItem}"> 
&lt;Style.Triggers> 
&lt;Trigger Property="TabItem.IsMouseOver" Value="true"> 
&lt;Setter Property = "Foreground" Value="Green"/> 
&lt;Setter Property = "Background" Value="Red"/> 
&lt;/Trigger> 
&lt;/Style.Triggers> 
&lt;/Style> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>For the complete sample see TabControl Styles Sample.
    </Paragraph>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="3ac7274a-9ad4-4404-9061-47a3de1311d5.xaml">How to: Position Tabs on a TabControl</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="a3cba28c-189d-4f20-8f4c-1f0a54e77bbc.xaml">How to: Create a TabControl</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph>WPF Controls Gallery Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about TabControl Overview to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

