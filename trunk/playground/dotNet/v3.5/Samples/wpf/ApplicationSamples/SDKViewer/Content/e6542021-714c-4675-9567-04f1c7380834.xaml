<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_e6542021_714c_4675_9567_04f1c7380834"
  Tag     ="Animate a Property by Using an AnimationClock"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Animate a Property by Using an AnimationClock</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to use Clock objects to animate properties.
    </Paragraph>

    <Paragraph>There are three ways to animate a <Run>dependency property</Run>
: 
    </Paragraph>

    <List MarkerStyle="Disc">
      <ListItem>
        <Paragraph>Create an AnimationTimeline and associate it with that property by using a Storyboard. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Use the object's BeginAnimation method to apply a single <Run FontWeight="Bold">AnimationTimeline</Run>
 to a target property. 
        </Paragraph>

      </ListItem>

      <ListItem>
        <Paragraph>Create a <Run FontWeight="Bold">Clock</Run>
 from an <Run FontWeight="Bold">AnimationTimeline</Run>
 and apply it to a property.
        </Paragraph>

      </ListItem>

    </List>

    <Paragraph><Run FontWeight="Bold">Storyboard</Run>
 objects and the <Run FontWeight="Bold">BeginAnimation</Run>
 method enable you to animate properties without directly creating and distributing clocks (see <Hyperlink NavigateUri="f4a314e9-1da2-4367-85fc-1232487efa7a.xaml">How to: Animate a Property by Using a Storyboard</Hyperlink>
 and <Hyperlink NavigateUri="d411db70-4df7-487d-82bc-95a7c1b2e7f8.xaml">How to: Apply a Local (Non-Storyboard) Animation to a Property</Hyperlink>
 for examples); 
clocks are created and distributed for you automatically. 
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>The following example shows how to create an AnimationClock and apply it to two similar properties.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>/* This example shows how to create and apply an AnimationClock. */ using System; 
using System.Windows; 
using System.Windows.Controls; 
using System.Windows.Media; 
using System.Windows.Shapes; 
using System.Windows.Media.Animation; 
namespace Microsoft.Samples.Animation.TimingBehaviors { public class AnimationClockExample : Page { ScaleTransform myScaleTransform; 
public AnimationClockExample() { this.WindowTitle = "Opacity Animation Example"; 
this.Background = Brushes.White; 
StackPanel myStackPanel = new StackPanel(); 
myStackPanel.Margin = new Thickness(20); 
// Create a button that with a ScaleTransform. // The ScaleTransform will animate when the // button is clicked. Button myButton = new Button(); 
myButton.Margin = new Thickness(50); 
myButton.HorizontalAlignment = HorizontalAlignment.Left; 
myButton.Content = "Click Me"; 
myScaleTransform = new ScaleTransform(1,1); 
myButton.RenderTransform = myScaleTransform; 
// Associate an event handler with the // button's Click event. myButton.Click += new RoutedEventHandler(myButton_Clicked); 
myStackPanel.Children.Add(myButton); 
this.Content = myStackPanel; 
} // Create and apply and animation whenthe button is clicked. private void myButton_Clicked(object sender, RoutedEventArgs e) { // Create a DoubleAnimation to animate the // ScaleTransform. DoubleAnimation myAnimation = new DoubleAnimation( 1, // "From" value 5, // "To" value new Duration(TimeSpan.FromSeconds(5)) ); 
myAnimation.AutoReverse = true; 
// Create a clock the for the animation. AnimationClock myClock = myAnimation.CreateClock(); 
// Associate the clock the ScaleX and // ScaleY properties of the button's // ScaleTransform. myScaleTransform.ApplyAnimationClock( ScaleTransform.ScaleXProperty, myClock); 
myScaleTransform.ApplyAnimationClock( ScaleTransform.ScaleYProperty, myClock); 
} } } </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="f4a314e9-1da2-4367-85fc-1232487efa7a.xaml">How to: Animate a Property by Using a Storyboard</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="d411db70-4df7-487d-82bc-95a7c1b2e7f8.xaml">How to: Apply a Local (Non-Storyboard) Animation to a Property</Hyperlink>

      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Animate a Property by Using an AnimationClock to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

