<!--
/////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) Microsoft Corporation, 2006.  All rights reserved.
//
/////////////////////////////////////////////////////////////////////////////
-->


<cc:SdkSinglePageViewer
  Name    ="_02e7a5de_94eb_4953_b91c_52e6c872ad5b"
  Tag     ="Use SystemParameters"
  xmlns:cc="clr-namespace:Microsoft.Windows.SdkViewer.Controls;assembly=SdkViewer"
  xmlns   ="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>How to: Use SystemParameters</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>This example shows how to access and use the properties of SystemParameters in order to style or customize a button.
    </Paragraph>

    <Paragraph FontSize="22">Example
    </Paragraph>

    <Paragraph>System resources expose several system based settings as resources in order to help you create visuals that are consistent with system settings. <Run FontWeight="Bold">SystemParameters</Run>
 is a class that contains both system parameter value properties, and resource keys that bind to the values. For example, FullPrimaryScreenHeight is a <Run FontWeight="Bold">SystemParameters</Run>
 property value and FullPrimaryScreenHeightKey is the corresponding resource key. 
    </Paragraph>

    <Paragraph>In XAML, you can use the members of <Run FontWeight="Bold">SystemParameters</Run>
 as either a static property usage, or a dynamic resource references (with the static property value as the key). Use a dynamic resource reference if you want the system based value to update automatically while the application runs; 
otherwise, use a static reference. Resource keys have the suffix <Run FontWeight="Bold">Key</Run>
 appended to the property name. 
    </Paragraph>

    <Paragraph>The following example shows how to access and use the static values of <Run FontWeight="Bold">SystemParameters</Run>
 to style or customize a button. This markup example sizes a button by applying <Run FontWeight="Bold">SystemParameters</Run>
 values to a button.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>XAML </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>
&lt;Button FontSize="8" Margin="10, 10, 5, 5" Grid.Column="0" Grid.Row="5" HorizontalAlignment="Left" Height="{x:Static SystemParameters.CaptionHeight}" Width="{x:Static SystemParameters.IconGridWidth}"> SystemParameters 
&lt;/Button> </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph>To use the values of <Run FontWeight="Bold">SystemParameters</Run>
 in code, you do not have to use either static references or dynamic resource references. Instead, use the values of the <Run FontWeight="Bold">SystemParameters</Run>
 class. Although the non-key properties are apparently defined as static properties, the runtime behavior of WPF as hosted by the system will reevaluate the properties in realtime, and will properly account for user-driven changes to system values. The following example shows how to set the width and height of a button by using <Run FontWeight="Bold">SystemParameters</Run>
 values.
    </Paragraph>

    <Table CellSpacing="5">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="22"><Run>C# </Run>

            </Paragraph>

          </TableCell>

        </TableRow>

        <TableRow>
          <TableCell>
            <Paragraph xml:space="preserve" TextAlignment="Left" FontSize="8pt" FontFamily="Courier New"><Run>Button btncsharp = new Button(); 
btncsharp.Content = "SystemParameters"; 
btncsharp.FontSize = 8; 
btncsharp.Background = SystemColors.ControlDarkDarkBrush; 
btncsharp.Height = SystemParameters.CaptionHeight; 
btncsharp.Width = SystemParameters.IconGridWidth; 
cv2.Children.Add(btncsharp); 
</Run>

            </Paragraph>

          </TableCell>

        </TableRow>

      </TableRowGroup>

    </Table>

    <Paragraph FontSize="22"><Run>See Also</Run>

    </Paragraph>

    <Paragraph FontSize="16pt">Tasks
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="5141a763-9235-42cb-a6bb-afc75513eac7.xaml">How to: Paint an Area with a System Brush</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="3f46a4ec-2225-408a-8123-8838a8f7057a.xaml">How to: Use SystemFonts</Hyperlink>

      <LineBreak/><Hyperlink NavigateUri="77571283-d16c-45bb-9f69-cafbbf72b21e.xaml">How to: Use System Parameters Keys</Hyperlink>

      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Reference
    </Paragraph>

    <Paragraph>SystemParameters
      <LineBreak/>
    </Paragraph>

    <Paragraph FontSize="16pt">Other Resources
    </Paragraph>

    <Paragraph><Hyperlink NavigateUri="9f986a6d-7cc8-45ac-bb0f-43177a57649d.xaml">Resources How-to Topics</Hyperlink>

      <LineBreak/>Resources Samples
      <LineBreak/>Button Styles Sample
      <LineBreak/>
      <LineBreak/>
    </Paragraph>

    <Paragraph/>
    <Paragraph/>
    <Paragraph><Span><Hyperlink NavigateUri="mailto:wsdkfdb@microsoft.com?subject=Feedback">Send comments</Hyperlink>
 about How to: Use SystemParameters to Microsoft. </Span>

    </Paragraph>

  </FlowDocument>

</cc:SdkSinglePageViewer>

